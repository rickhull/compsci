Run options: --seed 32337

# Running:

...........................S..S.........

Finished in 0.265942s, 150.4086 runs/s, 3301.4690 assertions/s.

40 runs, 878 assertions, 0 failures, 0 errors, 2 skips

You have skipped tests. Run with --verbose for details.
ruby -Ilib examples/timer.rb
/proc/loadavg 0.00 0.00 0.00 1/80 5796

running sleep 0.01 (50x): ..................................................
each: 0.010
elapsed: 0.521
cumulative: 0.521

running sleep 0.02 (0.3 s): ...............
each: 0.020
elapsed: 0.307
cumulative: 0.828

ruby -Ilib examples/binary_tree.rb


#
# 3 seconds worth of pushes
#

100th push: 0.00000254 s
200th push: 0.00000223 s
300th push: 0.00000240 s
400th push: 0.00000233 s
500th push: 0.00000289 s
600th push: 0.00000245 s
700th push: 0.00000295 s
800th push: 0.00000249 s
900th push: 0.00000310 s
1000th push: 0.00000285 s
-----------
    1k push: 0.0535 s (18688 push / s)

1100th push: 0.00000534 s
1200th push: 0.00000290 s
1300th push: 0.00000306 s
1400th push: 0.00000317 s
1500th push: 0.00000306 s
1600th push: 0.00000352 s
1700th push: 0.00000307 s
1800th push: 0.00000468 s
1900th push: 0.00000338 s
2000th push: 0.00000353 s
-----------
    1k push: 0.1950 s (5127 push / s)

2100th push: 0.00000369 s
2200th push: 0.00000425 s
2300th push: 0.00000496 s
2400th push: 0.00000511 s
2500th push: 0.00000525 s
2600th push: 0.00000518 s
2700th push: 0.00000504 s
2800th push: 0.00000538 s
2900th push: 0.00000542 s
3000th push: 0.00000571 s
-----------
    1k push: 0.4210 s (2375 push / s)

3100th push: 0.00000540 s
3200th push: 0.00000569 s
3300th push: 0.00000538 s
3400th push: 0.00000461 s
3500th push: 0.00000506 s
3600th push: 0.00000535 s
3700th push: 0.00000587 s
3800th push: 0.00000794 s
3900th push: 0.00000530 s
4000th push: 0.00000544 s
-----------
    1k push: 0.7031 s (1422 push / s)

4100th push: 0.00000561 s
4200th push: 0.00000576 s
4300th push: 0.00000554 s
4400th push: 0.00000554 s
4500th push: 0.00000590 s
4600th push: 0.00000575 s
4700th push: 0.00000577 s
4800th push: 0.00000556 s
4900th push: 0.00000583 s
5000th push: 0.00000573 s
-----------
    1k push: 1.0770 s (928 push / s)

5100th push: 0.00000603 s
5200th push: 0.00000554 s
5300th push: 0.00000702 s
pushed 5399 items in 3.0 s

#
# 30 inserts, puts, df_search
#

[55, 67, 19, 74, 31, 4, 8, 56, 94, 26, 37, 55, 19, 23, 50, 77, 71, 97, 93, 58, 1, 51, 29, 84, 59, 95, 69, 96, 75, 7]
                                        55                                      
                    67                                      19                  
          74                  31                  4                   8         
     56        94        26        37        55        19        23        50   
   77   71   97   93   58   1    51   29   84   59   95   69   96   75   7 
visited 55
visited 67
visited 74
visited 56
visited 77
visited 71
visited 94
visited 97
visited 93
visited 31
visited 26
visited 58
visited 1
visited 37
visited 51
visited 29
visited 19
visited 4
visited 55
visited 84
visited 59
visited 19
visited 95
visited 69
visited 8
visited 23
visited 96
visited 75
visited 50
visited 7

#<CompSci::BinaryTree:0x00555c7912e960 @root=#<CompSci::ChildNode:0x2aae3c89749ci @value=55 @children=[67, 19]>, @child_slots=2, @open_parent=#<CompSci::ChildNode:0x2aae3c896b28i @value=50 @children=[7]>>

ruby -Ilib examples/heap.rb


#
# 3 seconds worth of pushes
#

10000th push: 0.00000279 s
20000th push: 0.00000299 s
30000th push: 0.00000130 s
40000th push: 0.00000184 s
50000th push: 0.00000338 s
60000th push: 0.00000214 s
70000th push: 0.00000219 s
80000th push: 0.00000218 s
90000th push: 0.00000229 s
100000th push: 0.00000228 s
-------------
    100k push: 0.17871219 s (559k push / s)

110000th push: 0.00000520 s
120000th push: 0.00000174 s
130000th push: 0.00000126 s
140000th push: 0.00000211 s
150000th push: 0.00000264 s
160000th push: 0.00000169 s
170000th push: 0.00000125 s
180000th push: 0.00000171 s
190000th push: 0.00000290 s
200000th push: 0.00000119 s
-------------
    100k push: 0.17637044 s (566k push / s)

210000th push: 0.00000181 s
220000th push: 0.00000144 s
230000th push: 0.00000316 s
240000th push: 0.00000126 s
250000th push: 0.00000124 s
260000th push: 0.00000411 s
270000th push: 0.00000127 s
280000th push: 0.00000182 s
290000th push: 0.00000966 s
300000th push: 0.00000197 s
-------------
    100k push: 0.17955592 s (556k push / s)

310000th push: 0.00000243 s
320000th push: 0.00000188 s
330000th push: 0.00000231 s
340000th push: 0.00000309 s
350000th push: 0.00000128 s
360000th push: 0.00000127 s
370000th push: 0.00000390 s
380000th push: 0.00000123 s
390000th push: 0.00000214 s
400000th push: 0.00000417 s
-------------
    100k push: 0.18021938 s (554k push / s)

410000th push: 0.00000343 s
420000th push: 0.00000181 s
430000th push: 0.00000188 s
440000th push: 0.00000184 s
450000th push: 0.00000160 s
460000th push: 0.00000125 s
470000th push: 0.00000234 s
480000th push: 0.00000269 s
490000th push: 0.00000288 s
500000th push: 0.00000112 s
-------------
    100k push: 0.18029699 s (554k push / s)

510000th push: 0.00000144 s
520000th push: 0.00000176 s
530000th push: 0.00000128 s
540000th push: 0.00000324 s
550000th push: 0.00000126 s
560000th push: 0.00000122 s
570000th push: 0.00000119 s
580000th push: 0.00000174 s
590000th push: 0.00000220 s
600000th push: 0.00000129 s
-------------
    100k push: 0.17800436 s (561k push / s)

610000th push: 0.00000416 s
620000th push: 0.00000141 s
630000th push: 0.00000121 s
640000th push: 0.00000395 s
650000th push: 0.00000225 s
660000th push: 0.00000138 s
670000th push: 0.00000282 s
680000th push: 0.00000131 s
690000th push: 0.00000144 s
700000th push: 0.00000127 s
-------------
    100k push: 0.17919552 s (558k push / s)

710000th push: 0.00000120 s
720000th push: 0.00000123 s
730000th push: 0.00000122 s
740000th push: 0.00000172 s
750000th push: 0.00000154 s
760000th push: 0.00000136 s
770000th push: 0.00000176 s
780000th push: 0.00000121 s
790000th push: 0.00000122 s
800000th push: 0.00000175 s
-------------
    100k push: 0.17740244 s (563k push / s)

810000th push: 0.00000163 s
820000th push: 0.00000254 s
830000th push: 0.00000216 s
840000th push: 0.00000284 s
850000th push: 0.00000130 s
860000th push: 0.00000135 s
870000th push: 0.00000130 s
880000th push: 0.00000172 s
890000th push: 0.00000254 s
900000th push: 0.00000129 s
-------------
    100k push: 0.17933458 s (557k push / s)

910000th push: 0.00000132 s
920000th push: 0.00000222 s
930000th push: 0.00000209 s
940000th push: 0.00000219 s
950000th push: 0.00000126 s
960000th push: 0.00000122 s
970000th push: 0.00000169 s
980000th push: 0.00000133 s
990000th push: 0.00000118 s
1000000th push: 0.00000186 s
-------------
    100k push: 0.17983168 s (556k push / s)

1010000th push: 0.00000459 s
1020000th push: 0.00000215 s
1030000th push: 0.00000352 s
1040000th push: 0.00000133 s
1050000th push: 0.00000125 s
1060000th push: 0.00000212 s
1070000th push: 0.00000138 s
1080000th push: 0.00000178 s
1090000th push: 0.00000218 s
1100000th push: 0.00000132 s
-------------
    100k push: 0.17951838 s (557k push / s)

1110000th push: 0.00000128 s
1120000th push: 0.00000262 s
1130000th push: 0.00000123 s
1140000th push: 0.00000123 s
1150000th push: 0.00000226 s
1160000th push: 0.00000271 s
1170000th push: 0.00000137 s
1180000th push: 0.00000129 s
1190000th push: 0.00000125 s
1200000th push: 0.00000288 s
-------------
    100k push: 0.17855624 s (560k push / s)

1210000th push: 0.00000226 s
1220000th push: 0.00000270 s
1230000th push: 0.00000143 s
1240000th push: 0.00000338 s
1250000th push: 0.00000180 s
1260000th push: 0.00000235 s
1270000th push: 0.00000174 s
1280000th push: 0.00000132 s
1290000th push: 0.00000121 s
1300000th push: 0.00000252 s
-------------
    100k push: 0.18017987 s (555k push / s)

1310000th push: 0.00000124 s
1320000th push: 0.00000216 s
1330000th push: 0.00000175 s
1340000th push: 0.00000168 s
1350000th push: 0.00000136 s
1360000th push: 0.00000176 s
1370000th push: 0.00000124 s
1380000th push: 0.00000122 s
1390000th push: 0.00000119 s
1400000th push: 0.00000245 s
-------------
    100k push: 0.17801154 s (561k push / s)

1410000th push: 0.00000124 s
1420000th push: 0.00000220 s
1430000th push: 0.00000231 s
1440000th push: 0.00000122 s
1450000th push: 0.00000172 s
1460000th push: 0.00001509 s
1470000th push: 0.00000134 s
1480000th push: 0.00000180 s
1490000th push: 0.00000142 s
1500000th push: 0.00000265 s
-------------
    100k push: 0.18028560 s (554k push / s)

1510000th push: 0.00000142 s
1520000th push: 0.00000138 s
1530000th push: 0.00000172 s
1540000th push: 0.00000123 s
1550000th push: 0.00000173 s
1560000th push: 0.00000194 s
1570000th push: 0.00000125 s
1580000th push: 0.00000228 s
1590000th push: 0.00000156 s
1600000th push: 0.00000163 s
-------------
    100k push: 0.18235280 s (548k push / s)

1610000th push: 0.00000113 s
1620000th push: 0.00000218 s
1630000th push: 0.00000210 s
1640000th push: 0.00000118 s
1650000th push: 0.00000298 s
1660000th push: 0.00000174 s
1670000th push: 0.00000178 s
pushed 1674718 items in 3.0 s

still a heap with 1674734 items? YES - 1.268 sec

#
# 99 inserts; display the internal array
#

push: 90 50 48 2 28 97 90 38 52 46 31 71 15 16 98 55 2 55 10 47 82 85 54 66 87 72 76 61 43 74 61 74 40 10 86 40 56 30 83 51 50 11 25 5 64 75 71 16 85 18 75 68 6 96 80 63 37 88 26 36 59 95 72 82 44 40 73 83 33 59 19 46 29 4 2 78 87 20 79 17 75 61 40 16 88 83 18 54 47 76 32 27 6 55 77 58 59 42 79
heap store: [98, 88, 97, 86, 87, 96, 95, 83, 85, 83, 77, 85, 87, 88, 90, 74, 82, 52, 83, 61, 82, 75, 76, 79, 75, 68, 80, 61, 63, 74, 90, 50, 73, 55, 59, 46, 40, 78, 79, 50, 51, 46, 75, 54, 55, 54, 71, 59, 71, 18, 66, 15, 6, 72, 76, 16, 37, 43, 26, 36, 59, 61, 72, 2, 44, 40, 40, 2, 33, 10, 19, 38, 29, 4, 2, 10, 56, 20, 30, 17, 28, 47, 40, 11, 16, 25, 18, 5, 47, 31, 32, 27, 6, 55, 64, 16, 58, 42, 48]
heap: true

pop: 98
heap store: [97, 88, 96, 86, 87, 87, 95, 83, 85, 83, 77, 85, 80, 88, 90, 74, 82, 52, 83, 61, 82, 75, 76, 79, 75, 68, 76, 61, 63, 74, 90, 50, 73, 55, 59, 46, 40, 78, 79, 50, 51, 46, 75, 54, 55, 54, 71, 59, 71, 18, 66, 15, 6, 72, 48, 16, 37, 43, 26, 36, 59, 61, 72, 2, 44, 40, 40, 2, 33, 10, 19, 38, 29, 4, 2, 10, 56, 20, 30, 17, 28, 47, 40, 11, 16, 25, 18, 5, 47, 31, 32, 27, 6, 55, 64, 16, 58, 42]
heap: true

pop: 97 96 95 90 90 88 88 87 87
heap store: [86, 85, 85, 83, 83, 80, 74, 82, 83, 82, 77, 79, 76, 63, 72, 74, 59, 52, 79, 61, 75, 75, 76, 71, 75, 68, 72, 61, 43, 59, 64, 50, 73, 55, 31, 46, 40, 78, 30, 50, 51, 46, 55, 54, 55, 54, 71, 59, 6, 18, 66, 15, 6, 32, 48, 16, 37, 16, 26, 36, 58, 61, 42, 2, 44, 40, 40, 2, 33, 10, 19, 38, 29, 4, 2, 10, 56, 20, 27, 17, 28, 47, 40, 11, 16, 25, 18, 5, 47]
heap: true


