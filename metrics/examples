Run options: --seed 16757

# Running:

...................S..S......................

Finished in 0.317629s, 141.6747 runs/s, 2842.9382 assertions/s.

45 runs, 903 assertions, 0 failures, 0 errors, 2 skips

You have skipped tests. Run with --verbose for details.
ruby -Ilib examples/binary_tree.rb
/proc/loadavg 0.31 0.16 0.06 1/82 8479

#
# 3 seconds worth of pushes
#

100th push: 0.00000254 s
200th push: 0.00000215 s
300th push: 0.00000227 s
400th push: 0.00000241 s
500th push: 0.00000251 s
600th push: 0.00000285 s
700th push: 0.00000301 s
800th push: 0.00000304 s
900th push: 0.00000294 s
1000th push: 0.00000294 s
-----------
    1k push: 0.0549 s (18227 push / s)

1100th push: 0.00000327 s
1200th push: 0.00000316 s
1300th push: 0.00000339 s
1400th push: 0.00000311 s
1500th push: 0.00000321 s
1600th push: 0.00000289 s
1700th push: 0.00000366 s
1800th push: 0.00000352 s
1900th push: 0.00000421 s
2000th push: 0.00000378 s
-----------
    1k push: 0.2017 s (4956 push / s)

2100th push: 0.00000362 s
2200th push: 0.00000614 s
2300th push: 0.00001454 s
2400th push: 0.00000487 s
2500th push: 0.00000473 s
2600th push: 0.00002662 s
2700th push: 0.00000529 s
2800th push: 0.00000524 s
2900th push: 0.00000661 s
3000th push: 0.00000564 s
-----------
    1k push: 0.4281 s (2335 push / s)

3100th push: 0.00000501 s
3200th push: 0.00000532 s
3300th push: 0.00000566 s
3400th push: 0.00000538 s
3500th push: 0.00000590 s
3600th push: 0.00000557 s
3700th push: 0.00000599 s
3800th push: 0.00000616 s
3900th push: 0.00000513 s
4000th push: 0.00000556 s
-----------
    1k push: 0.7150 s (1398 push / s)

4100th push: 0.00000589 s
4200th push: 0.00000578 s
4300th push: 0.00000562 s
4400th push: 0.00000594 s
4500th push: 0.00000511 s
4600th push: 0.00000657 s
4700th push: 0.00000622 s
4800th push: 0.00000614 s
4900th push: 0.00000687 s
5000th push: 0.00000604 s
-----------
    1k push: 1.0945 s (913 push / s)

5100th push: 0.00000632 s
5200th push: 0.00000628 s
5300th push: 0.00000605 s
pushed 5363 items in 3.0 s

#
# 30 inserts, puts, df_search
#

[37, 48, 51, 66, 12, 90, 91, 90, 83, 40, 38, 42, 28, 73, 47, 86, 51, 26, 84, 61, 5, 67, 83, 37, 9, 20, 98, 41, 87, 31]
                                        37                                      
                    48                                      51                  
          66                  12                  90                  91        
     90        83        40        38        42        28        73        47   
   86   51   26   84   61   5    67   83   37   9    20   98   41   87   31
visited 37
visited 48
visited 66
visited 90
visited 86
visited 51
visited 83
visited 26
visited 84
visited 12
visited 40
visited 61
visited 5
visited 38
visited 67
visited 83
visited 51
visited 90
visited 42
visited 37
visited 9
visited 28
visited 20
visited 98
visited 91
visited 73
visited 41
visited 87
visited 47
visited 31

#<CompSci::BinaryTree:0x0056102cca65d8 @root=#<CompSci::ChildNode:0x2b08166532d8i @value=37 @children=[48, 51]>, @child_slots=2, @open_parent=#<CompSci::ChildNode:0x2b0816652ce8i @value=47 @children=[31]>>

ruby -Ilib examples/heap.rb


#
# 3 seconds worth of pushes
#

10000th push: 0.00000190 s
20000th push: 0.00000271 s
30000th push: 0.00000223 s
40000th push: 0.00000245 s
50000th push: 0.00000220 s
60000th push: 0.00000229 s
70000th push: 0.00000176 s
80000th push: 0.00000241 s
90000th push: 0.00000268 s
100000th push: 0.00000180 s
-------------
    100k push: 0.17523855 s (570k push / s)

110000th push: 0.00000126 s
120000th push: 0.00000181 s
130000th push: 0.00000177 s
140000th push: 0.00000310 s
150000th push: 0.00000122 s
160000th push: 0.00000228 s
170000th push: 0.00000266 s
180000th push: 0.00000133 s
190000th push: 0.00000155 s
200000th push: 0.00000427 s
-------------
    100k push: 0.17511489 s (571k push / s)

210000th push: 0.00000171 s
220000th push: 0.00000121 s
230000th push: 0.00000193 s
240000th push: 0.00000185 s
250000th push: 0.00000188 s
260000th push: 0.00000122 s
270000th push: 0.00000179 s
280000th push: 0.00000188 s
290000th push: 0.00000126 s
300000th push: 0.00000125 s
-------------
    100k push: 0.17539882 s (570k push / s)

310000th push: 0.00000223 s
320000th push: 0.00000230 s
330000th push: 0.00000263 s
340000th push: 0.00000181 s
350000th push: 0.00000178 s
360000th push: 0.00000227 s
370000th push: 0.00000282 s
380000th push: 0.00000182 s
390000th push: 0.00000100 s
400000th push: 0.00000261 s
-------------
    100k push: 0.17722332 s (564k push / s)

410000th push: 0.00000212 s
420000th push: 0.00000237 s
430000th push: 0.00000240 s
440000th push: 0.00000178 s
450000th push: 0.00000183 s
460000th push: 0.00000123 s
470000th push: 0.00000183 s
480000th push: 0.00000228 s
490000th push: 0.00000252 s
500000th push: 0.00000164 s
-------------
    100k push: 0.17905071 s (558k push / s)

510000th push: 0.00000119 s
520000th push: 0.00000149 s
530000th push: 0.00000137 s
540000th push: 0.00000184 s
550000th push: 0.00000286 s
560000th push: 0.00000268 s
570000th push: 0.00000228 s
580000th push: 0.00000293 s
590000th push: 0.00000298 s
600000th push: 0.00000182 s
-------------
    100k push: 0.17706326 s (564k push / s)

610000th push: 0.00000098 s
620000th push: 0.00000134 s
630000th push: 0.00000120 s
640000th push: 0.00000250 s
650000th push: 0.00000314 s
660000th push: 0.00000178 s
670000th push: 0.00000171 s
680000th push: 0.00000175 s
690000th push: 0.00000117 s
700000th push: 0.00000194 s
-------------
    100k push: 0.17417139 s (574k push / s)

710000th push: 0.00000140 s
720000th push: 0.00000127 s
730000th push: 0.00000178 s
740000th push: 0.00000266 s
750000th push: 0.00000352 s
760000th push: 0.00000123 s
770000th push: 0.00000254 s
780000th push: 0.00000235 s
790000th push: 0.00000317 s
800000th push: 0.00000117 s
-------------
    100k push: 0.17687954 s (565k push / s)

810000th push: 0.00000153 s
820000th push: 0.00000130 s
830000th push: 0.00000222 s
840000th push: 0.00000358 s
850000th push: 0.00000265 s
860000th push: 0.00000236 s
870000th push: 0.00000228 s
880000th push: 0.00000284 s
890000th push: 0.00000134 s
900000th push: 0.00000123 s
-------------
    100k push: 0.17664572 s (566k push / s)

910000th push: 0.00000121 s
920000th push: 0.00000422 s
930000th push: 0.00000130 s
940000th push: 0.00000222 s
950000th push: 0.00000265 s
960000th push: 0.00000120 s
970000th push: 0.00000235 s
980000th push: 0.00000122 s
990000th push: 0.00000152 s
1000000th push: 0.00000123 s
-------------
    100k push: 0.17728036 s (564k push / s)

1010000th push: 0.00000259 s
1020000th push: 0.00000119 s
1030000th push: 0.00000183 s
1040000th push: 0.00000222 s
1050000th push: 0.00000173 s
1060000th push: 0.00000265 s
1070000th push: 0.00000216 s
1080000th push: 0.00000167 s
1090000th push: 0.00000336 s
1100000th push: 0.00000127 s
-------------
    100k push: 0.17860609 s (559k push / s)

1110000th push: 0.00000139 s
1120000th push: 0.00000185 s
1130000th push: 0.00000180 s
1140000th push: 0.00000123 s
1150000th push: 0.00000191 s
1160000th push: 0.00000222 s
1170000th push: 0.00000186 s
1180000th push: 0.00000260 s
1190000th push: 0.00000197 s
1200000th push: 0.00000122 s
-------------
    100k push: 0.17422783 s (573k push / s)

1210000th push: 0.00000168 s
1220000th push: 0.00000246 s
1230000th push: 0.00000206 s
1240000th push: 0.00000138 s
1250000th push: 0.00000282 s
1260000th push: 0.00000232 s
1270000th push: 0.00000277 s
1280000th push: 0.00000175 s
1290000th push: 0.00000175 s
1300000th push: 0.00000218 s
-------------
    100k push: 0.17958988 s (556k push / s)

1310000th push: 0.00000133 s
1320000th push: 0.00000134 s
1330000th push: 0.00000127 s
1340000th push: 0.00000124 s
1350000th push: 0.00000117 s
1360000th push: 0.00000236 s
1370000th push: 0.00000428 s
1380000th push: 0.00000225 s
1390000th push: 0.00000134 s
1400000th push: 0.00000353 s
-------------
    100k push: 0.17544114 s (569k push / s)

1410000th push: 0.00000212 s
1420000th push: 0.00000396 s
1430000th push: 0.00000264 s
1440000th push: 0.00000191 s
1450000th push: 0.00000195 s
1460000th push: 0.00002096 s
1470000th push: 0.00000183 s
1480000th push: 0.00000344 s
1490000th push: 0.00000178 s
1500000th push: 0.00000121 s
-------------
    100k push: 0.17765603 s (562k push / s)

1510000th push: 0.00000127 s
1520000th push: 0.00000123 s
1530000th push: 0.00000244 s
1540000th push: 0.00000132 s
1550000th push: 0.00000223 s
1560000th push: 0.00000126 s
1570000th push: 0.00000123 s
1580000th push: 0.00000210 s
1590000th push: 0.00000118 s
1600000th push: 0.00000148 s
-------------
    100k push: 0.17438820 s (573k push / s)

1610000th push: 0.00000305 s
1620000th push: 0.00000123 s
1630000th push: 0.00000218 s
1640000th push: 0.00000225 s
1650000th push: 0.00000268 s
1660000th push: 0.00000123 s
1670000th push: 0.00000267 s
1680000th push: 0.00000187 s
1690000th push: 0.00000378 s
pushed 1699072 items in 3.0 s

still a heap with 1699088 items? YES - 1.750 sec

#
# 99 inserts; display the internal array
#

push: 97 76 74 30 2 77 90 32 48 47 43 72 75 95 36 13 4 16 46 52 23 10 11 41 15 50 47 40 50 8 72 41 12 8 11 42 14 83 0 23 1 57 62 24 26 82 65 20 58 5 65 42 73 5 62 20 37 16 56 18 9 18 71 52 90 98 26 44 40 34 35 35 21 29 44 17 77 36 40 58 4 27 61 67 55 78 31 11 97 26 2 87 15 35 20 16 58 54 48
heap store: [98, 97, 95, 90, 97, 75, 90, 83, 77, 78, 87, 72, 74, 77, 72, 76, 44, 44, 48, 58, 67, 65, 82, 58, 65, 73, 62, 40, 56, 18, 71, 41, 52, 40, 35, 35, 42, 46, 40, 23, 57, 55, 61, 26, 26, 62, 43, 58, 54, 5, 15, 42, 50, 5, 47, 20, 37, 16, 50, 8, 9, 18, 36, 13, 30, 12, 26, 4, 11, 8, 34, 16, 21, 14, 29, 17, 32, 0, 36, 2, 4, 1, 27, 23, 52, 47, 31, 10, 11, 24, 2, 11, 15, 35, 20, 16, 20, 41, 48]
heap: true

pop: 98
heap store: [97, 97, 95, 90, 87, 75, 90, 83, 77, 78, 82, 72, 74, 77, 72, 76, 44, 44, 48, 58, 67, 65, 62, 58, 65, 73, 62, 40, 56, 18, 71, 41, 52, 40, 35, 35, 42, 46, 40, 23, 57, 55, 61, 26, 26, 48, 43, 58, 54, 5, 15, 42, 50, 5, 47, 20, 37, 16, 50, 8, 9, 18, 36, 13, 30, 12, 26, 4, 11, 8, 34, 16, 21, 14, 29, 17, 32, 0, 36, 2, 4, 1, 27, 23, 52, 47, 31, 10, 11, 24, 2, 11, 15, 35, 20, 16, 20, 41]
heap: true

pop: 97 97 95 90 90 87 83 82 78
heap store: [77, 77, 75, 76, 67, 74, 72, 52, 48, 61, 65, 72, 73, 56, 71, 41, 44, 44, 46, 58, 55, 26, 62, 58, 65, 50, 62, 40, 50, 18, 36, 41, 26, 40, 35, 35, 42, 35, 40, 23, 57, 52, 47, 26, 24, 48, 43, 58, 54, 5, 15, 42, 20, 5, 47, 20, 37, 16, 20, 8, 9, 18, 16, 13, 30, 12, 2, 4, 11, 8, 34, 16, 21, 14, 29, 17, 32, 0, 36, 2, 4, 1, 27, 23, 11, 15, 31, 10, 11]
heap: true


