RUBYLIB=lib ruby-prof --exclude-common-cycles examples/complete_tree.rb -- 
/proc/loadavg 0.15 0.10 0.05 1/77 4653
#
# Print CompleteBinary-, Ternary-, and QuaternaryTree
#

[66, 25, 17, 7, 16, 58, 63, 73, 25, 81, 98, 53, 19, 82, 80, 45, 62, 42, 64, 18, 92, 86, 2, 7, 92, 96, 80, 8, 74, 11]
#<CompSci::CompleteBinaryTree:0x00555fe11729b0 @array=[66, 25, 17, 7, 16, 58, 63, 73, 25, 81, 98, 53, 19, 82, 80, 45, 62, 42, 64, 18, 92, 86, 2, 7, 92, 96, 80, 8, 74, 11], @child_slots=2>
                                       66                                       
                   25                                      17                   
          7                  16                  58                  63         
    73        25        81        98        53        19        82        80    
  45   62   42   64   18   92   86   2    7    92   96   80   8    74   11 



push: [31, 60, 3, 46, 1, 53, 57, 2, 22, 23, 44, 23, 53, 91, 41, 94, 70, 21, 49, 53, 16, 57, 93, 14, 68, 3, 57, 4, 87, 18]
                                       66                                       
                   25                                      17                   
          7                  16                  58                  63         
    73        25        81        98        53        19        82        80    
  45   62   42   64   18   92   86   2    7    92   96   80   8    74   11   31 
60 3 46 1 53 57 2 22 23 44 23 53 91 41 94 70 21 49 53 16 57 93 14 68 3 57 4 87 18 



[66, 25, 17, 7, 16, 58, 63, 73, 25, 81, 98, 53, 19, 82, 80, 45, 62, 42, 64, 18, 92, 86, 2, 7, 92, 96, 80, 8, 74, 11]
#<CompSci::CompleteTernaryTree:0x00555fe11416a8 @array=[66, 25, 17, 7, 16, 58, 63, 73, 25, 81, 98, 53, 19, 82, 80, 45, 62, 42, 64, 18, 92, 86, 2, 7, 92, 96, 80, 8, 74, 11], @child_slots=3>
                                       66                                       
            25                        17                         7            
   16      58      63      73      25      81      98      53      19   
82 80 45 62 42 64 18 92 86 2 7 92 96 80 8 74 11 



push: [48, 26, 78, 50, 85, 25, 59, 33, 42, 75, 64, 39, 90, 54, 7, 18, 4, 1, 92, 52, 67, 52, 22, 20, 66, 71, 46, 21, 76, 37]
                                       66                                       
            25                        17                         7            
   16      58      63      73      25      81      98      53      19   
82 80 45 62 42 64 18 92 86 2 7 92 96 80 8 74 11 48 26 78 50 85 25 59 33 42 75 
64 39 90 54 7 18 4 1 92 52 67 52 22 20 66 71 46 21 76 37 



[66, 25, 17, 7, 16, 58, 63, 73, 25, 81, 98, 53, 19, 82, 80, 45, 62, 42, 64, 18, 92, 86, 2, 7, 92, 96, 80, 8, 74, 11]
#<CompSci::CompleteQuaternaryTree:0x00555fe10aa488 @array=[66, 25, 17, 7, 16, 58, 63, 73, 25, 81, 98, 53, 19, 82, 80, 45, 62, 42, 64, 18, 92, 86, 2, 7, 92, 96, 80, 8, 74, 11], @child_slots=4>
                                       66                                       
         25                  17                   7                  16         
  58   63   73   25   81   98   53   19   82   80   45   62   42   64   18   92 
86 2 7 92 96 80 8 74 11 



push: [36, 3, 78, 94, 21, 22, 52, 28, 9, 70, 44, 17, 60, 28, 94, 29, 66, 11, 18, 30, 56, 53, 40, 0, 73, 28, 5, 93, 34, 82]
                                       66                                       
         25                  17                   7                  16         
  58   63   73   25   81   98   53   19   82   80   45   62   42   64   18   92 
86 2 7 92 96 80 8 74 11 36 3 78 94 21 22 52 28 9 70 44 17 60 28 94 29 66 11 18 30 56 53 40 0 73 28 5 93 34 82 



Measure Mode: wall_time
Thread ID: 46935141874700
Fiber ID: 46935141822640
Total: 0.010709
Sort by: self_time

 %self      total      self      wait     child     calls  name
 20.81      0.004     0.002     0.000     0.002      270   Kernel#loop
 13.62      0.008     0.001     0.000     0.007        6   CompSci::CompleteNaryTree#display
  8.12      0.001     0.001     0.000     0.001     1077   <Class::CompSci::CompleteNaryTree>#parent_idx
  7.71      0.001     0.001     0.000     0.000      292   String#+
  4.21      0.000     0.000     0.000     0.000     1617   Integer#/
  3.02      0.000     0.000     0.000     0.000      270   String#rjust
  2.92      0.000     0.000     0.000     0.000     1347   Integer#+
  2.91      0.004     0.000     0.000     0.004      270   <Class::CompSci::CompleteNaryTree>#gen
  2.79      0.000     0.000     0.000     0.000     1077   Integer#<
  2.51      0.000     0.000     0.000     0.000     1077   Integer#-
  2.12      0.000     0.000     0.000     0.000        9   Array#inspect
  2.09      0.011     0.000     0.000     0.010        2   Global#[No method]
  1.75      0.000     0.000     0.000     0.000      543   Integer#to_s
  1.44      0.000     0.000     0.000     0.000      270   BasicObject#!=
  1.42      0.000     0.000     0.000     0.000      270   String#ljust
  1.22      0.000     0.000     0.000     0.000      270   Integer#**
  1.20      0.000     0.000     0.000     0.000      540   String#size
  1.11      0.000     0.000     0.000     0.000      180   CompSci::CompleteNaryTree#push
  0.99      0.000     0.000     0.000     0.000        6   Kernel#p
  0.86      0.000     0.000     0.000     0.000      270   Array#max
  0.73      0.000     0.000     0.000     0.000      270   Integer#==
  0.59      0.000     0.000     0.000     0.000      270   Kernel#class
  0.53      0.000     0.000     0.000     0.000        4   Array#initialize
  0.48      0.000     0.000     0.000     0.000      180   Array#push
  0.45      0.000     0.000     0.000     0.000      120   Kernel#rand
  0.36      0.000     0.000     0.000     0.000      186   Array#empty?
  0.33      0.000     0.000     0.000     0.000      180   Array#shift
  0.33      0.000     0.000     0.000     0.000       37   IO#write
  0.33      0.000     0.000     0.000     0.000        3   Kernel#inspect
  0.33      0.000     0.000     0.000     0.000        1   CompSci::CompleteBinaryTree#initialize
  0.27      0.000     0.000     0.000     0.000        6   IO#set_encoding
  0.20      0.000     0.000     0.000     0.000       28   Kernel#puts
  0.15      0.000     0.000     0.000     0.000       28   IO#puts
  0.13      0.000     0.000     0.000     0.000        7   Class#new
  0.12      0.001     0.000     0.000     0.001        4  *Kernel#require
  0.12      0.000     0.000     0.000     0.000        2   <Module::Gem>#find_unresolved_default_spec
  0.07      0.000     0.000     0.000     0.000        1   CompSci::CompleteQuaternaryTree#initialize
  0.07      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.06      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_enter
  0.06      0.000     0.000     0.000     0.000        3   CompSci::CompleteNaryTree#initialize
  0.06      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.05      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_exit
  0.05      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.04      0.000     0.000     0.000     0.000       13   Module#method_added
  0.04      0.000     0.000     0.000     0.000        1   CompSci::CompleteTernaryTree#initialize
  0.04      0.000     0.000     0.000     0.000        6   <Class::Thread>#current
  0.03      0.000     0.000     0.000     0.000        2   <Module::Gem>#suffixes
  0.03      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.03      0.000     0.000     0.000     0.000        2   <Class::Gem::Specification>#unresolved_deps
  0.03      0.000     0.000     0.000     0.000        2   Thread::Mutex#lock
  0.02      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.02      0.000     0.000     0.000     0.000        2   Thread::Mutex#unlock
  0.02      0.000     0.000     0.000     0.000        1   Module#append_features
  0.02      0.000     0.000     0.000     0.000        4   Class#inherited
  0.02      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_check_owner
  0.02      0.000     0.000     0.000     0.000        2   Kernel#respond_to?
  0.01      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.01      0.000     0.000     0.000     0.000        1   Module#included
  0.01      0.000     0.000     0.000     0.000        1   <Object::Object>#include

* indicates recursively called methods
RUBYLIB=lib ruby-prof --exclude-common-cycles examples/heap.rb -- 
#
# display the results of TernaryHeap push and pop
#

push: 35 57 93 85 36 4 4 80 32 98 63 29 19 57 46 33 17 73 64 81 72 3 54 90 59 5 37 39 92 5
array: [98, 81, 93, 85, 46, 64, 73, 90, 39, 92, 63, 29, 19, 35, 36, 33, 4, 17, 57, 4, 72, 3, 54, 57, 59, 5, 32, 37, 80, 5]
heap: true
                                       98                                       
            81                        93                        85            
   46      64      73      90      39      92      63      29      19   
35 36 33 4 17 57 4 72 3 54 57 59 5 32 37 80 5 


pop: 98
array: [93, 81, 92, 85, 46, 64, 73, 90, 39, 80, 63, 29, 19, 35, 36, 33, 4, 17, 57, 4, 72, 3, 54, 57, 59, 5, 32, 37, 5]
heap: true
                                       93                                       
            81                        92                        85            
   46      64      73      90      39      80      63      29      19   
35 36 33 4 17 57 4 72 3 54 57 59 5 32 37 5 


pop: 93 92 90 85 81 80 73 72 64
array: [63, 57, 59, 32, 46, 54, 5, 57, 39, 37, 5, 29, 19, 35, 36, 33, 4, 17, 3, 4]
heap: true
                                       63                                       
            57                        59                        32            
   46      54       5      57      39      37       5      29      19   
35 36 33 4 17 3 4 


push: 72 56 18 79 40 56 41 29 85 98 61 55 44 78 77 57 33 49 71 40 50 36 37 28 19 71 98 75 10 23
array: [98, 98, 85, 78, 75, 54, 57, 59, 56, 79, 55, 77, 71, 46, 50, 71, 23, 17, 3, 4, 5, 56, 18, 57, 40, 39, 41, 29, 37, 72, 61, 5, 32, 44, 29, 57, 33, 19, 49, 40, 35, 36, 37, 28, 19, 36, 33, 63, 10, 4]
heap: true
                                       98                                       
            98                        85                        78            
   75      54      57      59      56      79      55      77      71   
46 50 71 23 17 3 4 5 56 18 57 40 39 41 29 37 72 61 5 32 44 29 57 33 19 49 40 
35 36 37 28 19 36 33 63 10 4 

Measure Mode: wall_time
Thread ID: 46985328892940
Fiber ID: 46985328838380
Total: 0.010098
Sort by: self_time

 %self      total      self      wait     child     calls  name
  7.24      0.003     0.001     0.000     0.002        4   CompSci::CompleteNaryTree#display
  6.38      0.001     0.001     0.000     0.001      129   Kernel#loop
  5.39      0.001     0.001     0.000     0.001      342   CompSci::Heap#heapish?
  4.54      0.001     0.000     0.000     0.000      557   <Class::CompSci::CompleteNaryTree>#parent_idx
  4.24      0.003     0.000     0.000     0.003      168  *Array#initialize
  3.74      0.000     0.000     0.000     0.000     1573   Integer#+
  2.67      0.000     0.000     0.000     0.000      471   BasicObject#!=
  2.61      0.000     0.000     0.000     0.000      949   Integer#<
  2.23      0.000     0.000     0.000     0.000      837   Integer#*
  2.20      0.000     0.000     0.000     0.000      815   Integer#/
  1.80      0.000     0.000     0.000     0.000      838   Array#[]
  1.72      0.000     0.000     0.000     0.000      617   Integer#-
  1.70      0.001     0.000     0.000     0.001      111  *CompSci::Heap#sift_up
  1.68      0.000     0.000     0.000     0.000       36   CompSci::Heap#heapiest
  1.49      0.000     0.000     0.000     0.000      591   Array#length
  1.36      0.000     0.000     0.000     0.000      462   Integer#==
  1.36      0.002     0.000     0.000     0.001      129   <Class::CompSci::CompleteNaryTree>#gen
  1.25      0.000     0.000     0.000     0.000      327   Integer#to_s
  1.10      0.001     0.000     0.000     0.001      165   <Class::CompSci::CompleteNaryTree>#children_idx
  1.10      0.000     0.000     0.000     0.000      142   String#+
  1.04      0.000     0.000     0.000     0.000      397   Kernel#class
  1.03      0.001     0.000     0.000     0.001       60   CompSci::Heap#push
  0.99      0.000     0.000     0.000     0.000      342   Integer#<=>
  0.90      0.003     0.000     0.000     0.003      169  *Class#new
  0.88      0.000     0.000     0.000     0.000      129   String#ljust
  0.84      0.000     0.000     0.000     0.000      258   String#size
  0.55      0.010     0.000     0.000     0.010        2   Global#[No method]
  0.54      0.002     0.000     0.000     0.002      129  *CompSci::Heap#heap?
  0.52      0.000     0.000     0.000     0.000      129   Array#max
  0.51      0.000     0.000     0.000     0.000      154   Array#[]=
  0.49      0.001     0.000     0.000     0.001       36  *CompSci::Heap#sift_down
  0.47      0.000     0.000     0.000     0.000      129   String#rjust
  0.44      0.000     0.000     0.000     0.000        4   Array#inspect
  0.44      0.000     0.000     0.000     0.000      129   Integer#**
  0.42      0.003     0.000     0.000     0.003       24   Kernel#puts
  0.41      0.000     0.000     0.000     0.000        3   Array#join
  0.38      0.000     0.000     0.000     0.000      111   Integer#<=
  0.38      0.001     0.000     0.000     0.001       60   Kernel#tap
  0.36      0.000     0.000     0.000     0.000      139   BasicObject#!
  0.34      0.000     0.000     0.000     0.000      125   Array#<<
  0.34      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.32      0.003     0.000     0.000     0.003       24   IO#puts
  0.30      0.000     0.000     0.000     0.000       60   Array#push
  0.28      0.000     0.000     0.000     0.000       60   Kernel#rand
  0.28      0.000     0.000     0.000     0.000       40   IO#write
  0.23      0.001     0.000     0.000     0.001       10   CompSci::Heap#pop
  0.22      0.000     0.000     0.000     0.000       10   Array#shift
  0.21      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.17      0.000     0.000     0.000     0.000       36   Array#first
  0.17      0.000     0.000     0.000     0.000       36   Integer#>=
  0.13      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.12      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.11      0.000     0.000     0.000     0.000        4   String#%
  0.09      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.06      0.000     0.000     0.000     0.000       22   Module#method_added
  0.06      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.06      0.000     0.000     0.000     0.000       10   Array#pop
  0.05      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.05      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.04      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.04      0.000     0.000     0.000     0.000        4   TrueClass#to_s
  0.04      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.04      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.04      0.000     0.000     0.000     0.000        5   Class#inherited
  0.04      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.03      0.000     0.000     0.000     0.000       10   Array#unshift
  0.03      0.000     0.000     0.000     0.000        1   Module#append_features
  0.03      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.03      0.000     0.000     0.000     0.000        9   BasicObject#==
  0.03      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.02      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#initialize
  0.02      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.01      0.000     0.000     0.000     0.000        1   Module#included
  0.01      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.01      0.000     0.000     0.000     0.000        1   Module#alias_method

* indicates recursively called methods
RUBYLIB=lib ruby-prof --exclude-common-cycles examples/heap_insert.rb -- 
#
# 3 seconds worth of pushes
#

10000th push: 0.00003360 s
20000th push: 0.00004425 s
30000th push: 0.00002203 s
40000th push: 0.00003302 s
50000th push: 0.00001408 s
60000th push: 0.00002189 s
70000th push: 0.00002215 s
80000th push: 0.00007295 s
90000th push: 0.00002370 s
100000th push: 0.00003157 s
-------------
    100k push: 2.82634534 s (35k push / s)

pushed 106133 items in 3.0 s

still a heap with 106134 items? YES - 1.500 sec

Measure Mode: wall_time
Thread ID: 47359320333320
Fiber ID: 47359320283240
Total: 4.501726
Sort by: self_time

 %self      total      self      wait     child     calls  name
 10.76      1.057     0.484     0.000     0.573   348245   CompSci::Heap#heapish?
  7.21      2.097     0.324     0.000     1.772   242126  *CompSci::Heap#sift_up
  5.66      3.000     0.255     0.000     2.745        1   Kernel#loop
  5.11      0.230     0.230     0.000     0.000   968474   Array#[]
  4.56      0.352     0.205     0.000     0.146   106134   Array#initialize
  4.47      0.321     0.201     0.000     0.120   242112   <Class::CompSci::CompleteNaryTree>#parent_idx
  3.52      2.346     0.158     0.000     2.188   106134   CompSci::Heap#push
  3.48      0.240     0.157     0.000     0.084   348245   BasicObject#!=
  3.12      0.140     0.140     0.000     0.000   560513   Integer#*
  2.55      0.115     0.115     0.000     0.000   530669   Integer#+
  2.48      0.112     0.112     0.000     0.000   454388   Integer#==
  2.09      0.238     0.094     0.000     0.144   106146   <Module::CompSci::Timer>#since
  2.03      0.091     0.091     0.000     0.000   348246   Kernel#class
  1.98      0.089     0.089     0.000     0.000   348246   Integer#-
  1.88      0.085     0.085     0.000     0.000   348245   Integer#<=>
  1.75      0.079     0.079     0.000     0.000   318403   Array#length
  1.59      0.072     0.072     0.000     0.000   271984   Array#[]=
  1.54      0.113     0.069     0.000     0.044   106160   <Module::CompSci::Timer>#now
  1.45      0.472     0.065     0.000     0.406   106134   <Class::CompSci::CompleteNaryTree>#children_idx
  1.43      0.064     0.064     0.000     0.000   242126   Integer#<=
  1.32      0.060     0.060     0.000     0.000   242112   Integer#/
  1.32      0.059     0.059     0.000     0.000   242112   BasicObject#!
  1.22      0.406     0.055     0.000     0.352   106135   Class#new
  1.17      0.053     0.053     0.000     0.000   212268   Integer#<
  0.97      0.044     0.044     0.000     0.000   106160   <Module::Process>#clock_gettime
  0.95      0.043     0.043     0.000     0.000   106134   Kernel#rand
  0.83      0.037     0.037     0.000     0.000   106133   Float#>
  0.74      0.033     0.033     0.000     0.000   106134   Array#push
  0.68      0.031     0.031     0.000     0.000   106146   Float#-
  0.65      0.029     0.029     0.000     0.000   106143   Integer#%
  0.60      0.027     0.027     0.000     0.000   106133   Array#<<
  0.01      0.000     0.000     0.000     0.000       13   String#%
  0.00      0.000     0.000     0.000     0.000       33   IO#write
  0.00      0.000     0.000     0.000     0.000       22   Module#method_added
  0.00      4.502     0.000     0.000     4.502        2   Global#[No method]
  0.00      1.500     0.000     0.000     1.500       11   <Module::CompSci::Timer>#elapsed
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.000     0.000     0.000     0.000       18   IO#puts
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000       18   Kernel#puts
  0.00      1.500     0.000     0.000     1.500   106134  *CompSci::Heap#heap?
  0.00      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#size
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.00      0.000     0.000     0.000     0.000        5   Class#inherited
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_f
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_s
  0.00      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000        1   Float#/
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.00      0.000     0.000     0.000     0.000        1   Kernel#print
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
RUBYLIB=lib ruby-prof --exclude-common-cycles examples/tree.rb -- 
#
# Try out Binary-, Ternary-, and QuaternaryTree
#

[60, 77, 35, 0, 71, 8, 28, 17, 46, 51, 4, 24, 2, 59, 8, 2, 37, 5, 11, 48, 54, 5, 54, 95, 40, 36, 41, 65, 28, 70]
#<CompSci::BinaryTree:0x00557f51b14420 @root=#<CompSci::ChildNode:0x2abfa8d8a1fci @value=60 @children=[77, 35]>, @child_slots=2, @open_parent=#<CompSci::ChildNode:0x2abfa8d87a38i @value=8 @children=[70]>>
                                       60                                       
                   77                                      35                   
          0                  71                   8                  28         
    17        46        51         4        24         2        59         8    
  2    37   5    11   48   54   5    54   95   40   36   41   65   28   70 

df_search visited: 60 77 0 17 2 37 46 5 11 71 51 48 54 4 5 54 35 8 24 95 40 2 36 41 28 59 65 28 8 70


push: [83, 64, 62, 81, 61, 33, 23, 67, 88, 23, 45, 59, 30, 27, 97, 41, 88, 72, 35, 49, 20, 34, 31, 95, 3, 21, 26, 6, 95, 17]

                                       60                                       
                   77                                      35                   
          0                  71                   8                  28         
    17        46        51         4        24         2        59         8    
  2    37   5    11   48   54   5    54   95   40   36   41   65   28   70   83 
64 62 81 61 33 23 67 88 23 45 59 30 27 97 41 88 72 35 49 20 34 31 95 3 21 26 6 95 17 


[60, 77, 35, 0, 71, 8, 28, 17, 46, 51, 4, 24, 2, 59, 8, 2, 37, 5, 11, 48, 54, 5, 54, 95, 40, 36, 41, 65, 28, 70]
#<CompSci::TernaryTree:0x00557f51a67b80 @root=#<CompSci::ChildNode:0x2abfa8d33d98i @value=60 @children=[77, 35, 0]>, @child_slots=3, @open_parent=#<CompSci::ChildNode:0x2abfa8d331f4i @value=51 @children=[28, 70]>>
                                       60                                       
            77                        35                         0            
   71       8      28      17      46      51       4      24       2   
59 8 2 37 5 11 48 54 5 54 95 40 36 41 65 28 70 

df_search visited: 60 77 71 59 8 2 8 37 5 11 28 48 54 5 35 17 54 95 40 46 36 41 65 51 28 70 0 4 24 2


push: [30, 28, 28, 37, 2, 79, 8, 49, 27, 13, 34, 65, 66, 57, 76, 35, 58, 3, 14, 9, 10, 35, 3, 30, 55, 67, 67, 68, 60, 0]

                                       60                                       
            77                        35                         0            
   71       8      28      17      46      51       4      24       2   
59 8 2 37 5 11 48 54 5 54 95 40 36 41 65 28 70 30 28 28 37 2 79 8 49 27 13 
34 65 66 57 76 35 58 3 14 9 10 35 3 30 55 67 67 68 60 0 


[60, 77, 35, 0, 71, 8, 28, 17, 46, 51, 4, 24, 2, 59, 8, 2, 37, 5, 11, 48, 54, 5, 54, 95, 40, 36, 41, 65, 28, 70]
#<CompSci::QuaternaryTree:0x00557f519e6968 @root=#<CompSci::ChildNode:0x2abfa8cf3414i @value=60 @children=[77, 35, 0, 71]>, @child_slots=4, @open_parent=#<CompSci::ChildNode:0x2abfa8cf30f4i @value=17 @children=[70]>>
                                       60                                       
         77                  35                   0                  71         
  8    28   17   46   51   4    24   2    59   8    2    37   5    11   48   54 
5 54 95 40 36 41 65 28 70 

df_search visited: 60 77 8 5 54 95 40 28 36 41 65 28 17 70 46 35 51 4 24 2 0 59 8 2 37 71 5 11 48 54


push: [57, 31, 56, 51, 24, 23, 19, 88, 29, 58, 91, 53, 75, 86, 28, 74, 55, 19, 64, 42, 9, 30, 0, 67, 40, 88, 25, 39, 3, 64]

                                       60                                       
         77                  35                   0                  71         
  8    28   17   46   51   4    24   2    59   8    2    37   5    11   48   54 
5 54 95 40 36 41 65 28 70 57 31 56 51 24 23 19 88 29 58 91 53 75 86 28 74 55 19 64 42 9 30 0 67 40 88 25 39 3 64 


Measure Mode: wall_time
Thread ID: 47002658536460
Fiber ID: 47002658484460
Total: 0.014921
Sort by: self_time

 %self      total      self      wait     child     calls  name
 20.61      0.008     0.003     0.000     0.005       32   CompSci::Tree#bf_search
  4.26      0.001     0.001     0.000     0.000      671   CompSci::NaryTree#open_parent?
  2.97      0.000     0.000     0.000     0.000      593   Array#+
  2.68      0.001     0.000     0.000     0.000      177   CompSci::ChildNode#add_child
  2.68      0.000     0.000     0.000     0.000      799   Array#shift
  2.58      0.000     0.000     0.000     0.000     1100   Integer#+
  2.21      0.015     0.000     0.000     0.015        2   Global#[No method]
  2.17      0.000     0.000     0.000     0.000      292   String#+
  2.14      0.003     0.000     0.000     0.003      177   CompSci::NaryTree#open_parent
  1.99      0.000     0.000     0.000     0.000      562   Integer#to_s
  1.97      0.000     0.000     0.000     0.000      671   Integer#<
  1.96      0.000     0.000     0.000     0.000      808   Array#empty?
  1.94      0.002     0.000     0.000     0.001      177   CompSci::Node#new_child
  1.82      0.000     0.000     0.000     0.000      379   CompSci::Node#to_s
  1.63      0.000     0.000     0.000     0.000      357   BasicObject#!=
  1.48      0.000     0.000     0.000     0.000      180   CompSci::ChildNode#initialize
  1.47      0.000     0.000     0.000     0.000      270   String#ljust
  1.20      0.000     0.000     0.000     0.000      625   BasicObject#!
  1.20      0.000     0.000     0.000     0.000      671   Array#length
  1.19      0.005     0.000     0.000     0.005      177   CompSci::NaryTree#push
  1.17      0.000     0.000     0.000     0.000        6   Kernel#p
  1.12      0.000     0.000     0.000     0.000       62   Enumerable#find
  1.09      0.001     0.000     0.000     0.001      650  *CompSci::ChildNode#gen
  1.07      0.000     0.000     0.000     0.000      540   Integer#/
  1.07      0.000     0.000     0.000     0.000      180   CompSci::Node#initialize
  1.01      0.000     0.000     0.000     0.000      540   String#size
  1.01      0.000     0.000     0.000     0.000      177   CompSci::Node#add_child
  0.92      0.001     0.000     0.000     0.001      187  *Class#new
  0.91      0.000     0.000     0.000     0.000      270   String#rjust
  0.81      0.000     0.000     0.000     0.000      360   Integer#**
  0.64      0.000     0.000     0.000     0.000      245   Kernel#respond_to?
  0.61      0.000     0.000     0.000     0.000      270   Array#max
  0.59      0.001     0.000     0.000     0.001       62   CompSci::NaryTree#open_sibling
  0.58      0.000     0.000     0.000     0.000      267   Array#<<
  0.57      0.000     0.000     0.000     0.000      270   Integer#==
  0.54      0.000     0.000     0.000     0.000        6   Array#inspect
  0.54      0.000     0.000     0.000     0.000       90   <Module::Math>#log
  0.54      0.000     0.000     0.000     0.000        9   Array#join
  0.47      0.000     0.000     0.000     0.000        4   Array#initialize
  0.39      0.000     0.000     0.000     0.000        3   Kernel#inspect
  0.38      0.000     0.000     0.000     0.000      183   Kernel#class
  0.35      0.000     0.000     0.000     0.000      177   BasicObject#==
  0.30      0.000     0.000     0.000     0.000      120   Kernel#rand
  0.29      0.000     0.000     0.000     0.000       62   CompSci::ChildNode#siblings
  0.29      0.000     0.000     0.000     0.000        9   String#%
  0.27      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.26      0.000     0.000     0.000     0.000        6   CompSci::Node#inspect
  0.23      0.000     0.000     0.000     0.000       43   IO#write
  0.22      0.000     0.000     0.000     0.000       31   Kernel#puts
  0.21      0.000     0.000     0.000     0.000       90   Float#floor
  0.18      0.000     0.000     0.000     0.000       31   IO#puts
  0.17      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.16      0.000     0.000     0.000     0.000       90  *CompSci::Tree#df_search
  0.10      0.004     0.000     0.000     0.004        4   CompSci::NaryTree#display
  0.10      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.10      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.08      0.000     0.000     0.000     0.000        2   Module#attr_accessor
  0.08      0.000     0.000     0.000     0.000        3   CompSci::NaryTree#initialize
  0.07      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.07      0.000     0.000     0.000     0.000       34   Module#method_added
  0.06      0.000     0.000     0.000     0.000        6   Module#to_s
  0.06      0.002     0.000     0.000     0.002        2   CompSci::BinaryTree#display
  0.05      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.05      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.05      0.000     0.000     0.000     0.000       11   Integer#>
  0.05      0.000     0.000     0.000     0.000        3   CompSci::Tree#initialize
  0.04      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.04      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.04      0.000     0.000     0.000     0.000        1   CompSci::TernaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.03      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.03      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.03      0.000     0.000     0.000     0.000        1   CompSci::QuaternaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        1   CompSci::BinaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.03      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.03      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.03      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.02      0.000     0.000     0.000     0.000        1   Module#append_features
  0.02      0.000     0.000     0.000     0.000        2   Module#alias_method
  0.02      0.000     0.000     0.000     0.000        7   Class#inherited
  0.01      0.000     0.000     0.000     0.000        4   BasicObject#singleton_method_added
  0.01      0.000     0.000     0.000     0.000        6   Kernel#object_id
  0.00      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
RUBYLIB=lib ruby-prof --exclude-common-cycles examples/tree_insert.rb -- 
#
# 3 seconds worth of pushes
#

100th push: 0.00002472 s
200th push: 0.00001527 s
300th push: 0.00001439 s
400th push: 0.00002208 s
500th push: 0.00001648 s
600th push: 0.00001513 s
700th push: 0.00001555 s
800th push: 0.00001556 s
900th push: 0.00001568 s
1000th push: 0.00001547 s
-----------
    1k push: 0.3284 s (3044 push / s)

1100th push: 0.00008253 s
1200th push: 0.00001609 s
1300th push: 0.00001428 s
1400th push: 0.00002132 s
1500th push: 0.00001682 s
1600th push: 0.00001457 s
1700th push: 0.00001840 s
1800th push: 0.00001711 s
1900th push: 0.00004173 s
2000th push: 0.00001813 s
-----------
    1k push: 0.9878 s (1012 push / s)

2100th push: 0.00001823 s
2200th push: 0.00001883 s
2300th push: 0.00001789 s
2400th push: 0.00001949 s
2500th push: 0.00001828 s
2600th push: 0.00001863 s
2700th push: 0.00002202 s
2800th push: 0.00002170 s
2900th push: 0.00001935 s
pushed 2967 items in 3.0 s

#
# 30 inserts, puts, df_search
#

[58, 25, 23, 95, 32, 28, 57, 66, 92, 98, 33, 25, 77, 5, 36, 97, 73, 65, 65, 5, 6, 54, 11, 77, 13, 96, 2, 84, 3, 57]
                                       58                                       
                   25                                      23                   
         95                  32                  28                  57         
    66        92        98        33        25        77         5        36    
  97   73   65   65   5    6    54   11   77   13   96   2    84   3    57 
#<CompSci::BinaryTree:0x00564cb6cc0368 @root=#<CompSci::ChildNode:0x2b265b6601a0i @value=58 @children=[25, 23]>, @child_slots=2, @open_parent=#<CompSci::ChildNode:0x2b265b65ed78i @value=36 @children=[57]>>

visited 58
visited 25
visited 95
visited 66
visited 97
visited 73
visited 92
visited 65
visited 65
visited 32
visited 98
visited 5
visited 6
visited 33
visited 54
visited 11
visited 23
visited 28
visited 25
visited 77
visited 13
visited 77
visited 96
visited 2
visited 57
visited 5
visited 84
visited 3
visited 36
visited 57

push: [29, 75, 91, 17, 54, 59, 78, 14, 44, 45, 32, 71, 19, 73, 33, 4, 80, 39, 34, 55, 16, 92, 88, 77, 89, 97, 79, 14, 82, 13]
                                       58                                       
                   25                                      23                   
         95                  32                  28                  57         
    66        92        98        33        25        77         5        36    
  97   73   65   65   5    6    54   11   77   13   96   2    84   3    57   29 
75 91 17 54 59 78 14 44 45 32 71 19 73 33 4 80 39 34 55 16 92 88 77 89 97 79 14 82 13 

Measure Mode: wall_time
Thread ID: 47443741449220
Fiber ID: 47443741397020
Total: 3.012306
Sort by: self_time

 %self      total      self      wait     child     calls  name
 34.65      2.929     1.044     0.000     1.885      759   CompSci::Tree#bf_search
 20.86      0.628     0.628     0.000     0.000   550879   Array#+
 16.53      0.764     0.498     0.000     0.266   557592   CompSci::NaryTree#open_parent?
  7.63      0.230     0.230     0.000     0.000   551696   Array#shift
  4.92      0.148     0.148     0.000     0.000   551699   Array#empty?
  4.60      0.139     0.139     0.000     0.000   557592   Array#length
  4.24      0.128     0.128     0.000     0.000   557592   Integer#<
  4.07      0.122     0.122     0.000     0.000   551638   BasicObject#!
  0.30      3.006     0.009     0.000     2.997        1   Kernel#loop
  0.24      2.952     0.007     0.000     2.945     3026   CompSci::NaryTree#open_parent
  0.18      0.011     0.005     0.000     0.006     3026   CompSci::ChildNode#add_child
  0.17      0.009     0.005     0.000     0.004     1512   Enumerable#find
  0.14      0.007     0.004     0.000     0.003     3028   CompSci::ChildNode#initialize
  0.13      0.011     0.004     0.000     0.007     3032  *Class#new
  0.13      0.027     0.004     0.000     0.023     3026   CompSci::Node#new_child
  0.11      0.009     0.003     0.000     0.006     2999   <Module::CompSci::Timer>#since
  0.11      2.982     0.003     0.000     2.979     3026   CompSci::NaryTree#push
  0.09      0.003     0.003     0.000     0.000     3028   CompSci::Node#initialize
  0.08      0.002     0.002     0.000     0.000     3028   Kernel#rand
  0.08      0.005     0.002     0.000     0.002     3032   <Module::CompSci::Timer>#now
  0.08      0.013     0.002     0.000     0.011     1512   CompSci::NaryTree#open_sibling
  0.07      0.002     0.002     0.000     0.000     3032   <Module::Process>#clock_gettime
  0.07      0.004     0.002     0.000     0.001     3026   CompSci::Node#add_child
  0.06      0.003     0.002     0.000     0.001     3026   BasicObject#!=
  0.06      0.002     0.002     0.000     0.000     2967   Float#>
  0.04      0.001     0.001     0.000     0.000     3026   Array#<<
  0.04      0.001     0.001     0.000     0.000     2999   Float#-
  0.04      0.001     0.001     0.000     0.000     3237   Integer#+
  0.03      0.001     0.001     0.000     0.000     3086   Integer#==
  0.03      0.001     0.001     0.000     0.000     1512   CompSci::ChildNode#siblings
  0.03      0.001     0.001     0.000     0.000     2996   Integer#%
  0.03      0.001     0.001     0.000     0.000     3028   Kernel#class
  0.03      0.001     0.001     0.000     0.000     3026   BasicObject#==
  0.03      0.001     0.001     0.000     0.000     1515   Kernel#respond_to?
  0.02      0.001     0.001     0.000     0.000       34   String#%
  0.00      0.000     0.000     0.000     0.000      186   Integer#to_s
  0.00      0.000     0.000     0.000     0.000      142   IO#write
  0.00      0.002     0.000     0.000     0.002       75   IO#puts
  0.00      3.012     0.000     0.000     3.012        2   Global#[No method]
  0.00      0.000     0.000     0.000     0.000       90   <Module::Math>#log
  0.00      0.001     0.000     0.000     0.001       29   <Module::CompSci::Timer>#elapsed
  0.00      0.000     0.000     0.000     0.000       99   String#+
  0.00      0.000     0.000     0.000     0.000      125   CompSci::Node#to_s
  0.00      0.000     0.000     0.000     0.000       90   String#ljust
  0.00      0.002     0.000     0.000     0.002       75   Kernel#puts
  0.00      0.000     0.000     0.000     0.000        2   Kernel#p
  0.00      0.000     0.000     0.000     0.000      180   Integer#**
  0.00      0.000     0.000     0.000     0.000      180   Integer#/
  0.00      0.000     0.000     0.000     0.000       90   String#rjust
  0.00      0.000     0.000     0.000     0.000      180   String#size
  0.00      0.000     0.000     0.000     0.000        2   Array#initialize
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.000     0.000     0.000     0.000       90   Float#floor
  0.00      0.000     0.000     0.000     0.000        2   Array#inspect
  0.00      0.000     0.000     0.000     0.000       90   Array#max
  0.00      0.000     0.000     0.000     0.000        2   CompSci::Node#inspect
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        1   Kernel#inspect
  0.00      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000       30  *CompSci::Tree#df_search
  0.00      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000        2   Module#attr_accessor
  0.00      0.002     0.000     0.000     0.002        2   CompSci::BinaryTree#display
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.000     0.000     0.000     0.000       34   Module#method_added
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        2   Module#to_s
  0.00      0.000     0.000     0.000     0.000        2   Integer#to_f
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        7   Class#inherited
  0.00      0.000     0.000     0.000     0.000        2   CompSci::BinaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000       11   Integer#>
  0.00      0.000     0.000     0.000     0.000        2   CompSci::NaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        2   CompSci::Tree#initialize
  0.00      0.000     0.000     0.000     0.000        2   Array#join
  0.00      0.000     0.000     0.000     0.000        2   Module#alias_method
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000        2   Float#/
  0.00      0.000     0.000     0.000     0.000        2   Kernel#object_id
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        4   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        1   Module#included
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock

* indicates recursively called methods
