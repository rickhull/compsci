RUBYLIB=lib ruby-prof  examples/complete_tree.rb -- 
/proc/loadavg 0.68 0.22 0.08 1/80 1452
#
# Print CompleteBinary-, Ternary-, and QuaternaryTree
#

[32, 3, 18, 81, 43, 41, 63, 37, 17, 29, 59, 11, 19, 43, 94, 48, 56, 34, 72, 28, 72, 78, 65, 89, 39, 65, 13, 43, 2, 94]
#<CompSci::CompleteBinaryTree:0x00557a457260b8 @array=[32, 3, 18, 81, 43, 41, 63, 37, 17, 29, 59, 11, 19, 43, 94, 48, 56, 34, 72, 28, 72, 78, 65, 89, 39, 65, 13, 43, 2, 94], @child_slots=2>
                                       32                                       
                    3                                      18                   
         81                  43                  41                  63         
    37        17        29        59        11        19        43        94    
  48   56   34   72   28   72   78   65   89   39   65   13   43   2    94 



push: [7, 36, 91, 69, 28, 9, 31, 65, 15, 82, 26, 81, 53, 11, 91, 94, 68, 20, 23, 63, 48, 41, 32, 82, 15, 52, 62, 67, 79, 26]
                                       32                                       
                    3                                      18                   
         81                  43                  41                  63         
    37        17        29        59        11        19        43        94    
  48   56   34   72   28   72   78   65   89   39   65   13   43   2    94   7  
36 91 69 28 9 31 65 15 82 26 81 53 11 91 94 68 20 23 63 48 41 32 82 15 52 62 67 79 26 



[32, 3, 18, 81, 43, 41, 63, 37, 17, 29, 59, 11, 19, 43, 94, 48, 56, 34, 72, 28, 72, 78, 65, 89, 39, 65, 13, 43, 2, 94]
#<CompSci::CompleteTernaryTree:0x00557a456f5c88 @array=[32, 3, 18, 81, 43, 41, 63, 37, 17, 29, 59, 11, 19, 43, 94, 48, 56, 34, 72, 28, 72, 78, 65, 89, 39, 65, 13, 43, 2, 94], @child_slots=3>
                                       32                                       
             3                        18                        81            
   43      41      63      37      17      29      59      11      19   
43 94 48 56 34 72 28 72 78 65 89 39 65 13 43 2 94 



push: [10, 17, 57, 87, 16, 24, 9, 44, 61, 67, 96, 53, 88, 31, 38, 66, 50, 29, 51, 26, 55, 18, 53, 64, 57, 65, 74, 36, 41, 61]
                                       32                                       
             3                        18                        81            
   43      41      63      37      17      29      59      11      19   
43 94 48 56 34 72 28 72 78 65 89 39 65 13 43 2 94 10 17 57 87 16 24 9 44 61 67 
96 53 88 31 38 66 50 29 51 26 55 18 53 64 57 65 74 36 41 61 



[32, 3, 18, 81, 43, 41, 63, 37, 17, 29, 59, 11, 19, 43, 94, 48, 56, 34, 72, 28, 72, 78, 65, 89, 39, 65, 13, 43, 2, 94]
#<CompSci::CompleteQuaternaryTree:0x00557a4565ded8 @array=[32, 3, 18, 81, 43, 41, 63, 37, 17, 29, 59, 11, 19, 43, 94, 48, 56, 34, 72, 28, 72, 78, 65, 89, 39, 65, 13, 43, 2, 94], @child_slots=4>
                                       32                                       
          3                  18                  81                  43         
  41   63   37   17   29   59   11   19   43   94   48   56   34   72   28   72 
78 65 89 39 65 13 43 2 94 



push: [82, 54, 94, 98, 98, 74, 15, 59, 44, 83, 58, 51, 95, 80, 6, 23, 32, 15, 23, 81, 11, 56, 41, 29, 29, 52, 65, 38, 23, 82]
                                       32                                       
          3                  18                  81                  43         
  41   63   37   17   29   59   11   19   43   94   48   56   34   72   28   72 
78 65 89 39 65 13 43 2 94 82 54 94 98 98 74 15 59 44 83 58 51 95 80 6 23 32 15 23 81 11 56 41 29 29 52 65 38 23 82 



Measure Mode: wall_time
Thread ID: 46991818308620
Fiber ID: 46991818256880
Total: 0.009401
Sort by: self_time

 %self      total      self      wait     child     calls  name
 15.27      0.003     0.001     0.000     0.002      270   Kernel#loop
  8.91      0.001     0.001     0.000     0.001     1077   <Class::CompSci::CompleteNaryTree>#parent_idx
  5.64      0.001     0.001     0.000     0.000     1617   Integer#/
  4.05      0.000     0.000     0.000     0.000     1347   Integer#+
  3.26      0.000     0.000     0.000     0.000     1077   Integer#-
  2.64      0.004     0.000     0.000     0.003      270   <Class::CompSci::CompleteNaryTree>#gen
  2.47      0.000     0.000     0.000     0.000     1077   Integer#<
  2.31      0.000     0.000     0.000     0.000      292   String#+
  2.21      0.000     0.000     0.000     0.000      543   Integer#to_s
  1.81      0.000     0.000     0.000     0.000      270   BasicObject#!=
  1.77      0.000     0.000     0.000     0.000      540   String#size
  1.68      0.008     0.000     0.000     0.007        9  *Array#each
  1.60      0.000     0.000     0.000     0.000      270   String#ljust
  1.56      0.000     0.000     0.000     0.000      270   String#rjust
  1.26      0.000     0.000     0.000     0.000      270   Array#max
  1.25      0.000     0.000     0.000     0.000        9   Array#inspect
  1.24      0.000     0.000     0.000     0.000      180   CompSci::CompleteNaryTree#push
  0.88      0.000     0.000     0.000     0.000      270   Integer#**
  0.84      0.000     0.000     0.000     0.000        6   Kernel#p
  0.78      0.000     0.000     0.000     0.000      270   Kernel#class
  0.77      0.000     0.000     0.000     0.000      270   Integer#==
  0.68      0.000     0.000     0.000     0.000        4   Array#initialize
  0.51      0.000     0.000     0.000     0.000      186   Array#empty?
  0.46      0.000     0.000     0.000     0.000      180   Array#push
  0.45      0.000     0.000     0.000     0.000      180   Array#shift
  0.44      0.000     0.000     0.000     0.000      120   Kernel#rand
  0.37      0.000     0.000     0.000     0.000        6   IO#set_encoding
  0.33      0.000     0.000     0.000     0.000       37   IO#write
  0.28      0.009     0.000     0.000     0.009        2   Global#[No method]
  0.27      0.000     0.000     0.000     0.000        3   Kernel#inspect
  0.19      0.000     0.000     0.000     0.000       28   Kernel#puts
  0.15      0.000     0.000     0.000     0.000        7   Class#new
  0.14      0.002     0.000     0.000     0.002        4  *Kernel#require
  0.12      0.007     0.000     0.000     0.007        6   CompSci::CompleteNaryTree#display
  0.12      0.000     0.000     0.000     0.000       28   IO#puts
  0.11      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_enter
  0.09      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_exit
  0.08      0.007     0.000     0.000     0.007        6   Enumerable#each_with_index
  0.07      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.06      0.000     0.000     0.000     0.000        3   CompSci::CompleteNaryTree#initialize
  0.05      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.05      0.000     0.000     0.000     0.000       13   Module#method_added
  0.05      0.000     0.000     0.000     0.000        4   Class#inherited
  0.05      0.000     0.000     0.000     0.000        2   <Module::Gem>#find_unresolved_default_spec
  0.04      0.000     0.000     0.000     0.000        1   Module#append_features
  0.04      0.000     0.000     0.000     0.000        2   <Module::Gem>#suffixes
  0.03      0.000     0.000     0.000     0.000        1   CompSci::CompleteQuaternaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        1   CompSci::CompleteBinaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.03      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.03      0.000     0.000     0.000     0.000        2   <Class::Gem::Specification>#unresolved_deps
  0.03      0.000     0.000     0.000     0.000        1   CompSci::CompleteTernaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.03      0.000     0.000     0.000     0.000        6   <Class::Thread>#current
  0.02      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.02      0.000     0.000     0.000     0.000        2   Kernel#respond_to?
  0.02      0.000     0.000     0.000     0.000        2   Thread::Mutex#lock
  0.02      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_check_owner
  0.01      0.000     0.000     0.000     0.000        1   Module#included
  0.01      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.01      0.000     0.000     0.000     0.000        2   Thread::Mutex#unlock

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/heap.rb -- 
#
# display the results of TernaryHeap push and pop
#

push: 63 51 10 90 71 60 95 41 84 41 23 51 36 86 89 58 67 36 63 79 20 91 95 87 96 58 55 88 64 0
array: [96, 91, 95, 63, 89, 67, 90, 95, 88, 64, 23, 51, 36, 51, 86, 58, 60, 36, 63, 71, 20, 79, 10, 84, 87, 41, 55, 58, 41, 0]
heap: true
                                       96                                       
            91                        95                        63            
   89      67      90      95      88      64      23      51      36   
51 86 58 60 36 63 71 20 79 10 84 87 41 55 58 41 0 


pop: 96
array: [95, 91, 95, 63, 89, 67, 90, 87, 88, 64, 23, 51, 36, 51, 86, 58, 60, 36, 63, 71, 20, 79, 10, 84, 0, 41, 55, 58, 41]
heap: true
                                       95                                       
            91                        95                        63            
   89      67      90      87      88      64      23      51      36   
51 86 58 60 36 63 71 20 79 10 84 0 41 55 58 41 


pop: 95 95 91 90 89 88 87 86 84
array: [79, 71, 64, 63, 58, 67, 20, 10, 58, 41, 23, 51, 36, 51, 55, 41, 60, 36, 63, 0]
heap: true
                                       79                                       
            71                        64                        63            
   58      67      20      10      58      41      23      51      36   
51 55 41 60 36 63 0 


push: 75 56 2 37 31 81 25 43 24 31 66 47 86 52 96 84 38 8 4 38 54 21 15 75 76 20 93 84 19 26
array: [96, 93, 79, 86, 84, 67, 71, 37, 64, 66, 63, 84, 38, 54, 75, 76, 60, 36, 63, 0, 20, 56, 2, 10, 31, 58, 25, 43, 24, 31, 41, 23, 47, 52, 51, 81, 38, 8, 4, 36, 51, 21, 15, 55, 58, 20, 41, 75, 19, 26]
heap: true
                                       96                                       
            93                        79                        86            
   84      67      71      37      64      66      63      84      38   
54 75 76 60 36 63 0 20 56 2 10 31 58 25 43 24 31 41 23 47 52 51 81 38 8 4 36 
51 21 15 55 58 20 41 75 19 26 

Measure Mode: wall_time
Thread ID: 47340340943880
Fiber ID: 47340340895520
Total: 0.010985
Sort by: self_time

 %self      total      self      wait     child     calls  name
  8.69      0.006     0.001     0.000     0.005      303  *Array#each
  6.04      0.001     0.001     0.000     0.001      129   Kernel#loop
  4.97      0.001     0.001     0.000     0.001      346   CompSci::Heap#heapish?
  4.12      0.001     0.000     0.000     0.000      555   <Class::CompSci::CompleteNaryTree>#parent_idx
  4.08      0.003     0.000     0.000     0.003      170  *Array#initialize
  3.37      0.000     0.000     0.000     0.000     1585   Integer#+
  3.13      0.000     0.000     0.000     0.000      847   Integer#*
  2.46      0.000     0.000     0.000     0.000      955   Integer#<
  2.17      0.000     0.000     0.000     0.000      475   BasicObject#!=
  1.89      0.000     0.000     0.000     0.000      813   Integer#/
  1.76      0.000     0.000     0.000     0.000      599   Array#length
  1.73      0.000     0.000     0.000     0.000      844   Array#[]
  1.56      0.001     0.000     0.000     0.001      108  *CompSci::Heap#sift_up
  1.56      0.000     0.000     0.000     0.000      327   Integer#to_s
  1.41      0.000     0.000     0.000     0.000      615   Integer#-
  1.20      0.002     0.000     0.000     0.001      129   <Class::CompSci::CompleteNaryTree>#gen
  1.19      0.000     0.000     0.000     0.000      142   String#+
  1.13      0.001     0.000     0.000     0.001      167   <Class::CompSci::CompleteNaryTree>#children_idx
  1.06      0.000     0.000     0.000     0.000      466   Integer#==
  1.05      0.000     0.000     0.000     0.000      397   Kernel#class
  0.80      0.001     0.000     0.000     0.001       60   CompSci::Heap#push
  0.77      0.000     0.000     0.000     0.000      346   Integer#<=>
  0.77      0.011     0.000     0.000     0.011        2   Global#[No method]
  0.75      0.001     0.000     0.000     0.000       38   CompSci::Heap#heapiest
  0.71      0.001     0.000     0.000     0.001       60   Kernel#tap
  0.69      0.000     0.000     0.000     0.000        3   Array#join
  0.69      0.000     0.000     0.000     0.000      129   String#ljust
  0.67      0.000     0.000     0.000     0.000        4   Array#inspect
  0.66      0.000     0.000     0.000     0.000      129   String#rjust
  0.62      0.003     0.000     0.000     0.003      171  *Class#new
  0.60      0.000     0.000     0.000     0.000      258   String#size
  0.56      0.000     0.000     0.000     0.000      108   Integer#<=
  0.51      0.000     0.000     0.000     0.000      152   Array#[]=
  0.44      0.000     0.000     0.000     0.000      129   Integer#**
  0.41      0.000     0.000     0.000     0.000      129   Array#max
  0.40      0.001     0.000     0.000     0.001       38  *CompSci::Heap#sift_down
  0.38      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.36      0.000     0.000     0.000     0.000      139   BasicObject#!
  0.33      0.003     0.000     0.000     0.003       24   IO#puts
  0.32      0.000     0.000     0.000     0.000       40   IO#write
  0.32      0.000     0.000     0.000     0.000      125   Array#<<
  0.26      0.000     0.000     0.000     0.000       60   Kernel#rand
  0.24      0.001     0.000     0.000     0.001       10   CompSci::Heap#pop
  0.21      0.000     0.000     0.000     0.000       60   Array#push
  0.17      0.000     0.000     0.000     0.000        4   String#%
  0.15      0.003     0.000     0.000     0.003       24   Kernel#puts
  0.15      0.000     0.000     0.000     0.000       38   Integer#>=
  0.14      0.000     0.000     0.000     0.000       38   Array#first
  0.14      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.14      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.09      0.003     0.000     0.000     0.003        4   CompSci::CompleteNaryTree#display
  0.08      0.000     0.000     0.000     0.000       10   Array#unshift
  0.08      0.000     0.000     0.000     0.000       10   Array#shift
  0.08      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.08      0.002     0.000     0.000     0.002      129  *CompSci::Heap#heap?
  0.08      0.000     0.000     0.000     0.000       22   Module#method_added
  0.06      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.06      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.06      0.003     0.000     0.000     0.003        4   Enumerable#each_with_index
  0.05      0.000     0.000     0.000     0.000        9   BasicObject#==
  0.05      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.05      0.000     0.000     0.000     0.000        4   TrueClass#to_s
  0.05      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.05      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.05      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.05      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.04      0.000     0.000     0.000     0.000       10   Array#pop
  0.04      0.000     0.000     0.000     0.000        1   Module#append_features
  0.04      0.000     0.000     0.000     0.000        5   Class#inherited
  0.04      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.04      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.03      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.03      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.03      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.03      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.02      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#initialize
  0.01      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/heap_push.rb -- 
#
# 3 seconds worth of pushes
#

10000th push: 0.00003113 s
20000th push: 0.00008477 s
30000th push: 0.00004762 s
40000th push: 0.00005479 s
50000th push: 0.00005760 s
60000th push: 0.00002124 s
70000th push: 0.00002147 s
80000th push: 0.00002672 s
90000th push: 0.00002100 s
100000th push: 0.00001223 s
-------------
    100k push: 2.70038117 s (37k push / s)

110000th push: 0.00006637 s
pushed 111211 items in 3.0 s

still a heap with 111212 items? YES - 1.498 sec

Measure Mode: wall_time
Thread ID: 47320438684680
Fiber ID: 47320438636320
Total: 4.500400
Sort by: self_time

 %self      total      self      wait     child     calls  name
 10.82      1.051     0.487     0.000     0.564   364480   CompSci::Heap#heapish?
  7.19      2.083     0.324     0.000     1.759   253284  *CompSci::Heap#sift_up
  5.62      3.000     0.253     0.000     2.747        1   Kernel#loop
  4.83      0.218     0.218     0.000     0.000  1013104   Array#[]
  4.57      0.350     0.206     0.000     0.144   111212   Array#initialize
  4.33      0.319     0.195     0.000     0.124   253269   <Class::CompSci::CompleteNaryTree>#parent_idx
  3.55      2.330     0.160     0.000     2.171   111212   CompSci::Heap#push
  3.44      0.236     0.155     0.000     0.081   364480   BasicObject#!=
  3.14      0.141     0.141     0.000     0.000   586904   Integer#*
  2.64      0.119     0.119     0.000     0.000   556059   Integer#+
  2.40      0.108     0.108     0.000     0.000   475702   Integer#==
  2.10      0.245     0.094     0.000     0.151   111225   <Module::CompSci::Timer>#since
  2.05      0.092     0.092     0.000     0.000   364481   Integer#-
  2.02      0.091     0.091     0.000     0.000   364481   Kernel#class
  1.96      0.088     0.088     0.000     0.000   364480   Integer#<=>
  1.73      0.078     0.078     0.000     0.000   333637   Array#length
  1.58      0.119     0.071     0.000     0.048   111240   <Module::CompSci::Timer>#now
  1.57      0.071     0.071     0.000     0.000   284144   Array#[]=
  1.44      0.065     0.065     0.000     0.000   253284   Integer#<=
  1.41      0.466     0.064     0.000     0.402   111212   <Class::CompSci::CompleteNaryTree>#children_idx
  1.35      0.061     0.061     0.000     0.000   253269   Integer#/
  1.33      0.060     0.060     0.000     0.000   253269   BasicObject#!
  1.21      0.054     0.054     0.000     0.000   222424   Integer#<
  1.17      0.402     0.053     0.000     0.350   111213   Class#new
  1.06      0.048     0.048     0.000     0.000   111240   <Module::Process>#clock_gettime
  1.06      0.048     0.048     0.000     0.000   111212   Kernel#rand
  0.88      0.040     0.040     0.000     0.000   111211   Float#>
  0.70      0.032     0.032     0.000     0.000   111212   Array#push
  0.70      0.032     0.032     0.000     0.000   111225   Float#-
  0.64      0.029     0.029     0.000     0.000   111211   Array#<<
  0.64      0.029     0.029     0.000     0.000   111222   Integer#%
  0.01      0.000     0.000     0.000     0.000       14   String#%
  0.00      4.500     0.000     0.000     4.500        2   Global#[No method]
  0.00      1.499     0.000     0.000     1.499       12   <Module::CompSci::Timer>#elapsed
  0.00      0.000     0.000     0.000     0.000       35   IO#write
  0.00      1.498     0.000     0.000     1.498   222427  *Array#each
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.000     0.000     0.000     0.000       19   Kernel#puts
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000       19   IO#puts
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000       22   Module#method_added
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.00      1.498     0.000     0.000     1.498   111212  *CompSci::Heap#heap?
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#size
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.00      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_s
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_f
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.00      0.000     0.000     0.000     0.000        5   Class#inherited
  0.00      0.000     0.000     0.000     0.000        1   Kernel#print
  0.00      0.000     0.000     0.000     0.000        1   Float#/
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        1   Module#included
  0.00      0.000     0.000     0.000     0.000        1   Module#alias_method

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/tree.rb -- 
#
# Try out Binary-, Ternary-, and QuaternaryTree
#

[79, 72, 49, 94, 62, 52, 58, 60, 89, 40, 87, 23, 49, 40, 46, 13, 19, 74, 34, 59, 35, 90, 17, 27, 46, 91, 68, 16, 74, 82]
#<CompSci::BinaryTree:0x00563a5b19e218 @root=#<CompSci::ChildNode:0x2b1d2d8cf0bci @value=79 @children=[72, 49]>, @child_slots=2, @open_parent=#<CompSci::ChildNode:0x2b1d2d8ce9c8i @value=46 @children=[82]>>
                                       79                                       
                   72                                      49                   
         94                  62                  52                  58         
    60        89        40        87        23        49        40        46    
  13   19   74   34   59   35   90   17   27   46   91   68   16   74   82 

df_search visited: 79 72 94 60 13 19 89 74 34 62 40 59 35 87 90 17 49 52 23 27 46 49 91 68 58 40 16 74 46 82


push: [64, 50, 54, 88, 91, 43, 47, 32, 96, 63, 96, 62, 94, 87, 82, 42, 65, 0, 52, 39, 54, 2, 10, 84, 67, 45, 34, 28, 43, 52]

                                       79                                       
                   72                                      49                   
         94                  62                  52                  58         
    60        89        40        87        23        49        40        46    
  13   19   74   34   59   35   90   17   27   46   91   68   16   74   82   64 
50 54 88 91 43 47 32 96 63 96 62 94 87 82 42 65 0 52 39 54 2 10 84 67 45 34 28 43 52 


[79, 72, 49, 94, 62, 52, 58, 60, 89, 40, 87, 23, 49, 40, 46, 13, 19, 74, 34, 59, 35, 90, 17, 27, 46, 91, 68, 16, 74, 82]
#<CompSci::TernaryTree:0x00563a5b0f4448 @root=#<CompSci::ChildNode:0x2b1d2d87a1e8i @value=79 @children=[72, 49, 94]>, @child_slots=3, @open_parent=#<CompSci::ChildNode:0x2b1d2d877a38i @value=40 @children=[74, 82]>>
                                       79                                       
            72                        49                        94            
   62      52      58      60      89      40      87      23      49   
40 46 13 19 74 34 59 35 90 17 27 46 91 68 16 74 82 

df_search visited: 79 72 62 40 46 13 52 19 74 34 58 59 35 90 49 60 17 27 46 89 91 68 16 40 74 82 94 87 23 49


push: [67, 6, 12, 24, 62, 54, 87, 83, 64, 8, 77, 51, 46, 26, 39, 56, 49, 45, 48, 97, 54, 89, 6, 31, 38, 1, 42, 1, 49, 50]

                                       79                                       
            72                        49                        94            
   62      52      58      60      89      40      87      23      49   
40 46 13 19 74 34 59 35 90 17 27 46 91 68 16 74 82 67 6 12 24 62 54 87 83 64 8 
77 51 46 26 39 56 49 45 48 97 54 89 6 31 38 1 42 1 49 50 


[79, 72, 49, 94, 62, 52, 58, 60, 89, 40, 87, 23, 49, 40, 46, 13, 19, 74, 34, 59, 35, 90, 17, 27, 46, 91, 68, 16, 74, 82]
#<CompSci::QuaternaryTree:0x00563a5b076188 @root=#<CompSci::ChildNode:0x2b1d2d83b240i @value=79 @children=[72, 49, 94, 62]>, @child_slots=4, @open_parent=#<CompSci::ChildNode:0x2b1d2d837d84i @value=60 @children=[82]>>
                                       79                                       
         72                  49                  94                  62         
  52   58   60   89   40   87   23   49   40   46   13   19   74   34   59   35 
90 17 27 46 91 68 16 74 82 

df_search visited: 79 72 52 90 17 27 46 58 91 68 16 74 60 82 89 49 40 87 23 49 94 40 46 13 19 62 74 34 59 35


push: [76, 48, 72, 70, 40, 87, 50, 41, 88, 85, 62, 60, 53, 5, 47, 85, 67, 47, 64, 0, 39, 29, 23, 27, 84, 46, 78, 8, 8, 77]

                                       79                                       
         72                  49                  94                  62         
  52   58   60   89   40   87   23   49   40   46   13   19   74   34   59   35 
90 17 27 46 91 68 16 74 82 76 48 72 70 40 87 50 41 88 85 62 60 53 5 47 85 67 47 64 0 39 29 23 27 84 46 78 8 8 77 


Measure Mode: wall_time
Thread ID: 47404316900360
Fiber ID: 47404316853360
Total: 0.011796
Sort by: self_time

 %self      total      self      wait     child     calls  name
 20.93      0.006     0.002     0.000     0.004       32   CompSci::Tree#bf_search
  4.56      0.001     0.001     0.000     0.000      671   CompSci::NaryTree#open_parent?
  2.89      0.000     0.000     0.000     0.000      292   String#+
  2.80      0.000     0.000     0.000     0.000      593   Array#+
  2.32      0.002     0.000     0.000     0.002      177   CompSci::NaryTree#open_parent
  2.25      0.000     0.000     0.000     0.000      799   Array#shift
  2.23      0.000     0.000     0.000     0.000      180   CompSci::ChildNode#initialize
  2.22      0.000     0.000     0.000     0.000     1100   Integer#+
  2.15      0.000     0.000     0.000     0.000      379   CompSci::Node#to_s
  2.04      0.001     0.000     0.000     0.000      177   CompSci::ChildNode#add_child
  1.72      0.000     0.000     0.000     0.000      357   BasicObject#!=
  1.70      0.000     0.000     0.000     0.000      808   Array#empty?
  1.68      0.000     0.000     0.000     0.000      562   Integer#to_s
  1.60      0.001     0.000     0.000     0.000      187  *Class#new
  1.57      0.001     0.000     0.000     0.001      177   CompSci::Node#new_child
  1.51      0.000     0.000     0.000     0.000      270   String#ljust
  1.50      0.010     0.000     0.000     0.010      156  *Array#each
  1.40      0.000     0.000     0.000     0.000      625   BasicObject#!
  1.38      0.001     0.000     0.000     0.000      650  *CompSci::ChildNode#gen
  1.33      0.004     0.000     0.000     0.004      177   CompSci::NaryTree#push
  1.30      0.000     0.000     0.000     0.000      671   Integer#<
  1.13      0.000     0.000     0.000     0.000      671   Array#length
  1.09      0.000     0.000     0.000     0.000      540   Integer#/
  1.05      0.000     0.000     0.000     0.000      540   String#size
  0.99      0.000     0.000     0.000     0.000      177   CompSci::Node#add_child
  0.97      0.000     0.000     0.000     0.000      270   String#rjust
  0.96      0.000     0.000     0.000     0.000      360   Integer#**
  0.96      0.000     0.000     0.000     0.000        6   Kernel#p
  0.94      0.000     0.000     0.000     0.000      180   CompSci::Node#initialize
  0.80      0.000     0.000     0.000     0.000      270   Integer#==
  0.78      0.000     0.000     0.000     0.000      270   Array#max
  0.74      0.000     0.000     0.000     0.000      245   Kernel#respond_to?
  0.71      0.000     0.000     0.000     0.000       62   Enumerable#find
  0.62      0.000     0.000     0.000     0.000        9   Array#join
  0.62      0.000     0.000     0.000     0.000       90   <Module::Math>#log
  0.61      0.000     0.000     0.000     0.000      267   Array#<<
  0.61      0.000     0.000     0.000     0.000       62   CompSci::NaryTree#open_sibling
  0.57      0.000     0.000     0.000     0.000        6   Array#inspect
  0.47      0.000     0.000     0.000     0.000       31   IO#puts
  0.46      0.000     0.000     0.000     0.000        4   Array#initialize
  0.37      0.000     0.000     0.000     0.000      177   BasicObject#==
  0.35      0.000     0.000     0.000     0.000      120   Kernel#rand
  0.35      0.000     0.000     0.000     0.000      183   Kernel#class
  0.33      0.000     0.000     0.000     0.000        3   Kernel#inspect
  0.28      0.000     0.000     0.000     0.000       62   CompSci::ChildNode#siblings
  0.26      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.26      0.000     0.000     0.000     0.000        9   String#%
  0.25      0.000     0.000     0.000     0.000       43   IO#write
  0.20      0.012     0.000     0.000     0.012        2   Global#[No method]
  0.20      0.000     0.000     0.000     0.000        6   CompSci::Node#inspect
  0.19      0.000     0.000     0.000     0.000       90   Float#floor
  0.19      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.17      0.000     0.000     0.000     0.000       31   Kernel#puts
  0.10      0.000     0.000     0.000     0.000        6   Array#map
  0.10      0.000     0.000     0.000     0.000       90  *CompSci::Tree#df_search
  0.10      0.000     0.000     0.000     0.000       34   Module#method_added
  0.10      0.003     0.000     0.000     0.003        4   CompSci::NaryTree#display
  0.09      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.08      0.000     0.000     0.000     0.000        2   Module#attr_accessor
  0.08      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.05      0.000     0.000     0.000     0.000        3   CompSci::NaryTree#initialize
  0.05      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.05      0.000     0.000     0.000     0.000        6   Module#to_s
  0.05      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.05      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.05      0.000     0.000     0.000     0.000        3   CompSci::Tree#initialize
  0.04      0.000     0.000     0.000     0.000        1   CompSci::QuaternaryTree#initialize
  0.04      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.04      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.04      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.03      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.03      0.000     0.000     0.000     0.000        2   Module#alias_method
  0.03      0.000     0.000     0.000     0.000        7   Class#inherited
  0.03      0.001     0.000     0.000     0.001        2   CompSci::BinaryTree#display
  0.03      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.03      0.000     0.000     0.000     0.000        1   CompSci::BinaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        4   BasicObject#singleton_method_added
  0.02      0.000     0.000     0.000     0.000        1   CompSci::TernaryTree#initialize
  0.02      0.000     0.000     0.000     0.000       11   Integer#>
  0.02      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.02      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.02      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.02      0.000     0.000     0.000     0.000        1   Module#append_features
  0.02      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.01      0.000     0.000     0.000     0.000        1   Module#included
  0.01      0.000     0.000     0.000     0.000        6   Kernel#object_id

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/tree_push.rb -- 
#
# 3 seconds worth of pushes
#

100th push: 0.00002247 s
200th push: 0.00001426 s
300th push: 0.00001440 s
400th push: 0.00001505 s
500th push: 0.00001524 s
600th push: 0.00001526 s
700th push: 0.00001522 s
800th push: 0.00001553 s
900th push: 0.00001822 s
1000th push: 0.00001577 s
-----------
    1k push: 0.3179 s (3146 push / s)

1100th push: 0.00001593 s
1200th push: 0.00001590 s
1300th push: 0.00001578 s
1400th push: 0.00001405 s
1500th push: 0.00001637 s
1600th push: 0.00001654 s
1700th push: 0.00002115 s
1800th push: 0.00001933 s
1900th push: 0.00001550 s
2000th push: 0.00001797 s
-----------
    1k push: 0.9931 s (1006 push / s)

2100th push: 0.00001823 s
2200th push: 0.00001922 s
2300th push: 0.00001912 s
2400th push: 0.00001809 s
2500th push: 0.00001854 s
2600th push: 0.00001897 s
2700th push: 0.00001846 s
2800th push: 0.00001921 s
2900th push: 0.00002003 s
pushed 2963 items in 3.0 s

#
# 30 inserts, puts, df_search
#

[26, 51, 3, 82, 71, 77, 31, 21, 64, 84, 39, 62, 61, 50, 12, 1, 24, 95, 17, 63, 32, 91, 41, 32, 75, 45, 26, 65, 81, 58]
                                       26                                       
                   51                                       3                   
         82                  71                  77                  31         
    21        64        84        39        62        61        50        12    
  1    24   95   17   63   32   91   41   32   75   45   26   65   81   58 
#<CompSci::BinaryTree:0x0055f4de7fd270 @root=#<CompSci::ChildNode:0x2afa6f3fe910i @value=26 @children=[51, 3]>, @child_slots=2, @open_parent=#<CompSci::ChildNode:0x2afa6f3fc430i @value=12 @children=[58]>>

visited 26
visited 51
visited 82
visited 21
visited 1
visited 24
visited 64
visited 95
visited 17
visited 71
visited 84
visited 63
visited 32
visited 39
visited 91
visited 41
visited 3
visited 77
visited 62
visited 32
visited 75
visited 61
visited 45
visited 26
visited 31
visited 50
visited 65
visited 81
visited 12
visited 58

push: [20, 2, 0, 30, 1, 56, 11, 6, 8, 50, 1, 14, 66, 35, 80, 31, 15, 36, 42, 18, 19, 98, 85, 62, 10, 18, 72, 27, 98, 49]
                                       26                                       
                   51                                       3                   
         82                  71                  77                  31         
    21        64        84        39        62        61        50        12    
  1    24   95   17   63   32   91   41   32   75   45   26   65   81   58   20 
2 0 30 1 56 11 6 8 50 1 14 66 35 80 31 15 36 42 18 19 98 85 62 10 18 72 27 98 49 

Measure Mode: wall_time
Thread ID: 47255095917580
Fiber ID: 47255095867500
Total: 3.009113
Sort by: self_time

 %self      total      self      wait     child     calls  name
 34.45      2.927     1.037     0.000     1.890      758   CompSci::Tree#bf_search
 20.33      0.612     0.612     0.000     0.000   549396   Array#+
 16.44      0.762     0.495     0.000     0.267   556100   CompSci::NaryTree#open_parent?
  8.02      0.241     0.241     0.000     0.000   550212   Array#shift
  5.10      0.153     0.153     0.000     0.000   550215   Array#empty?
  4.62      0.139     0.139     0.000     0.000   556100   Array#length
  4.31      0.130     0.130     0.000     0.000   550154   BasicObject#!
  4.25      0.128     0.128     0.000     0.000   556100   Integer#<
  0.28      3.003     0.009     0.000     2.995        1   Kernel#loop
  0.23      2.950     0.007     0.000     2.943     3022   CompSci::NaryTree#open_parent
  0.18      0.011     0.005     0.000     0.006     3022   CompSci::ChildNode#add_child
  0.14      0.007     0.004     0.000     0.003     3024   CompSci::ChildNode#initialize
  0.13      0.027     0.004     0.000     0.023     3022   CompSci::Node#new_child
  0.13      0.011     0.004     0.000     0.007     3028  *Class#new
  0.11      2.980     0.003     0.000     2.977     3022   CompSci::NaryTree#push
  0.10      0.009     0.003     0.000     0.006     2995   <Module::CompSci::Timer>#since
  0.10      0.007     0.003     0.000     0.004     1543  *Array#each
  0.09      0.003     0.003     0.000     0.000     3024   CompSci::Node#initialize
  0.08      0.002     0.002     0.000     0.000     3024   Kernel#rand
  0.08      0.002     0.002     0.000     0.000     3028   <Module::Process>#clock_gettime
  0.08      0.005     0.002     0.000     0.002     3028   <Module::CompSci::Timer>#now
  0.07      0.013     0.002     0.000     0.011     1510   CompSci::NaryTree#open_sibling
  0.07      0.004     0.002     0.000     0.001     3022   CompSci::Node#add_child
  0.07      0.009     0.002     0.000     0.007     1510   Enumerable#find
  0.06      0.002     0.002     0.000     0.000     2963   Float#>
  0.06      0.002     0.002     0.000     0.001     3022   BasicObject#!=
  0.05      0.001     0.001     0.000     0.000     3022   Array#<<
  0.04      0.001     0.001     0.000     0.000     2995   Float#-
  0.04      0.001     0.001     0.000     0.000     1510   CompSci::ChildNode#siblings
  0.03      0.001     0.001     0.000     0.000     3233   Integer#+
  0.03      0.001     0.001     0.000     0.000     2992   Integer#%
  0.03      0.001     0.001     0.000     0.000     3024   Kernel#class
  0.03      0.001     0.001     0.000     0.000     3082   Integer#==
  0.03      0.001     0.001     0.000     0.000     3022   BasicObject#==
  0.02      0.001     0.001     0.000     0.000     1513   Kernel#respond_to?
  0.02      0.001     0.001     0.000     0.000       34   String#%
  0.00      0.000     0.000     0.000     0.000      142   IO#write
  0.00      3.009     0.000     0.000     3.009        2   Global#[No method]
  0.00      0.000     0.000     0.000     0.000      186   Integer#to_s
  0.00      0.000     0.000     0.000     0.000       99   String#+
  0.00      0.002     0.000     0.000     0.002       75   IO#puts
  0.00      0.000     0.000     0.000     0.000      125   CompSci::Node#to_s
  0.00      0.000     0.000     0.000     0.000      180   Integer#**
  0.00      0.001     0.000     0.000     0.001       29   <Module::CompSci::Timer>#elapsed
  0.00      0.002     0.000     0.000     0.002       75   Kernel#puts
  0.00      0.000     0.000     0.000     0.000       90   <Module::Math>#log
  0.00      0.000     0.000     0.000     0.000       90   String#ljust
  0.00      0.000     0.000     0.000     0.000        2   Kernel#p
  0.00      0.000     0.000     0.000     0.000       90   String#rjust
  0.00      0.000     0.000     0.000     0.000      180   Integer#/
  0.00      0.000     0.000     0.000     0.000      180   String#size
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.000     0.000     0.000     0.000        2   Array#inspect
  0.00      0.000     0.000     0.000     0.000       90   Array#max
  0.00      0.000     0.000     0.000     0.000       90   Float#floor
  0.00      0.000     0.000     0.000     0.000        2   Array#initialize
  0.00      0.000     0.000     0.000     0.000       34   Module#method_added
  0.00      0.000     0.000     0.000     0.000        1   Kernel#inspect
  0.00      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.000     0.000     0.000     0.000        2   Array#join
  0.00      0.000     0.000     0.000     0.000        2   Module#attr_accessor
  0.00      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000        2   CompSci::Node#inspect
  0.00      0.001     0.000     0.000     0.001        2   CompSci::BinaryTree#display
  0.00      0.000     0.000     0.000     0.000        2   CompSci::Tree#initialize
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000       30  *CompSci::Tree#df_search
  0.00      0.000     0.000     0.000     0.000        2   Integer#to_f
  0.00      0.000     0.000     0.000     0.000        2   Module#to_s
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        2   CompSci::NaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        2   CompSci::BinaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        7   Class#inherited
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        2   Array#map
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000       11   Integer#>
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        4   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        2   Float#/
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        2   Module#alias_method
  0.00      0.000     0.000     0.000     0.000        2   Kernel#object_id
  0.00      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
