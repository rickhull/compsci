0.02 0.02 0.00 1/81 6898
[68, 60, 11, 47, 10, 18, 12, 20, 50, 83, 63, 82, 72, 83, 65, 94, 61, 33, 86, 84, 26, 89, 74, 77, 65, 46, 46, 87, 26, 2]
                                        68                                      
                    60                                      11                  
          47                  10                  18                  12        
     20        50        83        63        82        72        83        65   
   94   61   33   86   84   26   89   74   77   65   46   46   87   26   2 
visited 68
visited 60
visited 47
visited 20
visited 94
visited 61
visited 50
visited 33
visited 86
visited 10
visited 83
visited 84
visited 26
visited 63
visited 89
visited 74
visited 11
visited 18
visited 82
visited 77
visited 65
visited 72
visited 46
visited 46
visited 12
visited 83
visited 87
visited 26
visited 65
visited 2

#<CompSci::BinaryTree:0x005565a40ac9e0 @root=#<CompSci::Tree::Node:0x2ab2d205652ci @value=68 @children=[60, 11]>, @child_slots=2, @open_parent=#<CompSci::Tree::Node:0x2ab2d204bca8i @value=65 @children=[2]>>
Measure Mode: wall_time
Thread ID: 46947514579980
Fiber ID: 46947514533860
Total: 0.002935
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.46      0.001     0.000     0.000     0.001       15   CompSci::Tree#bf_search
  3.75      0.000     0.000     0.000     0.000      148   CompSci::Tree#open_parent?
  2.01      0.000     0.000     0.000     0.000      135   Array#+
  1.97      0.000     0.000     0.000     0.000       96   IO#write
  1.93      0.000     0.000     0.000     0.000      150   BasicObject#!
  1.68      0.000     0.000     0.000     0.000      179   Array#shift
  1.62      0.000     0.000     0.000     0.000       31   Class#new
  1.50      0.000     0.000     0.000     0.000      148   Integer#<
  1.47      0.000     0.000     0.000     0.000        2   Kernel#p
  1.45      0.000     0.000     0.000     0.000       65   CompSci::Tree::Node#to_s
  1.33      0.003     0.000     0.000     0.003        2   Global#[No method]
  1.32      0.000     0.000     0.000     0.000       29   CompSci::Tree::Node#add_child
  1.32      0.000     0.000     0.000     0.000       30   CompSci::Tree::Node#initialize
  1.29      0.000     0.000     0.000     0.000       30   <Module::Math>#log
  1.26      0.000     0.000     0.000     0.000      180   Array#empty?
  1.25      0.000     0.000     0.000     0.000      148   Array#length
  1.15      0.000     0.000     0.000     0.000        1   Kernel#inspect
  1.14      0.000     0.000     0.000     0.000       96   Integer#to_s
  1.13      0.000     0.000     0.000     0.000       29   CompSci::Tree::Node#new_child
  1.10      0.001     0.000     0.000     0.001       29   CompSci::Tree#open_parent
  0.97      0.000     0.000     0.000     0.000        6   IO#set_encoding
  0.92      0.000     0.000     0.000     0.000       60   Integer#**
  0.92      0.001     0.000     0.000     0.001       29   CompSci::Tree#push
  0.82      0.000     0.000     0.000     0.000       36   IO#puts
  0.79      0.000     0.000     0.000     0.000       36   Kernel#puts
  0.68      0.000     0.000     0.000     0.000        2   CompSci::Tree::Node#inspect
  0.67      0.000     0.000     0.000     0.000       30   Kernel#rand
  0.56      0.000     0.000     0.000     0.000       29   BasicObject#!=
  0.55      0.000     0.000     0.000     0.000        1   Integer#times
  0.53      0.000     0.000     0.000     0.000       30   Kernel#print
  0.48      0.000     0.000     0.000     0.000       60   Integer#/
  0.43      0.000     0.000     0.000     0.000       30   String#ljust
  0.43      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.38      0.000     0.000     0.000     0.000        2   String#%
  0.38      0.000     0.000     0.000     0.000       30   String#rjust
  0.38      0.000     0.000     0.000     0.000       32  *Array#each
  0.34      0.000     0.000     0.000     0.000       30   Float#floor
  0.32      0.000     0.000     0.000     0.000        1   Array#inspect
  0.30      0.000     0.000     0.000     0.000       59   Array#<<
  0.29      0.000     0.000     0.000     0.000       26   Module#method_added
  0.28      0.000     0.000     0.000     0.000       31   Kernel#class
  0.27      0.000     0.000     0.000     0.000        1   Module#attr_accessor
  0.26      0.000     0.000     0.000     0.000       29   BasicObject#==
  0.24      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_enter
  0.24      0.000     0.000     0.000     0.000       30   Integer#+
  0.23      0.001     0.000     0.000     0.001        4  *Kernel#require
  0.19      0.000     0.000     0.000     0.000       30   Integer#==
  0.17      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_exit
  0.16      0.000     0.000     0.000     0.000       30  *CompSci::Tree#df_search
  0.16      0.000     0.000     0.000     0.000        2   <Module::Gem>#find_unresolved_default_spec
  0.14      0.000     0.000     0.000     0.000        1   CompSci::BinaryTree#bf_print
  0.14      0.000     0.000     0.000     0.000        1   CompSci::Tree#initialize
  0.13      0.000     0.000     0.000     0.000        2   Array#map
  0.13      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_check_owner
  0.11      0.000     0.000     0.000     0.000        2   <Class::Gem::Specification>#unresolved_deps
  0.11      0.000     0.000     0.000     0.000        2   <Module::Gem>#suffixes
  0.11      0.000     0.000     0.000     0.000        6   <Class::Thread>#current
  0.10      0.000     0.000     0.000     0.000        2   Module#to_s
  0.10      0.000     0.000     0.000     0.000        1   CompSci::BinaryTree#initialize
  0.07      0.000     0.000     0.000     0.000        2   Array#join
  0.07      0.000     0.000     0.000     0.000        5   Integer#>
  0.07      0.000     0.000     0.000     0.000        1   Module#append_features
  0.07      0.000     0.000     0.000     0.000        2   Thread::Mutex#unlock
  0.06      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.06      0.000     0.000     0.000     0.000        2   BasicObject#singleton_method_added
  0.06      0.000     0.000     0.000     0.000        2   Thread::Mutex#lock
  0.03      0.000     0.000     0.000     0.000        2   Kernel#object_id
  0.03      0.000     0.000     0.000     0.000        1   Module#included
  0.03      0.000     0.000     0.000     0.000        4   Class#inherited
  0.03      0.000     0.000     0.000     0.000        2   Kernel#respond_to?

* indicates recursively called methods
#
# 3 seconds worth of inserts
#

10000th push: 0.00001192 s
20000th push: 0.00001184 s
30000th push: 0.00006626 s
40000th push: 0.00003887 s
50000th push: 0.00001186 s
60000th push: 0.00003008 s
70000th push: 0.00002984 s
80000th push: 0.00002087 s
pushed 87377 items in 3.0 s

still a heap with 87377 items? YES - 1.024 sec

#
# 99 inserts; display the internal array
#

push: 61 83 8 8 17 52 48 43 43 55 14 13 56 72 36 2 14 64 72 73 14 96 2 52 1 58 54 48 86 87 8 40 56 30 96 80 23 4 35 1 20 14 12 91 82 81 31 13 84 95 52 82 65 84 8 89 9 6 55 17 57 46 78 33 33 52 77 70 20 53 28 67 71 34 15 83 81 12 69 78 60 97 77 5 94 40 73 31 43 81 18 87 70 68 15 95 11 55 24
heap store: [97, 96, 95, 83, 96, 95, 89, 77, 83, 94, 87, 87, 84, 86, 78, 64, 70, 71, 81, 78, 91, 81, 82, 84, 58, 65, 82, 56, 55, 57, 72, 33, 52, 56, 53, 67, 34, 80, 69, 55, 77, 14, 73, 43, 73, 81, 68, 52, 55, 1, 52, 13, 54, 52, 8, 48, 9, 6, 48, 17, 36, 8, 46, 2, 33, 14, 40, 8, 20, 30, 28, 43, 61, 23, 15, 4, 43, 12, 35, 1, 20, 17, 60, 5, 14, 12, 40, 14, 31, 72, 18, 2, 70, 31, 15, 8, 11, 13, 24]
heap: true

pop: 97
heap store: [96, 96, 95, 83, 94, 95, 89, 77, 83, 91, 87, 87, 84, 86, 78, 64, 70, 71, 81, 78, 73, 81, 82, 84, 58, 65, 82, 56, 55, 57, 72, 33, 52, 56, 53, 67, 34, 80, 69, 55, 77, 14, 40, 43, 73, 81, 68, 52, 55, 1, 52, 13, 54, 52, 8, 48, 9, 6, 48, 17, 36, 8, 46, 2, 33, 14, 40, 8, 20, 30, 28, 43, 61, 23, 15, 4, 43, 12, 35, 1, 20, 17, 60, 5, 14, 12, 24, 14, 31, 72, 18, 2, 70, 31, 15, 8, 11, 13]
heap: true

pop: 96 96 95 95 94 91 89 87 87
heap store: [86, 83, 84, 83, 82, 84, 78, 77, 81, 78, 81, 58, 82, 56, 72, 64, 70, 71, 80, 77, 73, 73, 81, 55, 52, 65, 52, 48, 55, 57, 46, 33, 52, 56, 53, 67, 34, 43, 69, 55, 60, 14, 40, 43, 72, 70, 68, 52, 11, 1, 15, 13, 54, 31, 8, 8, 9, 6, 48, 17, 36, 8, 18, 2, 33, 14, 40, 8, 20, 30, 28, 43, 61, 23, 15, 4, 2, 12, 35, 1, 20, 17, 13, 5, 14, 12, 24, 14, 31]
heap: true

Measure Mode: wall_time
Thread ID: 47170899491860
Fiber ID: 47170899425940
Total: 4.032847
Sort by: self_time

 %self      total      self      wait     child     calls  name
  9.77      0.854     0.394     0.000     0.460   286408   CompSci::Heap#heapish?
  7.19      4.033     0.290     0.000     3.743        2   Global#[No method]
  6.78      1.723     0.273     0.000     1.450   198632  *CompSci::Heap#sift_up
  4.47      3.464     0.180     0.000     3.284    87378   <Module::CompSci::Timer>#elapsed
  4.37      0.176     0.176     0.000     0.000   795238   Array#[]
  4.33      0.276     0.175     0.000     0.102   262134   <Module::CompSci::Timer>#now
  4.10      0.263     0.165     0.000     0.098   198619   <Class::CompSci::CompleteBinaryTree>#parent_idx
  3.40      1.932     0.137     0.000     1.795    87476   CompSci::Heap#push
  3.20      0.196     0.129     0.000     0.067   286408   BasicObject#!=
  2.81      0.113     0.113     0.000     0.000   461864   Integer#*
  2.76      0.111     0.111     0.000     0.000   461152   Integer#==
  2.64      0.186     0.107     0.000     0.080    87728   <Class::CompSci::CompleteBinaryTree>#children_idx
  2.52      0.102     0.102     0.000     0.000   262134   <Module::Process>#clock_gettime
  1.96      0.201     0.079     0.000     0.122    87378   <Module::CompSci::Timer>#since
  1.85      0.074     0.074     0.000     0.000   286347   Kernel#class
  1.80      0.073     0.073     0.000     0.000   286095   Integer#-
  1.73      0.070     0.070     0.000     0.000   286398   Integer#<=>
  1.59      0.064     0.064     0.000     0.000   262833   Integer#+
  1.55      0.063     0.063     0.000     0.000   262868   Array#length
  1.45      0.058     0.058     0.000     0.000   222422   Array#[]=
  1.27      0.051     0.051     0.000     0.000   198632   Integer#<=
  1.27      0.051     0.051     0.000     0.000   174755   Float#-
  1.24      0.050     0.050     0.000     0.000   198684   BasicObject#!
  1.23      0.049     0.049     0.000     0.000   175135   Array#<<
  1.21      0.049     0.049     0.000     0.000   174754   Integer#%
  1.20      0.048     0.048     0.000     0.000   198619   Integer#/
  1.02      0.041     0.041     0.000     0.000   175327   Integer#<
  0.98      0.039     0.039     0.000     0.000    87476   Kernel#rand
  0.83      0.033     0.033     0.000     0.000    87377   Float#<
  0.01      0.000     0.000     0.000     0.000       13   String#%
  0.00      0.000     0.000     0.000     0.000      395   Integer#to_s
  0.00      0.003     0.000     0.000     0.003        2   Array#initialize
  0.00      0.000     0.000     0.000     0.000        3   Array#inspect
  0.00      0.002     0.000     0.000     0.002       99   Kernel#tap
  0.00      0.000     0.000     0.000     0.000        2   Array#join
  0.00      0.000     0.000     0.000     0.000       46   IO#write
  0.00      0.000     0.000     0.000     0.000        5   MonitorMixin#mon_enter
  0.00      0.001     0.000     0.000     0.001       65  *CompSci::Heap#sift_down
  0.00      1.027     0.000     0.000     1.027   175331  *Array#each
  0.00      0.000     0.000     0.000     0.000       10   IO#set_encoding
  0.00      0.000     0.000     0.000     0.000       26   IO#puts
  0.00      0.001     0.000     0.000     0.001       10   CompSci::Heap#pop
  0.00      0.000     0.000     0.000     0.000       26   Kernel#puts
  0.00      0.000     0.000     0.000     0.000       65   Integer#>=
  0.00      0.002     0.000     0.000     0.002       10  *Kernel#require
  0.00      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000        5   MonitorMixin#mon_exit
  0.00      1.027     0.000     0.000     1.027    87663  *CompSci::Heap#heap?
  0.00      0.000     0.000     0.000     0.000       15   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        5   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        2   CompSci::Heap#initialize
  0.00      0.000     0.000     0.000     0.000       34   Module#method_added
  0.00      0.000     0.000     0.000     0.000        5   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        1   Module#attr_accessor
  0.00      0.003     0.000     0.000     0.003        4   Class#new
  0.00      0.000     0.000     0.000     0.000        5   Class#inherited
  0.00      0.000     0.000     0.000     0.000        5   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000        5   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000       10   Array#shift
  0.00      0.000     0.000     0.000     0.000        5   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000       10   Array#unshift
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteBinaryTree#size
  0.00      0.000     0.000     0.000     0.000        5   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000       10   Kernel#<=>
  0.00      0.000     0.000     0.000     0.000       10   Array#pop
  0.00      0.000     0.000     0.000     0.000        6   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        3   TrueClass#to_s
  0.00      0.000     0.000     0.000     0.000        2   CompSci::CompleteBinaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        5   Kernel#respond_to?
  0.00      0.000     0.000     0.000     0.000       10   BasicObject#==
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        1   Kernel#print
  0.00      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
