RUBYLIB=lib ruby-prof  examples/binary_tree.rb -- 
/proc/loadavg 0.52 0.25 0.10 1/81 3516
#
# 3 seconds worth of pushes
#

100th push: 0.00001839 s
200th push: 0.00001155 s
300th push: 0.00001316 s
400th push: 0.00001397 s
500th push: 0.00001509 s
600th push: 0.00001404 s
700th push: 0.00001417 s
800th push: 0.00001437 s
900th push: 0.00001421 s
1000th push: 0.00001791 s
-----------
    1k push: 0.3086 s (3240 push / s)

1100th push: 0.00001446 s
1200th push: 0.00004566 s
1300th push: 0.00001473 s
1400th push: 0.00001473 s
1500th push: 0.00001575 s
1600th push: 0.00001499 s
1700th push: 0.00001544 s
1800th push: 0.00001929 s
1900th push: 0.00001801 s
2000th push: 0.00001769 s
-----------
    1k push: 0.9530 s (1049 push / s)

2100th push: 0.00001615 s
2200th push: 0.00002527 s
2300th push: 0.00001873 s
2400th push: 0.00001768 s
2500th push: 0.00001964 s
2600th push: 0.00002013 s
2700th push: 0.00001740 s
2800th push: 0.00001784 s
2900th push: 0.00001734 s
3000th push: 0.00001785 s
-----------
    1k push: 1.6802 s (595 push / s)

pushed 3031 items in 3.0 s

#
# 30 inserts, puts, df_search
#

[23, 92, 96, 64, 56, 94, 90, 0, 35, 82, 23, 98, 33, 91, 78, 1, 52, 96, 16, 84, 2, 92, 75, 33, 97, 30, 97, 85, 77, 70]
                                       23                                       
                   92                                      96                   
         64                  56                  94                  90         
     0        35        82        23        98        33        91        78    
  1    52   96   16   84   2    92   75   33   97   30   97   85   77   70 
#<CompSci::BinaryTree:0x00559c2fe6cf50 @root=#<CompSci::ChildNode:0x2ace17f36780i @value=23 @children=[92, 96]>, @child_slots=2, @open_parent=#<CompSci::ChildNode:0x2ace17f35c7ci @value=78 @children=[70]>>
RUBYLIB=lib ruby-prof  examples/heap.rb -- 
#
# 3 seconds worth of pushes
#

10000th push: 0.00006377 s
20000th push: 0.00002176 s
30000th push: 0.00001305 s
40000th push: 0.00004092 s
50000th push: 0.00001289 s
60000th push: 0.00002181 s
70000th push: 0.00002190 s
80000th push: 0.00002247 s
90000th push: 0.00006331 s
100000th push: 0.00005994 s
-------------
    100k push: 2.76013017 s (36k push / s)

pushed 108762 items in 3.0 s

still a heap with 108763 items? YES - 1.507 sec

#
# display the results of TernaryHeap push and pop
#

push: 65 95 25 77 69 82 20 53 89 78 34 75 38 71 59 72 56 10 70 93 32 29 38 95 81 82 90 6 27 96
array: [96, 93, 95, 77, 72, 70, 82, 89, 90, 95, 34, 75, 38, 65, 59, 71, 56, 10, 69, 20, 32, 29, 25, 38, 81, 53, 82, 6, 27, 78]
heap: true
                                       96                                       
            93                        95                        77            
   72      70      82      89      90      95      34      75      38   
65 59 71 56 10 69 20 32 29 25 38 81 53 82 6 27 78 


pop: 96
array: [95, 93, 95, 77, 72, 70, 82, 89, 90, 78, 34, 75, 38, 65, 59, 71, 56, 10, 69, 20, 32, 29, 25, 38, 81, 53, 82, 6, 27]
heap: true
                                       95                                       
            93                        95                        77            
   72      70      82      89      90      78      34      75      38   
65 59 71 56 10 69 20 32 29 25 38 81 53 82 6 27 


pop: 95 95 93 90 89 82 82 81 78
array: [77, 72, 53, 75, 71, 70, 32, 38, 29, 25, 34, 6, 38, 65, 59, 27, 56, 10, 69, 20]
heap: true
                                       77                                       
            72                        53                        75            
   71      70      32      38      29      25      34       6      38   
65 59 27 56 10 69 20 


push: 64 23 2 33 32 58 41 12 43 29 84 15 65 22 25 48 92 46 72 4 97 68 45 69 80 37 74 77 29 80
array: [97, 92, 77, 84, 80, 80, 64, 38, 53, 58, 65, 75, 72, 71, 72, 77, 70, 10, 69, 20, 32, 23, 2, 33, 32, 29, 41, 12, 25, 29, 43, 15, 34, 22, 6, 25, 48, 38, 46, 4, 65, 68, 45, 59, 69, 37, 27, 74, 29, 56]
heap: true
                                       97                                       
            92                        77                        84            
   80      80      64      38      53      58      65      75      72   
71 72 77 70 10 69 20 32 23 2 33 32 29 41 12 25 29 43 15 34 22 6 25 48 38 46 4 
65 68 45 59 69 37 27 74 29 56 

Measure Mode: wall_time
Thread ID: 46932401151000
Fiber ID: 46932401103780
Total: 4.516333
Sort by: self_time

 %self      total      self      wait     child     calls  name
 11.24      1.074     0.508     0.000     0.566   357180   CompSci::Heap#heapish?
  7.19      2.090     0.325     0.000     1.765   248200  *CompSci::Heap#sift_up
  5.69      3.001     0.257     0.000     2.744      130   Kernel#loop
  4.80      0.363     0.217     0.000     0.146   108930  *Array#initialize
  4.72      0.213     0.213     0.000     0.000   993164   Array#[]
  4.45      0.317     0.201     0.000     0.116   248637   <Class::CompSci::CompleteNaryTree>#parent_idx
  3.56      0.246     0.161     0.000     0.085   357309   BasicObject#!=
  3.52      2.334     0.159     0.000     2.176   108823   CompSci::Heap#push
  3.19      0.144     0.144     0.000     0.000   575198   Integer#*
  2.60      0.117     0.117     0.000     0.000   545381   Integer#+
  2.53      0.114     0.114     0.000     0.000   466072   Integer#==
  2.04      0.245     0.092     0.000     0.153   108775   <Module::CompSci::Timer>#since
  1.96      0.088     0.088     0.000     0.000   357460   Integer#-
  1.81      0.082     0.082     0.000     0.000   357239   Kernel#class
  1.77      0.080     0.080     0.000     0.000   357180   Integer#<=>
  1.61      0.073     0.073     0.000     0.000   278804   Array#[]=
  1.61      0.122     0.073     0.000     0.049   108789   <Module::CompSci::Timer>#now
  1.61      0.073     0.073     0.000     0.000   326877   Array#length
  1.41      0.064     0.064     0.000     0.000   248200   Integer#<=
  1.39      0.477     0.063     0.000     0.415   108927   <Class::CompSci::CompleteNaryTree>#children_idx
  1.28      0.058     0.058     0.000     0.000   248218   BasicObject#!
  1.23      0.056     0.056     0.000     0.000   248895   Integer#/
  1.18      0.416     0.053     0.000     0.363   108932  *Class#new
  1.17      0.053     0.053     0.000     0.000   218472   Integer#<
  1.09      0.049     0.049     0.000     0.000   108789   <Module::Process>#clock_gettime
  1.01      0.046     0.046     0.000     0.000   108823   Kernel#rand
  0.82      0.037     0.037     0.000     0.000   108762   Float#>
  0.72      0.033     0.033     0.000     0.000   108823   Array#push
  0.68      0.031     0.031     0.000     0.000   108775   Float#-
  0.61      0.027     0.027     0.000     0.000   108887   Array#<<
  0.60      0.027     0.027     0.000     0.000   108772   Integer#%
  0.02      1.513     0.001     0.000     1.512   217826  *Array#each
  0.00      0.000     0.000     0.000     0.000       17   String#%
  0.00      0.002     0.000     0.000     0.001      129   <Class::CompSci::CompleteNaryTree>#gen
  0.00      0.000     0.000     0.000     0.000      328   Integer#to_s
  0.00      0.000     0.000     0.000     0.000       73   IO#write
  0.00      0.000     0.000     0.000     0.000      142   String#+
  0.00      0.000     0.000     0.000     0.000      129   String#ljust
  0.00      4.516     0.000     0.000     4.516        2   Global#[No method]
  0.00      0.000     0.000     0.000     0.000      258   String#size
  0.00      0.000     0.000     0.000     0.000        3   Array#join
  0.00      0.000     0.000     0.000     0.000        4   Array#inspect
  0.00      0.000     0.000     0.000     0.000      129   String#rjust
  0.00      0.003     0.000     0.000     0.003       42   IO#puts
  0.00      0.001     0.000     0.000     0.001       35  *CompSci::Heap#sift_down
  0.00      0.001     0.000     0.000     0.001       35   CompSci::Heap#heapiest
  0.00      0.001     0.000     0.000     0.001       60   Kernel#tap
  0.00      0.000     0.000     0.000     0.000      129   Array#max
  0.00      0.003     0.000     0.000     0.003       42   Kernel#puts
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.000     0.000     0.000     0.000      129   Integer#**
  0.00      1.507     0.000     0.000     1.507       11   <Module::CompSci::Timer>#elapsed
  0.00      0.001     0.000     0.000     0.001       10   CompSci::Heap#pop
  0.00      1.509     0.000     0.000     1.509   108892  *CompSci::Heap#heap?
  0.00      0.000     0.000     0.000     0.000       35   Array#first
  0.00      0.000     0.000     0.000     0.000       35   Integer#>=
  0.00      0.001     0.000     0.000     0.001        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.003     0.000     0.000     0.003        4   CompSci::CompleteNaryTree#display
  0.00      0.000     0.000     0.000     0.000        2   CompSci::Heap#initialize
  0.00      0.000     0.000     0.000     0.000       22   Module#method_added
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000       10   Array#shift
  0.00      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        4   TrueClass#to_s
  0.00      0.000     0.000     0.000     0.000        9   BasicObject#==
  0.00      0.000     0.000     0.000     0.000       10   Array#pop
  0.00      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        5   Class#inherited
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000       10   Array#unshift
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#size
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.003     0.000     0.000     0.003        4   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        2   CompSci::CompleteNaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        1   Float#/
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.00      0.000     0.000     0.000     0.000        1   Module#included
  0.00      0.000     0.000     0.000     0.000        1   Kernel#print
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_f
  0.00      0.000     0.000     0.000     0.000        1   Module#alias_method

* indicates recursively called methods
