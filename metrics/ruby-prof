RUBYLIB=lib ruby-prof  examples/complete_tree.rb -- 
/proc/loadavg 0.15 0.10 0.05 1/77 4629
#
# Print CompleteBinary-, Ternary-, and QuaternaryTree
#

[76, 60, 71, 26, 10, 74, 79, 81, 49, 25, 37, 88, 53, 44, 44, 27, 82, 40, 47, 96, 10, 34, 56, 45, 37, 5, 34, 28, 67, 72]
#<CompSci::CompleteBinaryTree:0x0055a9108af368 @array=[76, 60, 71, 26, 10, 74, 79, 81, 49, 25, 37, 88, 53, 44, 44, 27, 82, 40, 47, 96, 10, 34, 56, 45, 37, 5, 34, 28, 67, 72], @child_slots=2>
                                       76                                       
                   60                                      71                   
         26                  10                  74                  79         
    81        49        25        37        88        53        44        44    
  27   82   40   47   96   10   34   56   45   37   5    34   28   67   72 



push: [45, 21, 67, 27, 5, 66, 90, 9, 90, 23, 94, 56, 33, 36, 87, 47, 25, 39, 58, 57, 77, 69, 4, 9, 82, 43, 20, 26, 39, 67]
                                       76                                       
                   60                                      71                   
         26                  10                  74                  79         
    81        49        25        37        88        53        44        44    
  27   82   40   47   96   10   34   56   45   37   5    34   28   67   72   45 
21 67 27 5 66 90 9 90 23 94 56 33 36 87 47 25 39 58 57 77 69 4 9 82 43 20 26 39 67 



[76, 60, 71, 26, 10, 74, 79, 81, 49, 25, 37, 88, 53, 44, 44, 27, 82, 40, 47, 96, 10, 34, 56, 45, 37, 5, 34, 28, 67, 72]
#<CompSci::CompleteTernaryTree:0x0055a91087ed58 @array=[76, 60, 71, 26, 10, 74, 79, 81, 49, 25, 37, 88, 53, 44, 44, 27, 82, 40, 47, 96, 10, 34, 56, 45, 37, 5, 34, 28, 67, 72], @child_slots=3>
                                       76                                       
            60                        71                        26            
   10      74      79      81      49      25      37      88      53   
44 44 27 82 40 47 96 10 34 56 45 37 5 34 28 67 72 



push: [2, 93, 51, 52, 15, 88, 68, 56, 92, 21, 29, 33, 57, 60, 10, 17, 52, 44, 43, 37, 98, 60, 5, 60, 83, 44, 20, 92, 60, 87]
                                       76                                       
            60                        71                        26            
   10      74      79      81      49      25      37      88      53   
44 44 27 82 40 47 96 10 34 56 45 37 5 34 28 67 72 2 93 51 52 15 88 68 56 92 21 
29 33 57 60 10 17 52 44 43 37 98 60 5 60 83 44 20 92 60 87 



[76, 60, 71, 26, 10, 74, 79, 81, 49, 25, 37, 88, 53, 44, 44, 27, 82, 40, 47, 96, 10, 34, 56, 45, 37, 5, 34, 28, 67, 72]
#<CompSci::CompleteQuaternaryTree:0x0055a9107e78b8 @array=[76, 60, 71, 26, 10, 74, 79, 81, 49, 25, 37, 88, 53, 44, 44, 27, 82, 40, 47, 96, 10, 34, 56, 45, 37, 5, 34, 28, 67, 72], @child_slots=4>
                                       76                                       
         60                  71                  26                  10         
  74   79   81   49   25   37   88   53   44   44   27   82   40   47   96   10 
34 56 45 37 5 34 28 67 72 



push: [14, 27, 14, 85, 20, 75, 33, 7, 77, 21, 42, 97, 27, 59, 12, 86, 37, 70, 36, 89, 16, 81, 62, 23, 94, 85, 18, 88, 1, 75]
                                       76                                       
         60                  71                  26                  10         
  74   79   81   49   25   37   88   53   44   44   27   82   40   47   96   10 
34 56 45 37 5 34 28 67 72 14 27 14 85 20 75 33 7 77 21 42 97 27 59 12 86 37 70 36 89 16 81 62 23 94 85 18 88 1 75 



Measure Mode: wall_time
Thread ID: 47092306238460
Fiber ID: 47092306188960
Total: 0.008834
Sort by: self_time

 %self      total      self      wait     child     calls  name
 17.20      0.003     0.002     0.000     0.002      270   Kernel#loop
  9.62      0.001     0.001     0.000     0.001     1077   <Class::CompSci::CompleteNaryTree>#parent_idx
  4.50      0.000     0.000     0.000     0.000     1617   Integer#/
  3.60      0.000     0.000     0.000     0.000     1347   Integer#+
  3.13      0.000     0.000     0.000     0.000     1077   Integer#<
  3.05      0.000     0.000     0.000     0.000     1077   Integer#-
  2.83      0.004     0.000     0.000     0.003      270   <Class::CompSci::CompleteNaryTree>#gen
  2.69      0.000     0.000     0.000     0.000      292   String#+
  2.17      0.000     0.000     0.000     0.000      543   Integer#to_s
  2.02      0.000     0.000     0.000     0.000      270   String#ljust
  1.89      0.000     0.000     0.000     0.000      270   BasicObject#!=
  1.72      0.008     0.000     0.000     0.007        9  *Array#each
  1.52      0.000     0.000     0.000     0.000      540   String#size
  1.37      0.000     0.000     0.000     0.000      180   CompSci::CompleteNaryTree#push
  1.14      0.000     0.000     0.000     0.000      270   String#rjust
  1.08      0.000     0.000     0.000     0.000        9   Array#inspect
  1.06      0.000     0.000     0.000     0.000      270   Integer#**
  0.90      0.000     0.000     0.000     0.000      270   Array#max
  0.86      0.000     0.000     0.000     0.000        4   Array#initialize
  0.85      0.000     0.000     0.000     0.000      270   Kernel#class
  0.82      0.000     0.000     0.000     0.000        6   Kernel#p
  0.70      0.000     0.000     0.000     0.000       37   IO#write
  0.70      0.000     0.000     0.000     0.000      270   Integer#==
  0.55      0.000     0.000     0.000     0.000      120   Kernel#rand
  0.55      0.000     0.000     0.000     0.000      180   Array#shift
  0.54      0.000     0.000     0.000     0.000      180   Array#push
  0.46      0.000     0.000     0.000     0.000      186   Array#empty?
  0.30      0.000     0.000     0.000     0.000        3   Kernel#inspect
  0.30      0.000     0.000     0.000     0.000        6   IO#set_encoding
  0.26      0.009     0.000     0.000     0.009        2   Global#[No method]
  0.22      0.000     0.000     0.000     0.000       28   Kernel#puts
  0.17      0.000     0.000     0.000     0.000       28   IO#puts
  0.16      0.007     0.000     0.000     0.007        6   CompSci::CompleteNaryTree#display
  0.13      0.001     0.000     0.000     0.001        4  *Kernel#require
  0.12      0.000     0.000     0.000     0.000        7   Class#new
  0.08      0.000     0.000     0.000     0.000       13   Module#method_added
  0.08      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.07      0.000     0.000     0.000     0.000        3   CompSci::CompleteNaryTree#initialize
  0.07      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.07      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_enter
  0.06      0.007     0.000     0.000     0.007        6   Enumerable#each_with_index
  0.06      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_exit
  0.05      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.05      0.000     0.000     0.000     0.000        6   <Class::Thread>#current
  0.04      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.04      0.000     0.000     0.000     0.000        1   CompSci::CompleteTernaryTree#initialize
  0.04      0.000     0.000     0.000     0.000        1   CompSci::CompleteBinaryTree#initialize
  0.04      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.04      0.000     0.000     0.000     0.000        2   <Class::Gem::Specification>#unresolved_deps
  0.04      0.000     0.000     0.000     0.000        2   Thread::Mutex#lock
  0.03      0.000     0.000     0.000     0.000        1   CompSci::CompleteQuaternaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_check_owner
  0.03      0.000     0.000     0.000     0.000        2   <Module::Gem>#suffixes
  0.03      0.000     0.000     0.000     0.000        2   <Module::Gem>#find_unresolved_default_spec
  0.02      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.02      0.000     0.000     0.000     0.000        1   Module#append_features
  0.02      0.000     0.000     0.000     0.000        2   Kernel#respond_to?
  0.01      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.01      0.000     0.000     0.000     0.000        1   Module#included
  0.01      0.000     0.000     0.000     0.000        4   Class#inherited
  0.01      0.000     0.000     0.000     0.000        2   Thread::Mutex#unlock

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/heap.rb -- 
#
# display the results of TernaryHeap push and pop
#

push: 46 78 7 0 94 97 31 0 73 17 76 98 34 30 70 55 46 24 52 40 0 41 89 56 4 92 35 48 79 52
array: [98, 94, 92, 97, 70, 78, 41, 73, 89, 79, 0, 76, 34, 30, 46, 55, 46, 24, 52, 31, 0, 40, 0, 56, 4, 7, 35, 48, 17, 52]
heap: true
                                       98                                       
            94                        92                        97            
   70      78      41      73      89      79       0      76      34   
30 46 55 46 24 52 31 0 40 0 56 4 7 35 48 17 52 


pop: 98
array: [97, 94, 92, 76, 70, 78, 41, 73, 89, 79, 0, 52, 34, 30, 46, 55, 46, 24, 52, 31, 0, 40, 0, 56, 4, 7, 35, 48, 17]
heap: true
                                       97                                       
            94                        92                        76            
   70      78      41      73      89      79       0      52      34   
30 46 55 46 24 52 31 0 40 0 56 4 7 35 48 17 


pop: 97 94 92 89 79 78 76 73 70
array: [56, 55, 48, 52, 46, 52, 41, 0, 0, 35, 0, 7, 34, 30, 40, 4, 46, 24, 17, 31]
heap: true
                                       56                                       
            55                        48                        52            
   46      52      41       0       0      35       0       7      34   
30 40 4 46 24 17 31 


push: 93 57 31 92 24 28 96 29 67 40 49 82 52 16 52 95 6 67 66 4 32 12 37 43 13 75 66 81 16 77
array: [96, 81, 93, 95, 75, 77, 56, 48, 92, 67, 52, 82, 67, 37, 46, 66, 52, 24, 17, 31, 41, 55, 0, 31, 24, 0, 28, 29, 35, 40, 49, 0, 52, 16, 7, 52, 6, 34, 66, 4, 30, 12, 32, 40, 13, 43, 4, 57, 16, 46]
heap: true
                                       96                                       
            81                        93                        95            
   75      77      56      48      92      67      52      82      67   
37 46 66 52 24 17 31 41 55 0 31 24 0 28 29 35 40 49 0 52 16 7 52 6 34 66 4 
30 12 32 40 13 43 4 57 16 46 

Measure Mode: wall_time
Thread ID: 47047914986500
Fiber ID: 47047914936780
Total: 0.009695
Sort by: self_time

 %self      total      self      wait     child     calls  name
  8.88      0.006     0.001     0.000     0.005      299  *Array#each
  6.67      0.001     0.001     0.000     0.001      129   Kernel#loop
  4.69      0.001     0.000     0.000     0.001      335   CompSci::Heap#heapish?
  4.69      0.003     0.000     0.000     0.002      166  *Array#initialize
  4.41      0.001     0.000     0.000     0.000      556   <Class::CompSci::CompleteNaryTree>#parent_idx
  3.83      0.000     0.000     0.000     0.000     1561   Integer#+
  3.11      0.000     0.000     0.000     0.000      943   Integer#<
  2.30      0.001     0.000     0.000     0.001      109  *CompSci::Heap#sift_up
  2.23      0.000     0.000     0.000     0.000      464   BasicObject#!=
  2.23      0.000     0.000     0.000     0.000      814   Integer#/
  2.12      0.000     0.000     0.000     0.000      824   Integer#*
  1.85      0.000     0.000     0.000     0.000      816   Array#[]
  1.64      0.002     0.000     0.000     0.001      129   <Class::CompSci::CompleteNaryTree>#gen
  1.64      0.000     0.000     0.000     0.000      583   Array#length
  1.57      0.000     0.000     0.000     0.000      616   Integer#-
  1.52      0.000     0.000     0.000     0.000      455   Integer#==
  1.24      0.000     0.000     0.000     0.000      327   Integer#to_s
  1.19      0.001     0.000     0.000     0.001      163   <Class::CompSci::CompleteNaryTree>#children_idx
  1.18      0.000     0.000     0.000     0.000      146   Array#[]=
  1.00      0.000     0.000     0.000     0.000      142   String#+
  0.89      0.000     0.000     0.000     0.000      394   Kernel#class
  0.89      0.001     0.000     0.000     0.001       60   CompSci::Heap#push
  0.82      0.000     0.000     0.000     0.000      129   String#ljust
  0.81      0.000     0.000     0.000     0.000      335   Integer#<=>
  0.70      0.000     0.000     0.000     0.000      258   String#size
  0.68      0.003     0.000     0.000     0.003      167  *Class#new
  0.55      0.000     0.000     0.000     0.000        4   Array#inspect
  0.52      0.010     0.000     0.000     0.010        2   Global#[No method]
  0.49      0.000     0.000     0.000     0.000      129   String#rjust
  0.48      0.000     0.000     0.000     0.000       40   IO#write
  0.47      0.001     0.000     0.000     0.001       60   Kernel#tap
  0.44      0.000     0.000     0.000     0.000      129   Integer#**
  0.42      0.000     0.000     0.000     0.000        3   Array#join
  0.40      0.000     0.000     0.000     0.000      129   Array#max
  0.39      0.000     0.000     0.000     0.000       34   CompSci::Heap#heapiest
  0.37      0.000     0.000     0.000     0.000      125   Array#<<
  0.37      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.34      0.000     0.000     0.000     0.000      136   BasicObject#!
  0.33      0.001     0.000     0.000     0.001       34  *CompSci::Heap#sift_down
  0.33      0.003     0.000     0.000     0.003       24   IO#puts
  0.32      0.000     0.000     0.000     0.000      109   Integer#<=
  0.30      0.000     0.000     0.000     0.000       60   Kernel#rand
  0.27      0.001     0.000     0.000     0.001       10   CompSci::Heap#pop
  0.25      0.000     0.000     0.000     0.000       60   Array#push
  0.15      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.14      0.000     0.000     0.000     0.000       34   Integer#>=
  0.14      0.003     0.000     0.000     0.003       24   Kernel#puts
  0.13      0.000     0.000     0.000     0.000        4   String#%
  0.12      0.002     0.000     0.000     0.002      129  *CompSci::Heap#heap?
  0.11      0.000     0.000     0.000     0.000       34   Array#first
  0.10      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.09      0.000     0.000     0.000     0.000       10   Array#pop
  0.09      0.003     0.000     0.000     0.003        4   CompSci::CompleteNaryTree#display
  0.08      0.000     0.000     0.000     0.000       22   Module#method_added
  0.07      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.05      0.000     0.000     0.000     0.000        4   TrueClass#to_s
  0.05      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.05      0.000     0.000     0.000     0.000       10   Array#shift
  0.05      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.05      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.05      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.05      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.04      0.003     0.000     0.000     0.003        4   Enumerable#each_with_index
  0.04      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.04      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.04      0.000     0.000     0.000     0.000        5   Class#inherited
  0.04      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.03      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.03      0.000     0.000     0.000     0.000        9   BasicObject#==
  0.03      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.02      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#initialize
  0.02      0.000     0.000     0.000     0.000        1   Module#append_features
  0.02      0.000     0.000     0.000     0.000       10   Array#unshift
  0.02      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.02      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.01      0.000     0.000     0.000     0.000        1   Module#included
  0.01      0.000     0.000     0.000     0.000        3   Kernel#respond_to?

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/heap_insert.rb -- 
#
# 3 seconds worth of pushes
#

10000th push: 0.00002179 s
20000th push: 0.00002953 s
30000th push: 0.00003799 s
40000th push: 0.00004631 s
50000th push: 0.00003501 s
60000th push: 0.00002165 s
70000th push: 0.00001334 s
80000th push: 0.00003093 s
90000th push: 0.00005142 s
100000th push: 0.00002327 s
-------------
    100k push: 2.77012772 s (36k push / s)

pushed 108314 items in 3.0 s

still a heap with 108315 items? YES - 1.530 sec

Measure Mode: wall_time
Thread ID: 47259915050000
Fiber ID: 47259915000580
Total: 4.531743
Sort by: self_time

 %self      total      self      wait     child     calls  name
 10.72      1.057     0.486     0.000     0.572   356008   CompSci::Heap#heapish?
  7.05      2.082     0.319     0.000     1.763   247704  *CompSci::Heap#sift_up
  5.58      3.000     0.253     0.000     2.747        1   Kernel#loop
  4.99      0.226     0.226     0.000     0.000   990794   Array#[]
  4.53      0.355     0.205     0.000     0.149   108315   Array#initialize
  4.46      0.323     0.202     0.000     0.121   247694   <Class::CompSci::CompleteNaryTree>#parent_idx
  3.46      0.241     0.157     0.000     0.084   356008   BasicObject#!=
  3.45      2.328     0.156     0.000     2.172   108315   CompSci::Heap#push
  3.19      0.144     0.144     0.000     0.000   572638   Integer#*
  2.69      0.122     0.122     0.000     0.000   541574   Integer#+
  2.47      0.112     0.112     0.000     0.000   464332   Integer#==
  2.15      0.248     0.097     0.000     0.150   108327   <Module::CompSci::Timer>#since
  2.05      0.093     0.093     0.000     0.000   356009   Kernel#class
  2.00      0.090     0.090     0.000     0.000   356009   Integer#-
  1.83      0.083     0.083     0.000     0.000   356008   Integer#<=>
  1.81      0.082     0.082     0.000     0.000   324946   Array#length
  1.56      0.070     0.070     0.000     0.000   278778   Array#[]=
  1.52      0.118     0.069     0.000     0.049   108341   <Module::CompSci::Timer>#now
  1.47      0.475     0.066     0.000     0.409   108315   <Class::CompSci::CompleteNaryTree>#children_idx
  1.40      0.064     0.064     0.000     0.000   247704   Integer#<=
  1.31      0.060     0.060     0.000     0.000   247694   Integer#/
  1.28      0.058     0.058     0.000     0.000   247694   BasicObject#!
  1.21      0.055     0.055     0.000     0.000   216630   Integer#<
  1.19      0.409     0.054     0.000     0.355   108316   Class#new
  1.08      0.049     0.049     0.000     0.000   108341   <Module::Process>#clock_gettime
  1.06      0.048     0.048     0.000     0.000   108315   Kernel#rand
  0.86      0.039     0.039     0.000     0.000   108314   Float#>
  0.74      0.034     0.034     0.000     0.000   108315   Array#push
  0.72      0.033     0.033     0.000     0.000   108327   Float#-
  0.63      0.028     0.028     0.000     0.000   108314   Array#<<
  0.61      0.028     0.028     0.000     0.000   108324   Integer#%
  0.00      0.000     0.000     0.000     0.000       13   String#%
  0.00      0.000     0.000     0.000     0.000       33   IO#write
  0.00      4.532     0.000     0.000     4.532        2   Global#[No method]
  0.00      0.000     0.000     0.000     0.000       18   IO#puts
  0.00      1.530     0.000     0.000     1.530       11   <Module::CompSci::Timer>#elapsed
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      1.530     0.000     0.000     1.530   216633  *Array#each
  0.00      0.000     0.000     0.000     0.000       18   Kernel#puts
  0.00      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      1.530     0.000     0.000     1.530   108315  *CompSci::Heap#heap?
  0.00      0.000     0.000     0.000     0.000       22   Module#method_added
  0.00      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#size
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_s
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_f
  0.00      0.000     0.000     0.000     0.000        5   Class#inherited
  0.00      0.000     0.000     0.000     0.000        1   Float#/
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        1   Kernel#print
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        1   Module#included
  0.00      0.000     0.000     0.000     0.000        1   Module#alias_method

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/tree.rb -- 
#
# Try out Binary-, Ternary-, and QuaternaryTree
#

[12, 29, 72, 94, 33, 25, 90, 35, 91, 53, 71, 6, 57, 31, 39, 64, 69, 91, 16, 49, 54, 12, 64, 5, 4, 0, 62, 39, 95, 3]
#<CompSci::BinaryTree:0x0055f72bfe0650 @root=#<CompSci::ChildNode:0x2afb95ff0314i @value=12 @children=[29, 72]>, @child_slots=2, @open_parent=#<CompSci::ChildNode:0x2afb95fedc7ci @value=39 @children=[3]>>
                                       12                                       
                   29                                      72                   
         94                  33                  25                  90         
    35        91        53        71         6        57        31        39    
  64   69   91   16   49   54   12   64   5    4    0    62   39   95   3  

df_search visited: 12 29 94 35 64 69 91 91 16 33 53 49 54 71 12 64 72 25 6 5 4 57 0 62 90 31 39 95 39 3


push: [15, 76, 12, 96, 16, 23, 15, 20, 82, 72, 81, 97, 29, 96, 90, 98, 56, 80, 40, 54, 91, 71, 0, 72, 20, 0, 28, 79, 0, 35]

                                       12                                       
                   29                                      72                   
         94                  33                  25                  90         
    35        91        53        71         6        57        31        39    
  64   69   91   16   49   54   12   64   5    4    0    62   39   95   3    15 
76 12 96 16 23 15 20 82 72 81 97 29 96 90 98 56 80 40 54 91 71 0 72 20 0 28 79 0 35 


[12, 29, 72, 94, 33, 25, 90, 35, 91, 53, 71, 6, 57, 31, 39, 64, 69, 91, 16, 49, 54, 12, 64, 5, 4, 0, 62, 39, 95, 3]
#<CompSci::TernaryTree:0x0055f72bf381a8 @root=#<CompSci::ChildNode:0x2afb95f9c0c0i @value=12 @children=[29, 72, 94]>, @child_slots=3, @open_parent=#<CompSci::ChildNode:0x2afb95f992d0i @value=53 @children=[95, 3]>>
                                       12                                       
            29                        72                        94            
   33      25      90      35      91      53      71       6      57   
31 39 64 69 91 16 49 54 12 64 5 4 0 62 39 95 3 

df_search visited: 12 29 33 31 39 64 25 69 91 16 90 49 54 12 72 35 64 5 4 91 0 62 39 53 95 3 94 71 6 57


push: [94, 37, 43, 13, 82, 94, 75, 97, 47, 48, 92, 81, 46, 41, 63, 89, 33, 53, 27, 80, 38, 80, 60, 56, 24, 70, 86, 60, 79, 22]

                                       12                                       
            29                        72                        94            
   33      25      90      35      91      53      71       6      57   
31 39 64 69 91 16 49 54 12 64 5 4 0 62 39 95 3 94 37 43 13 82 94 75 97 47 48 
92 81 46 41 63 89 33 53 27 80 38 80 60 56 24 70 86 60 79 22 


[12, 29, 72, 94, 33, 25, 90, 35, 91, 53, 71, 6, 57, 31, 39, 64, 69, 91, 16, 49, 54, 12, 64, 5, 4, 0, 62, 39, 95, 3]
#<CompSci::QuaternaryTree:0x0055f72beb2580 @root=#<CompSci::ChildNode:0x2afb95f592aci @value=12 @children=[29, 72, 94, 33]>, @child_slots=4, @open_parent=#<CompSci::ChildNode:0x2afb95f58e9ci @value=35 @children=[3]>>
                                       12                                       
         29                  72                  94                  33         
  25   90   35   91   53   71   6    57   31   39   64   69   91   16   49   54 
12 64 5 4 0 62 39 95 3 

df_search visited: 12 29 25 12 64 5 4 90 0 62 39 95 35 3 91 72 53 71 6 57 94 31 39 64 69 33 91 16 49 54


push: [57, 45, 25, 5, 17, 83, 30, 42, 53, 39, 12, 37, 21, 39, 76, 51, 39, 64, 69, 41, 15, 93, 63, 15, 36, 17, 33, 13, 61, 13]

                                       12                                       
         29                  72                  94                  33         
  25   90   35   91   53   71   6    57   31   39   64   69   91   16   49   54 
12 64 5 4 0 62 39 95 3 57 45 25 5 17 83 30 42 53 39 12 37 21 39 76 51 39 64 69 41 15 93 63 15 36 17 33 13 61 13 


Measure Mode: wall_time
Thread ID: 47260040313880
Fiber ID: 47260040264340
Total: 0.015401
Sort by: self_time

 %self      total      self      wait     child     calls  name
 18.90      0.008     0.003     0.000     0.005       32   CompSci::Tree#bf_search
  7.62      0.001     0.001     0.000     0.000      671   CompSci::NaryTree#open_parent?
  4.88      0.001     0.001     0.000     0.000      540   Integer#/
  2.55      0.000     0.000     0.000     0.000      593   Array#+
  2.48      0.001     0.000     0.000     0.000      177   CompSci::ChildNode#add_child
  2.24      0.000     0.000     0.000     0.000     1100   Integer#+
  2.02      0.000     0.000     0.000     0.000      379   CompSci::Node#to_s
  1.89      0.003     0.000     0.000     0.003      177   CompSci::NaryTree#open_parent
  1.81      0.000     0.000     0.000     0.000      799   Array#shift
  1.76      0.000     0.000     0.000     0.000      292   String#+
  1.68      0.000     0.000     0.000     0.000      270   String#ljust
  1.48      0.000     0.000     0.000     0.000      180   CompSci::ChildNode#initialize
  1.35      0.013     0.000     0.000     0.012      156  *Array#each
  1.34      0.000     0.000     0.000     0.000      808   Array#empty?
  1.32      0.002     0.000     0.000     0.001      177   CompSci::Node#new_child
  1.32      0.000     0.000     0.000     0.000      562   Integer#to_s
  1.24      0.000     0.000     0.000     0.000      540   String#size
  1.17      0.000     0.000     0.000     0.000      357   BasicObject#!=
  1.10      0.000     0.000     0.000     0.000        6   Kernel#p
  1.08      0.001     0.000     0.000     0.000      650  *CompSci::ChildNode#gen
  1.06      0.000     0.000     0.000     0.000      671   Array#length
  1.02      0.005     0.000     0.000     0.005      177   CompSci::NaryTree#push
  0.95      0.000     0.000     0.000     0.000      180   CompSci::Node#initialize
  0.94      0.000     0.000     0.000     0.000      183   Kernel#class
  0.91      0.001     0.000     0.000     0.001       62   Enumerable#find
  0.90      0.000     0.000     0.000     0.000      671   Integer#<
  0.89      0.000     0.000     0.000     0.000      625   BasicObject#!
  0.87      0.000     0.000     0.000     0.000      270   Array#max
  0.86      0.000     0.000     0.000     0.000      270   String#rjust
  0.81      0.001     0.000     0.000     0.001      187  *Class#new
  0.79      0.000     0.000     0.000     0.000      177   CompSci::Node#add_child
  0.77      0.000     0.000     0.000     0.000      360   Integer#**
  0.57      0.000     0.000     0.000     0.000      245   Kernel#respond_to?
  0.54      0.000     0.000     0.000     0.000      267   Array#<<
  0.53      0.001     0.000     0.000     0.001       62   CompSci::NaryTree#open_sibling
  0.52      0.000     0.000     0.000     0.000        6   Array#inspect
  0.51      0.000     0.000     0.000     0.000        9   Array#join
  0.46      0.000     0.000     0.000     0.000       90   <Module::Math>#log
  0.42      0.000     0.000     0.000     0.000      270   Integer#==
  0.39      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.39      0.000     0.000     0.000     0.000        4   Array#initialize
  0.37      0.000     0.000     0.000     0.000        3   Kernel#inspect
  0.31      0.000     0.000     0.000     0.000       43   IO#write
  0.29      0.000     0.000     0.000     0.000        9   String#%
  0.29      0.000     0.000     0.000     0.000      177   BasicObject#==
  0.28      0.000     0.000     0.000     0.000      120   Kernel#rand
  0.24      0.000     0.000     0.000     0.000       62   CompSci::ChildNode#siblings
  0.21      0.000     0.000     0.000     0.000       31   IO#puts
  0.20      0.015     0.000     0.000     0.015        2   Global#[No method]
  0.19      0.000     0.000     0.000     0.000       90   Float#floor
  0.18      0.000     0.000     0.000     0.000        6   CompSci::Node#inspect
  0.15      0.000     0.000     0.000     0.000       31   Kernel#puts
  0.12      0.000     0.000     0.000     0.000        6   Array#map
  0.10      0.000     0.000     0.000     0.000        7   Class#inherited
  0.10      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.09      0.003     0.000     0.000     0.003        6  *Kernel#require
  0.09      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.09      0.004     0.000     0.000     0.004        4   CompSci::NaryTree#display
  0.08      0.000     0.000     0.000     0.000        2   Module#attr_accessor
  0.08      0.000     0.000     0.000     0.000       90  *CompSci::Tree#df_search
  0.07      0.000     0.000     0.000     0.000        3   CompSci::NaryTree#initialize
  0.06      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.06      0.000     0.000     0.000     0.000       34   Module#method_added
  0.05      0.002     0.000     0.000     0.002        2   CompSci::BinaryTree#display
  0.05      0.000     0.000     0.000     0.000        6   Module#to_s
  0.05      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.05      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.04      0.000     0.000     0.000     0.000        3   CompSci::Tree#initialize
  0.04      0.000     0.000     0.000     0.000       11   Integer#>
  0.04      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.04      0.000     0.000     0.000     0.000        1   CompSci::TernaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.03      0.000     0.000     0.000     0.000        1   CompSci::BinaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.03      0.000     0.000     0.000     0.000        1   CompSci::QuaternaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.03      0.000     0.000     0.000     0.000        4   BasicObject#singleton_method_added
  0.03      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.03      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.02      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.02      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.02      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.02      0.000     0.000     0.000     0.000        2   Module#alias_method
  0.01      0.000     0.000     0.000     0.000        1   Module#append_features
  0.01      0.000     0.000     0.000     0.000        6   Kernel#object_id
  0.01      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/tree_insert.rb -- 
#
# 3 seconds worth of pushes
#

100th push: 0.00002410 s
200th push: 0.00001459 s
300th push: 0.00001430 s
400th push: 0.00001448 s
500th push: 0.00001604 s
600th push: 0.00001481 s
700th push: 0.00001541 s
800th push: 0.00001361 s
900th push: 0.00001505 s
1000th push: 0.00001522 s
-----------
    1k push: 0.3413 s (2930 push / s)

1100th push: 0.00002182 s
1200th push: 0.00001551 s
1300th push: 0.00001590 s
1400th push: 0.00002284 s
1500th push: 0.00001757 s
1600th push: 0.00001589 s
1700th push: 0.00001635 s
1800th push: 0.00001442 s
1900th push: 0.00002403 s
2000th push: 0.00001687 s
-----------
    1k push: 1.0240 s (976 push / s)

2100th push: 0.00002153 s
2200th push: 0.00002332 s
2300th push: 0.00001804 s
2400th push: 0.00001824 s
2500th push: 0.00001837 s
2600th push: 0.00001836 s
2700th push: 0.00001898 s
2800th push: 0.00001887 s
2900th push: 0.00001888 s
pushed 2919 items in 3.0 s

#
# 30 inserts, puts, df_search
#

[3, 71, 73, 56, 47, 38, 32, 29, 28, 18, 19, 67, 3, 81, 4, 62, 8, 66, 52, 69, 15, 21, 44, 56, 20, 28, 14, 69, 5, 58]
                                        3                                       
                   71                                      73                   
         56                  47                  38                  32         
    29        28        18        19        67         3        81         4    
  62   8    66   52   69   15   21   44   56   20   28   14   69   5    58 
#<CompSci::BinaryTree:0x00562908826478 @root=#<CompSci::ChildNode:0x2b14844131b0i @value=3 @children=[71, 73]>, @child_slots=2, @open_parent=#<CompSci::ChildNode:0x2b1484412954i @value=4 @children=[58]>>

visited 3
visited 71
visited 56
visited 29
visited 62
visited 8
visited 28
visited 66
visited 52
visited 47
visited 18
visited 69
visited 15
visited 19
visited 21
visited 44
visited 73
visited 38
visited 67
visited 56
visited 20
visited 3
visited 28
visited 14
visited 32
visited 81
visited 69
visited 5
visited 4
visited 58

push: [96, 30, 31, 52, 60, 23, 22, 81, 66, 94, 27, 38, 65, 75, 1, 85, 69, 73, 73, 91, 32, 95, 92, 24, 68, 34, 52, 84, 7, 55]
                                        3                                       
                   71                                      73                   
         56                  47                  38                  32         
    29        28        18        19        67         3        81         4    
  62   8    66   52   69   15   21   44   56   20   28   14   69   5    58   96 
30 31 52 60 23 22 81 66 94 27 38 65 75 1 85 69 73 73 91 32 95 92 24 68 34 52 84 7 55 

Measure Mode: wall_time
Thread ID: 47367117200380
Fiber ID: 47367117151220
Total: 3.014031
Sort by: self_time

 %self      total      self      wait     child     calls  name
 34.41      2.931     1.037     0.000     1.894      747   CompSci::Tree#bf_search
 19.99      0.602     0.602     0.000     0.000   533215   Array#+
 17.07      0.780     0.514     0.000     0.265   539820   CompSci::NaryTree#open_parent?
  7.44      0.224     0.224     0.000     0.000   534020   Array#shift
  5.62      0.169     0.169     0.000     0.000   534023   Array#empty?
  4.49      0.135     0.135     0.000     0.000   539820   Array#length
  4.31      0.130     0.130     0.000     0.000   539820   Integer#<
  4.20      0.127     0.127     0.000     0.000   533962   BasicObject#!
  0.29      3.008     0.009     0.000     2.999        1   Kernel#loop
  0.23      2.954     0.007     0.000     2.947     2978   CompSci::NaryTree#open_parent
  0.16      0.011     0.005     0.000     0.006     2978   CompSci::ChildNode#add_child
  0.14      0.007     0.004     0.000     0.003     2980   CompSci::ChildNode#initialize
  0.12      0.026     0.004     0.000     0.023     2978   CompSci::Node#new_child
  0.11      0.011     0.003     0.000     0.007     2984  *Class#new
  0.11      2.983     0.003     0.000     2.980     2978   CompSci::NaryTree#push
  0.10      0.010     0.003     0.000     0.007     2951   <Module::CompSci::Timer>#since
  0.10      0.003     0.003     0.000     0.000     2984   <Module::Process>#clock_gettime
  0.09      0.008     0.003     0.000     0.005     1521  *Array#each
  0.09      0.003     0.003     0.000     0.000     2980   CompSci::Node#initialize
  0.08      0.005     0.002     0.000     0.003     2984   <Module::CompSci::Timer>#now
  0.08      0.002     0.002     0.000     0.000     2980   Kernel#rand
  0.07      0.013     0.002     0.000     0.011     1488   CompSci::NaryTree#open_sibling
  0.07      0.004     0.002     0.000     0.001     2978   CompSci::Node#add_child
  0.07      0.002     0.002     0.000     0.000     2919   Float#>
  0.06      0.003     0.002     0.000     0.001     2978   BasicObject#!=
  0.05      0.009     0.002     0.000     0.007     1488   Enumerable#find
  0.04      0.001     0.001     0.000     0.000     2978   Array#<<
  0.04      0.001     0.001     0.000     0.000     2951   Float#-
  0.03      0.001     0.001     0.000     0.000     3189   Integer#+
  0.03      0.001     0.001     0.000     0.000     2980   Kernel#class
  0.03      0.001     0.001     0.000     0.000     2978   BasicObject#==
  0.03      0.001     0.001     0.000     0.000     2948   Integer#%
  0.03      0.001     0.001     0.000     0.000     1488   CompSci::ChildNode#siblings
  0.03      0.001     0.001     0.000     0.000     3038   Integer#==
  0.02      0.001     0.001     0.000     0.000     1491   Kernel#respond_to?
  0.02      0.001     0.001     0.000     0.000       34   String#%
  0.01      0.000     0.000     0.000     0.000      186   Integer#to_s
  0.00      0.000     0.000     0.000     0.000      142   IO#write
  0.00      0.001     0.000     0.000     0.001       29   <Module::CompSci::Timer>#elapsed
  0.00      0.002     0.000     0.000     0.002       75   IO#puts
  0.00      3.014     0.000     0.000     3.014        2   Global#[No method]
  0.00      0.002     0.000     0.000     0.002       75   Kernel#puts
  0.00      0.000     0.000     0.000     0.000      125   CompSci::Node#to_s
  0.00      0.000     0.000     0.000     0.000       90   String#ljust
  0.00      0.000     0.000     0.000     0.000       99   String#+
  0.00      0.000     0.000     0.000     0.000       90   <Module::Math>#log
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.000     0.000     0.000     0.000        2   Kernel#p
  0.00      0.000     0.000     0.000     0.000      180   Integer#**
  0.00      0.000     0.000     0.000     0.000       90   String#rjust
  0.00      0.000     0.000     0.000     0.000      180   Integer#/
  0.00      0.000     0.000     0.000     0.000        2   Array#initialize
  0.00      0.000     0.000     0.000     0.000      180   String#size
  0.00      0.000     0.000     0.000     0.000       90   Array#max
  0.00      0.000     0.000     0.000     0.000       90   Float#floor
  0.00      0.000     0.000     0.000     0.000        2   Array#inspect
  0.00      0.000     0.000     0.000     0.000        2   Array#join
  0.00      0.000     0.000     0.000     0.000        1   Kernel#inspect
  0.00      0.000     0.000     0.000     0.000        2   Kernel#object_id
  0.00      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000       34   Module#method_added
  0.00      0.000     0.000     0.000     0.000        2   CompSci::Tree#initialize
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.000     0.000     0.000     0.000        2   Module#attr_accessor
  0.00      0.000     0.000     0.000     0.000        2   Module#to_s
  0.00      0.000     0.000     0.000     0.000        2   Integer#to_f
  0.00      0.000     0.000     0.000     0.000        2   CompSci::Node#inspect
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.002     0.000     0.000     0.002        2   CompSci::BinaryTree#display
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000       30  *CompSci::Tree#df_search
  0.00      0.000     0.000     0.000     0.000        2   CompSci::BinaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        2   Array#map
  0.00      0.000     0.000     0.000     0.000        2   CompSci::NaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        4   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        2   Module#alias_method
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000       11   Integer#>
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        7   Class#inherited
  0.00      0.000     0.000     0.000     0.000        2   Float#/
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
