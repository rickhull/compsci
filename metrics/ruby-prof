RUBYLIB=lib ruby-prof  examples/complete_tree.rb -- 
/proc/loadavg 0.57 0.16 0.05 1/80 1362
#
# Print CompleteBinary-, Ternary-, and QuaternaryTree
#

[86, 45, 25, 54, 93, 82, 69, 61, 60, 82, 13, 97, 61, 21, 19, 48, 60, 65, 22, 83, 4, 19, 38, 55, 86, 6, 62, 83, 17, 66]
#<CompSci::CompleteBinaryTree:0x0056240fe8b3e8 @array=[86, 45, 25, 54, 93, 82, 69, 61, 60, 82, 13, 97, 61, 21, 19, 48, 60, 65, 22, 83, 4, 19, 38, 55, 86, 6, 62, 83, 17, 66], @child_slots=2>
                                       86                                       
                   45                                      25                   
         54                  93                  82                  69         
    61        60        82        13        97        61        21        19    
  48   60   65   22   83   4    19   38   55   86   6    62   83   17   66 



push: [33, 20, 55, 65, 64, 1, 92, 34, 93, 59, 11, 88, 24, 22, 36, 16, 44, 91, 74, 43, 73, 25, 78, 91, 87, 52, 29, 44, 10, 61]
                                       86                                       
                   45                                      25                   
         54                  93                  82                  69         
    61        60        82        13        97        61        21        19    
  48   60   65   22   83   4    19   38   55   86   6    62   83   17   66   33 
20 55 65 64 1 92 34 93 59 11 88 24 22 36 16 44 91 74 43 73 25 78 91 87 52 29 44 10 61 



[86, 45, 25, 54, 93, 82, 69, 61, 60, 82, 13, 97, 61, 21, 19, 48, 60, 65, 22, 83, 4, 19, 38, 55, 86, 6, 62, 83, 17, 66]
#<CompSci::CompleteTernaryTree:0x0056240fe56a80 @array=[86, 45, 25, 54, 93, 82, 69, 61, 60, 82, 13, 97, 61, 21, 19, 48, 60, 65, 22, 83, 4, 19, 38, 55, 86, 6, 62, 83, 17, 66], @child_slots=3>
                                       86                                       
            45                        25                        54            
   93      82      69      61      60      82      13      97      61   
21 19 48 60 65 22 83 4 19 38 55 86 6 62 83 17 66 



push: [37, 43, 76, 91, 55, 53, 79, 44, 53, 12, 43, 83, 35, 37, 4, 40, 4, 41, 59, 16, 76, 40, 49, 94, 74, 9, 63, 86, 19, 26]
                                       86                                       
            45                        25                        54            
   93      82      69      61      60      82      13      97      61   
21 19 48 60 65 22 83 4 19 38 55 86 6 62 83 17 66 37 43 76 91 55 53 79 44 53 12 
43 83 35 37 4 40 4 41 59 16 76 40 49 94 74 9 63 86 19 26 



[86, 45, 25, 54, 93, 82, 69, 61, 60, 82, 13, 97, 61, 21, 19, 48, 60, 65, 22, 83, 4, 19, 38, 55, 86, 6, 62, 83, 17, 66]
#<CompSci::CompleteQuaternaryTree:0x0056240fdc3668 @array=[86, 45, 25, 54, 93, 82, 69, 61, 60, 82, 13, 97, 61, 21, 19, 48, 60, 65, 22, 83, 4, 19, 38, 55, 86, 6, 62, 83, 17, 66], @child_slots=4>
                                       86                                       
         45                  25                  54                  93         
  82   69   61   60   82   13   97   61   21   19   48   60   65   22   83   4  
19 38 55 86 6 62 83 17 66 



push: [24, 51, 37, 79, 1, 62, 6, 26, 52, 19, 94, 30, 13, 85, 26, 72, 56, 15, 52, 66, 4, 13, 0, 82, 35, 49, 56, 34, 8, 68]
                                       86                                       
         45                  25                  54                  93         
  82   69   61   60   82   13   97   61   21   19   48   60   65   22   83   4  
19 38 55 86 6 62 83 17 66 24 51 37 79 1 62 6 26 52 19 94 30 13 85 26 72 56 15 52 66 4 13 0 82 35 49 56 34 8 68 



Measure Mode: wall_time
Thread ID: 47356441410580
Fiber ID: 47356441361000
Total: 0.009235
Sort by: self_time

 %self      total      self      wait     child     calls  name
 15.74      0.003     0.001     0.000     0.002      270   Kernel#loop
  9.89      0.001     0.001     0.000     0.001     1077   <Class::CompSci::CompleteNaryTree>#parent_idx
  4.30      0.000     0.000     0.000     0.000     1617   Integer#/
  4.18      0.000     0.000     0.000     0.000     1347   Integer#+
  3.37      0.000     0.000     0.000     0.000     1077   Integer#-
  2.99      0.004     0.000     0.000     0.003      270   <Class::CompSci::CompleteNaryTree>#gen
  2.85      0.000     0.000     0.000     0.000     1077   Integer#<
  2.38      0.000     0.000     0.000     0.000      292   String#+
  2.17      0.000     0.000     0.000     0.000      270   String#ljust
  2.01      0.000     0.000     0.000     0.000      543   Integer#to_s
  1.88      0.008     0.000     0.000     0.008        9  *Array#each
  1.83      0.000     0.000     0.000     0.000      270   String#rjust
  1.63      0.000     0.000     0.000     0.000      540   String#size
  1.48      0.000     0.000     0.000     0.000      270   BasicObject#!=
  1.12      0.000     0.000     0.000     0.000      180   CompSci::CompleteNaryTree#push
  1.02      0.000     0.000     0.000     0.000        9   Array#inspect
  0.89      0.000     0.000     0.000     0.000      270   Integer#**
  0.87      0.000     0.000     0.000     0.000      270   Array#max
  0.86      0.000     0.000     0.000     0.000        6   Kernel#p
  0.80      0.000     0.000     0.000     0.000      120   Kernel#rand
  0.77      0.000     0.000     0.000     0.000      270   Integer#==
  0.73      0.000     0.000     0.000     0.000        3   Kernel#inspect
  0.72      0.000     0.000     0.000     0.000      270   Kernel#class
  0.64      0.000     0.000     0.000     0.000        4   Array#initialize
  0.58      0.000     0.000     0.000     0.000      180   Array#push
  0.47      0.000     0.000     0.000     0.000      180   Array#shift
  0.41      0.000     0.000     0.000     0.000      186   Array#empty?
  0.31      0.000     0.000     0.000     0.000       37   IO#write
  0.31      0.000     0.000     0.000     0.000        6   IO#set_encoding
  0.24      0.009     0.000     0.000     0.009        2   Global#[No method]
  0.19      0.000     0.000     0.000     0.000       28   IO#puts
  0.18      0.000     0.000     0.000     0.000        1   CompSci::CompleteTernaryTree#initialize
  0.18      0.000     0.000     0.000     0.000       28   Kernel#puts
  0.14      0.001     0.000     0.000     0.001        4  *Kernel#require
  0.12      0.000     0.000     0.000     0.000        7   Class#new
  0.11      0.007     0.000     0.000     0.007        6   CompSci::CompleteNaryTree#display
  0.10      0.007     0.000     0.000     0.007        6   Enumerable#each_with_index
  0.10      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_enter
  0.07      0.000     0.000     0.000     0.000        3   CompSci::CompleteNaryTree#initialize
  0.07      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.06      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_exit
  0.06      0.000     0.000     0.000     0.000       13   Module#method_added
  0.05      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.04      0.000     0.000     0.000     0.000        6   <Class::Thread>#current
  0.03      0.000     0.000     0.000     0.000        1   CompSci::CompleteBinaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.03      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.03      0.000     0.000     0.000     0.000        4   Class#inherited
  0.03      0.000     0.000     0.000     0.000        2   <Module::Gem>#suffixes
  0.03      0.000     0.000     0.000     0.000        1   CompSci::CompleteQuaternaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        2   <Module::Gem>#find_unresolved_default_spec
  0.02      0.000     0.000     0.000     0.000        1   Module#append_features
  0.02      0.000     0.000     0.000     0.000        2   <Class::Gem::Specification>#unresolved_deps
  0.02      0.000     0.000     0.000     0.000        2   Kernel#respond_to?
  0.02      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.02      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.01      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.01      0.000     0.000     0.000     0.000        2   Thread::Mutex#unlock
  0.01      0.000     0.000     0.000     0.000        1   Module#included
  0.01      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_check_owner
  0.01      0.000     0.000     0.000     0.000        2   Thread::Mutex#lock

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/heap.rb -- 
#
# display the results of TernaryHeap push and pop
#

push: 9 13 14 45 80 47 84 2 4 94 78 31 97 67 95 86 18 81 54 44 64 55 43 77 77 33 84 97 45 10
array: [97, 95, 97, 94, 86, 81, 64, 77, 84, 45, 14, 31, 78, 9, 67, 80, 18, 45, 54, 44, 47, 55, 2, 43, 77, 4, 33, 84, 13, 10]
heap: true
                                       97                                       
            95                        97                        94            
   86      81      64      77      84      45      14      31      78   
9 67 80 18 45 54 44 47 55 2 43 77 4 33 84 13 10 


pop: 97
array: [97, 95, 84, 94, 86, 81, 64, 77, 84, 45, 14, 31, 78, 9, 67, 80, 18, 45, 54, 44, 47, 55, 2, 43, 77, 4, 33, 10, 13]
heap: true
                                       97                                       
            95                        84                        94            
   86      81      64      77      84      45      14      31      78   
9 67 80 18 45 54 44 47 55 2 43 77 4 33 10 13 


pop: 97 95 94 86 84 84 81 80 78
array: [77, 67, 77, 55, 43, 54, 64, 47, 4, 45, 14, 31, 10, 9, 2, 13, 18, 45, 33, 44]
heap: true
                                       77                                       
            67                        77                        55            
   43      54      64      47       4      45      14      31      10   
9 2 13 18 45 33 44 


push: 86 12 72 14 30 85 97 68 33 83 28 35 0 45 77 64 73 79 35 72 43 32 25 30 7 96 8 13 76 59
array: [97, 96, 86, 79, 77, 59, 67, 72, 85, 83, 45, 73, 77, 43, 43, 76, 54, 45, 33, 44, 64, 12, 47, 14, 30, 4, 77, 68, 33, 45, 28, 14, 0, 35, 31, 55, 64, 10, 35, 72, 9, 32, 25, 2, 7, 30, 8, 13, 13, 18]
heap: true
                                       97                                       
            96                        86                        79            
   77      59      67      72      85      83      45      73      77   
43 43 76 54 45 33 44 64 12 47 14 30 4 77 68 33 45 28 14 0 35 31 55 64 10 35 72 
9 32 25 2 7 30 8 13 13 18 

Measure Mode: wall_time
Thread ID: 47055439944720
Fiber ID: 47055439895300
Total: 0.010312
Sort by: self_time

 %self      total      self      wait     child     calls  name
  8.48      0.006     0.001     0.000     0.005      298  *Array#each
  6.37      0.001     0.001     0.000     0.001      129   Kernel#loop
  4.98      0.001     0.001     0.000     0.001      335   CompSci::Heap#heapish?
  4.38      0.003     0.000     0.000     0.002      165  *Array#initialize
  4.26      0.001     0.000     0.000     0.000      556   <Class::CompSci::CompleteNaryTree>#parent_idx
  3.73      0.000     0.000     0.000     0.000     1555   Integer#+
  2.94      0.000     0.000     0.000     0.000      940   Integer#<
  2.30      0.000     0.000     0.000     0.000      821   Integer#*
  2.24      0.000     0.000     0.000     0.000      464   BasicObject#!=
  1.99      0.000     0.000     0.000     0.000      820   Array#[]
  1.93      0.000     0.000     0.000     0.000      814   Integer#/
  1.87      0.002     0.000     0.000     0.001      129   <Class::CompSci::CompleteNaryTree>#gen
  1.74      0.000     0.000     0.000     0.000      616   Integer#-
  1.71      0.001     0.000     0.000     0.001      112  *CompSci::Heap#sift_up
  1.49      0.000     0.000     0.000     0.000      327   Integer#to_s
  1.48      0.000     0.000     0.000     0.000      579   Array#length
  1.31      0.000     0.000     0.000     0.000      456   Integer#==
  1.13      0.000     0.000     0.000     0.000      393   Kernel#class
  1.05      0.000     0.000     0.000     0.000      142   String#+
  1.02      0.001     0.000     0.000     0.001      162   <Class::CompSci::CompleteNaryTree>#children_idx
  0.80      0.000     0.000     0.000     0.000      335   Integer#<=>
  0.78      0.000     0.000     0.000     0.000      129   String#ljust
  0.77      0.010     0.000     0.000     0.010        2   Global#[No method]
  0.76      0.003     0.000     0.000     0.003      166  *Class#new
  0.72      0.000     0.000     0.000     0.000      129   Integer#**
  0.69      0.000     0.000     0.000     0.000      258   String#size
  0.67      0.001     0.000     0.000     0.001       60   CompSci::Heap#push
  0.55      0.000     0.000     0.000     0.000        3   Array#join
  0.55      0.001     0.000     0.000     0.001       33  *CompSci::Heap#sift_down
  0.50      0.000     0.000     0.000     0.000      129   Array#max
  0.50      0.000     0.000     0.000     0.000        4   Array#inspect
  0.50      0.000     0.000     0.000     0.000      129   String#rjust
  0.46      0.000     0.000     0.000     0.000      135   BasicObject#!
  0.46      0.001     0.000     0.000     0.001       60   Kernel#tap
  0.44      0.000     0.000     0.000     0.000       33   CompSci::Heap#heapiest
  0.41      0.000     0.000     0.000     0.000      150   Array#[]=
  0.38      0.000     0.000     0.000     0.000       40   IO#write
  0.38      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.37      0.000     0.000     0.000     0.000      125   Array#<<
  0.33      0.003     0.000     0.000     0.003       24   IO#puts
  0.32      0.000     0.000     0.000     0.000      112   Integer#<=
  0.29      0.000     0.000     0.000     0.000       60   Array#push
  0.26      0.000     0.000     0.000     0.000       60   Kernel#rand
  0.21      0.001     0.000     0.000     0.001       10   CompSci::Heap#pop
  0.15      0.000     0.000     0.000     0.000       33   Array#first
  0.15      0.003     0.000     0.000     0.003       24   Kernel#puts
  0.15      0.000     0.000     0.000     0.000       33   Integer#>=
  0.15      0.000     0.000     0.000     0.000        4   String#%
  0.13      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.11      0.002     0.000     0.000     0.002      129  *CompSci::Heap#heap?
  0.11      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.09      0.003     0.000     0.000     0.003        4   Enumerable#each_with_index
  0.09      0.000     0.000     0.000     0.000       10   Array#shift
  0.09      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.08      0.000     0.000     0.000     0.000       22   Module#method_added
  0.08      0.003     0.000     0.000     0.003        4   CompSci::CompleteNaryTree#display
  0.06      0.000     0.000     0.000     0.000       10   Array#pop
  0.05      0.000     0.000     0.000     0.000        4   TrueClass#to_s
  0.05      0.000     0.000     0.000     0.000        8   BasicObject#==
  0.05      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.05      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.04      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.04      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.04      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.04      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.03      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.03      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.03      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.03      0.000     0.000     0.000     0.000       10   Array#unshift
  0.03      0.000     0.000     0.000     0.000        1   Module#append_features
  0.02      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#initialize
  0.02      0.000     0.000     0.000     0.000        5   Class#inherited
  0.02      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.02      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.01      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.01      0.000     0.000     0.000     0.000        1   Module#included
  0.01      0.000     0.000     0.000     0.000        1   Module#alias_method

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/heap_push.rb -- 
#
# 3 seconds worth of pushes
#

10000th push: 0.00004698 s
20000th push: 0.00002281 s
30000th push: 0.00002219 s
40000th push: 0.00011966 s
50000th push: 0.00001859 s
60000th push: 0.00002145 s
70000th push: 0.00003191 s
80000th push: 0.00002273 s
90000th push: 0.00003227 s
100000th push: 0.00006928 s
-------------
    100k push: 2.74033407 s (36k push / s)

pushed 109474 items in 3.0 s

still a heap with 109475 items? YES - 1.555 sec

Measure Mode: wall_time
Thread ID: 47231441771540
Fiber ID: 47231441721860
Total: 4.557542
Sort by: self_time

 %self      total      self      wait     child     calls  name
 10.79      1.076     0.492     0.000     0.584   358761   CompSci::Heap#heapish?
  7.03      2.087     0.320     0.000     1.766   249297  *CompSci::Heap#sift_up
  5.63      3.000     0.257     0.000     2.743        1   Kernel#loop
  4.91      0.224     0.224     0.000     0.000   997166   Array#[]
  4.72      0.369     0.215     0.000     0.154   109475   Array#initialize
  4.32      0.318     0.197     0.000     0.121   249287   <Class::CompSci::CompleteNaryTree>#parent_idx
  3.65      0.256     0.166     0.000     0.089   358761   BasicObject#!=
  3.48      2.331     0.159     0.000     2.173   109475   CompSci::Heap#push
  3.22      0.147     0.147     0.000     0.000   577711   Integer#*
  2.71      0.124     0.124     0.000     0.000   547374   Integer#+
  2.53      0.115     0.115     0.000     0.000   468245   Integer#==
  2.05      0.242     0.094     0.000     0.148   109487   <Module::CompSci::Timer>#since
  2.00      0.091     0.091     0.000     0.000   358762   Integer#-
  1.86      0.085     0.085     0.000     0.000   358762   Kernel#class
  1.79      0.081     0.081     0.000     0.000   358761   Integer#<=>
  1.68      0.077     0.077     0.000     0.000   328426   Array#length
  1.56      0.071     0.071     0.000     0.000   279644   Array#[]=
  1.54      0.117     0.070     0.000     0.047   109501   <Module::CompSci::Timer>#now
  1.46      0.495     0.067     0.000     0.428   109475   <Class::CompSci::CompleteNaryTree>#children_idx
  1.36      0.062     0.062     0.000     0.000   249297   Integer#<=
  1.34      0.061     0.061     0.000     0.000   249287   BasicObject#!
  1.31      0.428     0.060     0.000     0.369   109476   Class#new
  1.28      0.058     0.058     0.000     0.000   249287   Integer#/
  1.23      0.056     0.056     0.000     0.000   218950   Integer#<
  1.07      0.049     0.049     0.000     0.000   109475   Kernel#rand
  1.03      0.047     0.047     0.000     0.000   109501   <Module::Process>#clock_gettime
  0.84      0.039     0.039     0.000     0.000   109474   Float#>
  0.69      0.031     0.031     0.000     0.000   109487   Float#-
  0.68      0.031     0.031     0.000     0.000   109475   Array#push
  0.63      0.029     0.029     0.000     0.000   109484   Integer#%
  0.62      0.028     0.028     0.000     0.000   109474   Array#<<
  0.01      0.000     0.000     0.000     0.000       13   String#%
  0.00      0.000     0.000     0.000     0.000       33   IO#write
  0.00      4.558     0.000     0.000     4.557        2   Global#[No method]
  0.00      1.556     0.000     0.000     1.556       11   <Module::CompSci::Timer>#elapsed
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.000     0.000     0.000     0.000       18   Kernel#puts
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000       18   IO#puts
  0.00      1.555     0.000     0.000     1.555   218953  *Array#each
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000       22   Module#method_added
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.00      1.555     0.000     0.000     1.555   109475  *CompSci::Heap#heap?
  0.00      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#size
  0.00      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        5   Class#inherited
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_s
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_f
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000        1   Float#/
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        1   Kernel#print
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.00      0.000     0.000     0.000     0.000        1   Module#included
  0.00      0.000     0.000     0.000     0.000        1   Module#alias_method

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/tree.rb -- 
#
# Try out Binary-, Ternary-, and QuaternaryTree
#

[49, 8, 95, 50, 54, 69, 72, 24, 2, 57, 6, 77, 40, 6, 56, 39, 66, 39, 77, 68, 78, 26, 13, 78, 84, 92, 87, 56, 32, 3]
#<CompSci::BinaryTree:0x0055d990798de8 @root=#<CompSci::ChildNode:0x2aecc83cc6e0i @value=49 @children=[8, 95]>, @child_slots=2, @open_parent=#<CompSci::ChildNode:0x2aecc83c9eb8i @value=56 @children=[3]>>
                                       49                                       
                    8                                      95                   
         50                  54                  69                  72         
    24         2        57         6        77        40         6        56    
  39   66   39   77   68   78   26   13   78   84   92   87   56   32   3  

df_search visited: 49 8 50 24 39 66 2 39 77 54 57 68 78 6 26 13 95 69 77 78 84 40 92 87 72 6 56 32 56 3


push: [49, 42, 92, 74, 41, 45, 60, 51, 86, 57, 19, 60, 9, 88, 36, 94, 94, 87, 71, 74, 63, 53, 80, 50, 15, 33, 93, 60, 43, 77]

                                       49                                       
                    8                                      95                   
         50                  54                  69                  72         
    24         2        57         6        77        40         6        56    
  39   66   39   77   68   78   26   13   78   84   92   87   56   32   3    49 
42 92 74 41 45 60 51 86 57 19 60 9 88 36 94 94 87 71 74 63 53 80 50 15 33 93 60 43 77 


[49, 8, 95, 50, 54, 69, 72, 24, 2, 57, 6, 77, 40, 6, 56, 39, 66, 39, 77, 68, 78, 26, 13, 78, 84, 92, 87, 56, 32, 3]
#<CompSci::TernaryTree:0x0055d9906f0968 @root=#<CompSci::ChildNode:0x2aecc837848ci @value=49 @children=[8, 95, 50]>, @child_slots=3, @open_parent=#<CompSci::ChildNode:0x2aecc83780b8i @value=57 @children=[32, 3]>>
                                       49                                       
             8                        95                        50            
   54      69      72      24       2      57       6      77      40   
6 56 39 66 39 77 68 78 26 13 78 84 92 87 56 32 3 

df_search visited: 49 8 54 6 56 39 69 66 39 77 72 68 78 26 95 24 13 78 84 2 92 87 56 57 32 3 50 6 77 40


push: [19, 92, 65, 72, 11, 24, 90, 20, 13, 16, 67, 96, 59, 25, 64, 36, 67, 24, 73, 34, 0, 69, 50, 44, 90, 35, 7, 45, 54, 4]

                                       49                                       
             8                        95                        50            
   54      69      72      24       2      57       6      77      40   
6 56 39 66 39 77 68 78 26 13 78 84 92 87 56 32 3 19 92 65 72 11 24 90 20 13 16 
67 96 59 25 64 36 67 24 73 34 0 69 50 44 90 35 7 45 54 4 


[49, 8, 95, 50, 54, 69, 72, 24, 2, 57, 6, 77, 40, 6, 56, 39, 66, 39, 77, 68, 78, 26, 13, 78, 84, 92, 87, 56, 32, 3]
#<CompSci::QuaternaryTree:0x0055d99066b588 @root=#<CompSci::ChildNode:0x2aecc8335ab0i @value=49 @children=[8, 95, 50, 54]>, @child_slots=4, @open_parent=#<CompSci::ChildNode:0x2aecc83356dci @value=24 @children=[3]>>
                                       49                                       
          8                  95                  50                  54         
  69   72   24   2    57   6    77   40   6    56   39   66   39   77   68   78 
26 13 78 84 92 87 56 32 3 

df_search visited: 49 8 69 26 13 78 84 72 92 87 56 32 24 3 2 95 57 6 77 40 50 6 56 39 66 54 39 77 68 78


push: [57, 37, 40, 39, 18, 42, 64, 70, 40, 10, 14, 68, 18, 65, 74, 39, 67, 12, 31, 52, 16, 66, 93, 77, 77, 10, 54, 34, 4, 83]

                                       49                                       
          8                  95                  50                  54         
  69   72   24   2    57   6    77   40   6    56   39   66   39   77   68   78 
26 13 78 84 92 87 56 32 3 57 37 40 39 18 42 64 70 40 10 14 68 18 65 74 39 67 12 31 52 16 66 93 77 77 10 54 34 4 83 


Measure Mode: wall_time
Thread ID: 47196458720260
Fiber ID: 47196458670540
Total: 0.012317
Sort by: self_time

 %self      total      self      wait     child     calls  name
 22.12      0.007     0.003     0.000     0.004       32   CompSci::Tree#bf_search
  5.40      0.001     0.001     0.000     0.000      671   CompSci::NaryTree#open_parent?
  3.04      0.000     0.000     0.000     0.000      593   Array#+
  2.47      0.000     0.000     0.000     0.000      562   Integer#to_s
  2.38      0.000     0.000     0.000     0.000     1100   Integer#+
  2.31      0.000     0.000     0.000     0.000      292   String#+
  2.11      0.003     0.000     0.000     0.002      177   CompSci::NaryTree#open_parent
  2.08      0.001     0.000     0.000     0.000      177   CompSci::ChildNode#add_child
  2.06      0.000     0.000     0.000     0.000      379   CompSci::Node#to_s
  1.89      0.000     0.000     0.000     0.000      799   Array#shift
  1.88      0.000     0.000     0.000     0.000      808   Array#empty?
  1.67      0.000     0.000     0.000     0.000      180   CompSci::ChildNode#initialize
  1.60      0.000     0.000     0.000     0.000      180   CompSci::Node#initialize
  1.55      0.011     0.000     0.000     0.010      156  *Array#each
  1.50      0.001     0.000     0.000     0.001      177   CompSci::Node#new_child
  1.41      0.000     0.000     0.000     0.000      540   String#size
  1.37      0.000     0.000     0.000     0.000      671   Integer#<
  1.33      0.000     0.000     0.000     0.000      671   Array#length
  1.31      0.004     0.000     0.000     0.004      177   CompSci::NaryTree#push
  1.29      0.000     0.000     0.000     0.000      270   String#ljust
  1.22      0.000     0.000     0.000     0.000      625   BasicObject#!
  1.16      0.000     0.000     0.000     0.000      357   BasicObject#!=
  1.13      0.001     0.000     0.000     0.000      650  *CompSci::ChildNode#gen
  1.11      0.000     0.000     0.000     0.000      177   CompSci::Node#add_child
  1.09      0.000     0.000     0.000     0.000      540   Integer#/
  1.00      0.000     0.000     0.000     0.000        6   Array#inspect
  0.98      0.000     0.000     0.000     0.000      270   String#rjust
  0.97      0.000     0.000     0.000     0.000        6   Kernel#p
  0.85      0.000     0.000     0.000     0.000      360   Integer#**
  0.80      0.001     0.000     0.000     0.001      187  *Class#new
  0.69      0.000     0.000     0.000     0.000      245   Kernel#respond_to?
  0.68      0.000     0.000     0.000     0.000      270   Array#max
  0.61      0.000     0.000     0.000     0.000       90   <Module::Math>#log
  0.61      0.000     0.000     0.000     0.000       62   CompSci::NaryTree#open_sibling
  0.60      0.000     0.000     0.000     0.000      270   Integer#==
  0.57      0.000     0.000     0.000     0.000        9   Array#join
  0.54      0.000     0.000     0.000     0.000      267   Array#<<
  0.45      0.000     0.000     0.000     0.000        4   Array#initialize
  0.44      0.000     0.000     0.000     0.000      177   BasicObject#==
  0.41      0.000     0.000     0.000     0.000        3   Kernel#inspect
  0.37      0.000     0.000     0.000     0.000      183   Kernel#class
  0.34      0.000     0.000     0.000     0.000        9   String#%
  0.34      0.000     0.000     0.000     0.000      120   Kernel#rand
  0.32      0.000     0.000     0.000     0.000       62   CompSci::ChildNode#siblings
  0.31      0.000     0.000     0.000     0.000       62   Enumerable#find
  0.28      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.28      0.000     0.000     0.000     0.000       43   IO#write
  0.24      0.000     0.000     0.000     0.000       90   Float#floor
  0.22      0.003     0.000     0.000     0.003        4   CompSci::NaryTree#display
  0.19      0.012     0.000     0.000     0.012        2   Global#[No method]
  0.19      0.000     0.000     0.000     0.000        6   Array#map
  0.18      0.000     0.000     0.000     0.000       31   IO#puts
  0.17      0.000     0.000     0.000     0.000       31   Kernel#puts
  0.15      0.000     0.000     0.000     0.000        6   CompSci::Node#inspect
  0.10      0.000     0.000     0.000     0.000       90  *CompSci::Tree#df_search
  0.10      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.08      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.08      0.000     0.000     0.000     0.000       34   Module#method_added
  0.08      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.07      0.000     0.000     0.000     0.000        6   Module#to_s
  0.06      0.001     0.000     0.000     0.001        2   CompSci::BinaryTree#display
  0.06      0.000     0.000     0.000     0.000        2   Module#attr_accessor
  0.06      0.000     0.000     0.000     0.000       11   Integer#>
  0.05      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.05      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.04      0.000     0.000     0.000     0.000        3   CompSci::NaryTree#initialize
  0.04      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.03      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.03      0.000     0.000     0.000     0.000        3   CompSci::Tree#initialize
  0.03      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.03      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.03      0.000     0.000     0.000     0.000        1   CompSci::TernaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.03      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.03      0.000     0.000     0.000     0.000        6   Kernel#object_id
  0.03      0.000     0.000     0.000     0.000        1   CompSci::BinaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.03      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.02      0.000     0.000     0.000     0.000        1   CompSci::QuaternaryTree#initialize
  0.02      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.02      0.000     0.000     0.000     0.000        2   Module#alias_method
  0.02      0.000     0.000     0.000     0.000        7   Class#inherited
  0.02      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.02      0.000     0.000     0.000     0.000        1   Module#append_features
  0.01      0.000     0.000     0.000     0.000        4   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/tree_push.rb -- 
#
# 3 seconds worth of pushes
#

100th push: 0.00004592 s
200th push: 0.00001421 s
300th push: 0.00001526 s
400th push: 0.00001562 s
500th push: 0.00001678 s
600th push: 0.00001688 s
700th push: 0.00001570 s
800th push: 0.00001616 s
900th push: 0.00001531 s
1000th push: 0.00001722 s
-----------
    1k push: 0.3297 s (3033 push / s)

1100th push: 0.00001600 s
1200th push: 0.00001858 s
1300th push: 0.00002009 s
1400th push: 0.00001856 s
1500th push: 0.00002366 s
1600th push: 0.00002175 s
1700th push: 0.00001690 s
1800th push: 0.00001757 s
1900th push: 0.00002246 s
2000th push: 0.00001688 s
-----------
    1k push: 0.9922 s (1007 push / s)

2100th push: 0.00002425 s
2200th push: 0.00003330 s
2300th push: 0.00001889 s
2400th push: 0.00002067 s
2500th push: 0.00001773 s
2600th push: 0.00003704 s
2700th push: 0.00001912 s
2800th push: 0.00001902 s
2900th push: 0.00001943 s
pushed 2983 items in 3.0 s

#
# 30 inserts, puts, df_search
#

[48, 30, 78, 26, 69, 40, 78, 66, 63, 45, 47, 7, 9, 67, 93, 93, 17, 45, 90, 11, 80, 93, 35, 47, 52, 88, 29, 65, 9, 1]
                                       48                                       
                   30                                      78                   
         26                  69                  40                  78         
    66        63        45        47         7         9        67        93    
  93   17   45   90   11   80   93   35   47   52   88   29   65   9    1  
#<CompSci::BinaryTree:0x00563c99c1ca60 @root=#<CompSci::ChildNode:0x2b1e4ce0e51ci @value=48 @children=[30, 78]>, @child_slots=2, @open_parent=#<CompSci::ChildNode:0x2b1e4ce0b86ci @value=93 @children=[1]>>

visited 48
visited 30
visited 26
visited 66
visited 93
visited 17
visited 63
visited 45
visited 90
visited 69
visited 45
visited 11
visited 80
visited 47
visited 93
visited 35
visited 78
visited 40
visited 7
visited 47
visited 52
visited 9
visited 88
visited 29
visited 78
visited 67
visited 65
visited 9
visited 93
visited 1

push: [98, 65, 81, 12, 77, 22, 64, 68, 51, 45, 63, 45, 57, 71, 0, 4, 87, 19, 41, 61, 34, 31, 17, 77, 92, 82, 54, 25, 66, 38]
                                       48                                       
                   30                                      78                   
         26                  69                  40                  78         
    66        63        45        47         7         9        67        93    
  93   17   45   90   11   80   93   35   47   52   88   29   65   9    1    98 
65 81 12 77 22 64 68 51 45 63 45 57 71 0 4 87 19 41 61 34 31 17 77 92 82 54 25 66 38 

Measure Mode: wall_time
Thread ID: 47409137359880
Fiber ID: 47409137309720
Total: 3.012841
Sort by: self_time

 %self      total      self      wait     child     calls  name
 34.33      2.927     1.034     0.000     1.893      763   CompSci::Tree#bf_search
 20.37      0.614     0.614     0.000     0.000   556831   Array#+
 16.87      0.783     0.508     0.000     0.274   563580   CompSci::NaryTree#open_parent?
  8.18      0.246     0.246     0.000     0.000   557652   Array#shift
  4.86      0.146     0.146     0.000     0.000   563580   Array#length
  4.37      0.132     0.132     0.000     0.000   557655   Array#empty?
  4.25      0.128     0.128     0.000     0.000   563580   Integer#<
  4.19      0.126     0.126     0.000     0.000   557594   BasicObject#!
  0.30      3.006     0.009     0.000     2.997        1   Kernel#loop
  0.23      2.950     0.007     0.000     2.943     3042   CompSci::NaryTree#open_parent
  0.18      0.012     0.005     0.000     0.006     3042   CompSci::ChildNode#add_child
  0.15      0.008     0.005     0.000     0.003     3044   CompSci::ChildNode#initialize
  0.13      0.012     0.004     0.000     0.008     3048  *Class#new
  0.12      0.028     0.004     0.000     0.024     3042   CompSci::Node#new_child
  0.11      0.010     0.003     0.000     0.006     3015   <Module::CompSci::Timer>#since
  0.11      2.981     0.003     0.000     2.978     3042   CompSci::NaryTree#push
  0.10      0.008     0.003     0.000     0.004     1553  *Array#each
  0.10      0.003     0.003     0.000     0.000     3044   CompSci::Node#initialize
  0.08      0.005     0.003     0.000     0.002     3048   <Module::CompSci::Timer>#now
  0.08      0.002     0.002     0.000     0.000     3044   Kernel#rand
  0.08      0.013     0.002     0.000     0.011     1520   CompSci::NaryTree#open_sibling
  0.08      0.002     0.002     0.000     0.000     3048   <Module::Process>#clock_gettime
  0.07      0.004     0.002     0.000     0.002     3042   CompSci::Node#add_child
  0.06      0.009     0.002     0.000     0.007     1520   Enumerable#find
  0.06      0.002     0.002     0.000     0.000     2983   Float#>
  0.06      0.003     0.002     0.000     0.001     3042   BasicObject#!=
  0.05      0.002     0.002     0.000     0.000     3042   Array#<<
  0.04      0.001     0.001     0.000     0.000     3015   Float#-
  0.04      0.001     0.001     0.000     0.000     3253   Integer#+
  0.03      0.001     0.001     0.000     0.000     3044   Kernel#class
  0.03      0.001     0.001     0.000     0.000     3012   Integer#%
  0.03      0.001     0.001     0.000     0.000     3102   Integer#==
  0.03      0.001     0.001     0.000     0.000     1520   CompSci::ChildNode#siblings
  0.03      0.001     0.001     0.000     0.000     3042   BasicObject#==
  0.03      0.001     0.001     0.000     0.000     1523   Kernel#respond_to?
  0.02      0.001     0.001     0.000     0.000       34   String#%
  0.01      0.000     0.000     0.000     0.000      142   IO#write
  0.00      3.013     0.000     0.000     3.013        2   Global#[No method]
  0.00      0.002     0.000     0.000     0.002       75   IO#puts
  0.00      0.001     0.000     0.000     0.001       29   <Module::CompSci::Timer>#elapsed
  0.00      0.000     0.000     0.000     0.000       90   <Module::Math>#log
  0.00      0.000     0.000     0.000     0.000      186   Integer#to_s
  0.00      0.000     0.000     0.000     0.000      125   CompSci::Node#to_s
  0.00      0.000     0.000     0.000     0.000       99   String#+
  0.00      0.000     0.000     0.000     0.000       90   String#ljust
  0.00      0.002     0.000     0.000     0.002       75   Kernel#puts
  0.00      0.000     0.000     0.000     0.000        2   Kernel#p
  0.00      0.000     0.000     0.000     0.000      180   Integer#**
  0.00      0.000     0.000     0.000     0.000      180   String#size
  0.00      0.000     0.000     0.000     0.000      180   Integer#/
  0.00      0.000     0.000     0.000     0.000       90   String#rjust
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.000     0.000     0.000     0.000        2   Array#initialize
  0.00      0.000     0.000     0.000     0.000       90   Array#max
  0.00      0.000     0.000     0.000     0.000       90   Float#floor
  0.00      0.000     0.000     0.000     0.000        2   Array#inspect
  0.00      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000        1   Kernel#inspect
  0.00      0.000     0.000     0.000     0.000       34   Module#method_added
  0.00      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000        2   Module#attr_accessor
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000        2   CompSci::Node#inspect
  0.00      0.000     0.000     0.000     0.000        2   CompSci::Tree#initialize
  0.00      0.000     0.000     0.000     0.000        2   Integer#to_f
  0.00      0.000     0.000     0.000     0.000        2   Module#to_s
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000       30  *CompSci::Tree#df_search
  0.00      0.002     0.000     0.000     0.002        2   CompSci::BinaryTree#display
  0.00      0.000     0.000     0.000     0.000        2   CompSci::BinaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        7   Class#inherited
  0.00      0.000     0.000     0.000     0.000        2   Array#map
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000        2   Array#join
  0.00      0.000     0.000     0.000     0.000        4   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000       11   Integer#>
  0.00      0.000     0.000     0.000     0.000        2   Float#/
  0.00      0.000     0.000     0.000     0.000        2   CompSci::NaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        2   Kernel#object_id
  0.00      0.000     0.000     0.000     0.000        1   Module#included
  0.00      0.000     0.000     0.000     0.000        2   Module#alias_method
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock

* indicates recursively called methods
