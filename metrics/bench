Run options: --seed 6554

# Running:

..............................S.S...............................................................

Finished in 0.323979s, 296.3159 runs/s, 3176.1359 assertions/s.

96 runs, 1029 assertions, 0 failures, 0 errors, 2 skips

You have skipped tests. Run with --verbose for details.
/proc/loadavg 0.00 0.00 0.00 1/77 4360
Warming up --------------------------------------
Fibonacci.classic(25)
                         7.000  i/100ms
Fibonacci.cache_recursive(25)
                        10.548k i/100ms
Fibonacci.cache_iterative(25)
                        26.242k i/100ms
Calculating -------------------------------------
Fibonacci.classic(25)
                         73.202  (± 2.7%) i/s -    224.000  in   3.061439s
Fibonacci.cache_recursive(25)
                        115.364k (± 4.2%) i/s -    348.084k in   3.022745s
Fibonacci.cache_iterative(25)
                        294.128k (± 3.7%) i/s -    892.228k in   3.038037s

Comparison:
Fibonacci.cache_iterative(25):   294128.3 i/s
Fibonacci.cache_recursive(25):   115364.0 i/s - 2.55x  slower
Fibonacci.classic(25):       73.2 i/s - 4018.06x  slower

Warming up --------------------------------------
Fibonacci.cache_iterative(500)
                       628.000  i/100ms
Fibonacci.dynamic(500)
                       692.000  i/100ms
Fibonacci.matrix(500)
                       855.000  i/100ms
Calculating -------------------------------------
Fibonacci.cache_iterative(500)
                          6.928k (± 3.2%) i/s -     21.352k in   3.085069s
Fibonacci.dynamic(500)
                          6.913k (± 4.7%) i/s -     20.760k in   3.010194s
Fibonacci.matrix(500)
                          8.755k (± 3.4%) i/s -     26.505k in   3.031302s

Comparison:
Fibonacci.matrix(500):     8754.7 i/s
Fibonacci.cache_iterative(500):     6928.3 i/s - 1.26x  slower
Fibonacci.dynamic(500):     6912.7 i/s - 1.27x  slower

Warming up --------------------------------------
        Simplex init   770.000  i/100ms
Simplex init and solve
                        73.000  i/100ms
Calculating -------------------------------------
        Simplex init      8.853k (± 3.8%) i/s -     26.950k in   3.048466s
Simplex init and solve
                        482.807  (±21.1%) i/s -      1.460k in   3.158548s

Comparison:
        Simplex init:     8853.4 i/s
Simplex init and solve:      482.8 i/s - 18.34x  slower

SIMPLEX_PARAMS.size = 14
simplices.size = 14
memsize(SIMPLEX_PARAMS): 152
memsize(simplices): 152
memsize(simplices after solving): 152
memsize(results): 152
Warming up --------------------------------------
99x BinaryTree(ChildNode)#push
                       175.000  i/100ms
99x BinaryTree(Node)#push
                       120.000  i/100ms
99x TernaryTree(ChildNode)#push
                       336.000  i/100ms
99x TernaryTree(Node)#push
                       224.000  i/100ms
Calculating -------------------------------------
99x BinaryTree(ChildNode)#push
                          1.708k (± 6.4%) i/s -      5.250k in   3.086899s
99x BinaryTree(Node)#push
                          1.192k (± 3.4%) i/s -      3.600k in   3.023269s
99x TernaryTree(ChildNode)#push
                          3.382k (± 3.0%) i/s -     10.416k in   3.082611s
99x TernaryTree(Node)#push
                          2.228k (± 5.5%) i/s -      6.720k in   3.026809s

Comparison:
99x TernaryTree(ChildNode)#push:     3381.9 i/s
99x TernaryTree(Node)#push:     2227.7 i/s - 1.52x  slower
99x BinaryTree(ChildNode)#push:     1708.5 i/s - 1.98x  slower
99x BinaryTree(Node)#push:     1192.1 i/s - 2.84x  slower

Run options: --seed 63298

# Running:

bench_Heap_push_constant_0_9999_	 0.000016	 0.000061	 0.000435	 0.001252	 0.012580
.

Finished in 0.028007s, 35.7056 runs/s, 35.7056 assertions/s.

1 runs, 1 assertions, 0 failures, 0 errors, 0 skips
