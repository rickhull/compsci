module CompSci
  class CompleteTree[Elem]
    @array: Array[Elem]
    @child_slots: Integer

    def self.parent_idx: (Integer idx, Integer n) -> Integer
    def self.children_idx: (Integer idx, Integer n) -> Array[Integer]
    def self.gen: (Integer idx, Integer n) -> Integer
    def self.generation: (Integer idx, Integer n) -> [Integer, Integer]

    attr_reader array: Array[Elem]
    attr_reader child_slots: Integer

    def initialize: (?array: Array[Elem], ?child_slots: Integer) -> void

    def push: (Elem val) -> Array[Elem]
    def pop: () -> Elem
    def unshift: (Elem val) -> Array[Elem]
    def shift: () -> Elem
    def size: () -> Integer
    def []: (Integer) -> Elem
    alias count size
    def swap: (Integer idx1, Integer idx2) -> self
    def display: (?width: Integer) -> Array[String]
    alias to_s display
  end
end
