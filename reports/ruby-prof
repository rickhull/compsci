RUBYLIB=lib ruby-prof  examples/complete_tree.rb -- 
/proc/loadavg 0.30 0.33 0.16 2/97 31462
#
# Print CompleteBinary-, Ternary-, and QuaternaryTree
#

[32, 56, 55, 82, 57, 30, 4, 71, 56, 36, 10, 50, 44, 77, 94, 37, 5, 14, 98, 38, 81, 35, 57, 98, 93, 15, 19, 65, 27, 7]
#<CompSci::CompleteBinaryTree:0x0055803ab2f880 @array=[32, 56, 55, 82, 57, 30, 4, 71, 56, 36, 10, 50, 44, 77, 94, 37, 5, 14, 98, 38, 81, 35, 57, 98, 93, 15, 19, 65, 27, 7], @child_slots=2>
                                       32                                       
                   56                                      55                   
         82                  57                  30                   4         
    71        56        36        10        50        44        77        94    
  37   5    14   98   38   81   35   57   98   93   15   19   65   27   7  



push: [73, 26, 63, 8, 87, 70, 56, 54, 51, 48, 66, 83, 43, 45, 23, 6, 1, 67, 44, 27, 64, 7, 42, 67, 79, 9, 89, 21, 27, 73]
                                       32                                       
                   56                                      55                   
         82                  57                  30                   4         
    71        56        36        10        50        44        77        94    
  37   5    14   98   38   81   35   57   98   93   15   19   65   27   7    73 
26 63 8 87 70 56 54 51 48 66 83 43 45 23 6 1 67 44 27 64 7 42 67 79 9 89 21 27 73 



[32, 56, 55, 82, 57, 30, 4, 71, 56, 36, 10, 50, 44, 77, 94, 37, 5, 14, 98, 38, 81, 35, 57, 98, 93, 15, 19, 65, 27, 7]
#<CompSci::CompleteTernaryTree:0x0055803ab0cab0 @array=[32, 56, 55, 82, 57, 30, 4, 71, 56, 36, 10, 50, 44, 77, 94, 37, 5, 14, 98, 38, 81, 35, 57, 98, 93, 15, 19, 65, 27, 7], @child_slots=3>
                                       32                                       
            56                        55                        82            
   57      30       4      71      56      36      10      50      44   
77 94 37 5 14 98 38 81 35 57 98 93 15 19 65 27 7 



push: [7, 51, 6, 0, 95, 36, 76, 57, 82, 42, 59, 32, 33, 48, 32, 51, 66, 33, 5, 41, 55, 89, 25, 68, 42, 83, 2, 89, 10, 55]
                                       32                                       
            56                        55                        82            
   57      30       4      71      56      36      10      50      44   
77 94 37 5 14 98 38 81 35 57 98 93 15 19 65 27 7 7 51 6 0 95 36 76 57 82 42 
59 32 33 48 32 51 66 33 5 41 55 89 25 68 42 83 2 89 10 55 



[32, 56, 55, 82, 57, 30, 4, 71, 56, 36, 10, 50, 44, 77, 94, 37, 5, 14, 98, 38, 81, 35, 57, 98, 93, 15, 19, 65, 27, 7]
#<CompSci::CompleteQuaternaryTree:0x0055803aa7b128 @array=[32, 56, 55, 82, 57, 30, 4, 71, 56, 36, 10, 50, 44, 77, 94, 37, 5, 14, 98, 38, 81, 35, 57, 98, 93, 15, 19, 65, 27, 7], @child_slots=4>
RUBYLIB=lib ruby-prof  examples/heap.rb -- 
#
# display the results of TernaryHeap push and pop
#

push: 14 72 57 17 93 10 37 75 69 54 41 67 0 72 25 20 57 78 46 66 46 14 47 15 3 53 20 16 67 36
array: [93, 78, 75, 67, 72, 72, 66, 57, 69, 67, 17, 41, 0, 14, 25, 20, 10, 57, 46, 37, 46, 14, 47, 15, 3, 53, 20, 16, 54, 36]
heap: true
                                       93                                       
            78                        75                        67            
   72      72      66      57      69      67      17      41       0   
14 25 20 10 57 46 37 46 14 47 15 3 53 20 16 54 36 


pop: 93
array: [78, 72, 75, 67, 72, 57, 66, 57, 69, 67, 17, 41, 0, 14, 25, 20, 10, 36, 46, 37, 46, 14, 47, 15, 3, 53, 20, 16, 54]
heap: true
                                       78                                       
            72                        75                        67            
   72      57      66      57      69      67      17      41       0   
14 25 20 10 36 46 37 46 14 47 15 3 53 20 16 54 


pop: 78 75 72 72 69 67 67 66 57
array: [57, 46, 54, 41, 25, 46, 37, 47, 14, 53, 17, 3, 0, 14, 16, 20, 10, 36, 15, 20]
heap: true
                                       57                                       
            46                        54                        41            
   25      46      37      47      14      53      17       3       0   
14 16 20 10 36 15 20 


push: 90 89 64 76 33 1 74 30 95 91 4 71 24 47 19 21 11 64 78 76 5 74 32 90 80 47 97 49 55 97
array: [97, 97, 91, 78, 90, 95, 57, 64, 74, 90, 47, 21, 76, 32, 80, 89, 46, 36, 15, 20, 37, 46, 47, 54, 33, 1, 14, 30, 53, 76, 4, 17, 24, 41, 3, 19, 11, 0, 64, 71, 5, 14, 25, 16, 74, 47, 20, 49, 55, 10]
heap: true
                                       97                                       
            97                        91                        78            
   90      95      57      64      74      90      47      21      76   
32 80 89 46 36 15 20 37 46 47 54 33 1 14 30 53 76 4 17 24 41 3 19 11 0 64 71 
5 14 25 16 74 47 20 49 55 10 

Measure Mode: wall_time
Thread ID: 47278807579660
Fiber ID: 47278807517700
Total: 0.009763
Sort by: self_time

 %self      total      self      wait     child     calls  name
  8.62      0.006     0.001     0.000     0.005      301  *Array#each
  7.48      0.001     0.001     0.000     0.001      129   Kernel#loop
  5.09      0.001     0.000     0.000     0.001      342   CompSci::Heap#heapish?
  4.18      0.003     0.000     0.000     0.002      168  *Array#initialize
  4.05      0.001     0.000     0.000     0.000      558   <Class::CompSci::CompleteNaryTree>#parent_idx
  3.48      0.000     0.000     0.000     0.000     1573   Integer#+
  2.72      0.000     0.000     0.000     0.000      471   BasicObject#!=
  2.59      0.000     0.000     0.000     0.000      836   Array#[]
  2.23      0.001     0.000     0.000     0.001      110  *CompSci::Heap#sift_up
  2.22      0.000     0.000     0.000     0.000      949   Integer#<
  2.20      0.000     0.000     0.000     0.000      816   Integer#/
  2.12      0.000     0.000     0.000     0.000      837   Integer#*
  1.88      0.000     0.000     0.000     0.000      618   Integer#-
  1.51      0.000     0.000     0.000     0.000      129   String#ljust
  1.45      0.000     0.000     0.000     0.000      591   Array#length
  1.43      0.002     0.000     0.000     0.001      129   <Class::CompSci::CompleteNaryTree>#gen
  1.13      0.000     0.000     0.000     0.000      462   Integer#==
  1.08      0.000     0.000     0.000     0.000      142   String#+
  1.05      0.000     0.000     0.000     0.000      327   Integer#to_s
  1.05      0.001     0.000     0.000     0.001      165   <Class::CompSci::CompleteNaryTree>#children_idx
  1.04      0.000     0.000     0.000     0.000      342   Integer#<=>
  1.02      0.000     0.000     0.000     0.000      398   Kernel#class
  0.98      0.001     0.000     0.000     0.001       60   CompSci::Heap#push
  0.76      0.003     0.000     0.000     0.003      169  *Class#new
  0.66      0.000     0.000     0.000     0.000      258   String#size
  0.56      0.000     0.000     0.000     0.000        3   Array#join
  0.55      0.000     0.000     0.000     0.000       36   CompSci::Heap#heapiest
  0.53      0.000     0.000     0.000     0.000      152   Array#[]=
  0.50      0.000     0.000     0.000     0.000      129   String#rjust
  0.48      0.000     0.000     0.000     0.000        4   Array#inspect
  0.48      0.010     0.000     0.000     0.010        2   Global#[No method]
  0.47      0.000     0.000     0.000     0.000      129   Integer#**
  0.43      0.001     0.000     0.000     0.001       60   Kernel#tap
  0.42      0.001     0.000     0.000     0.001       36  *CompSci::Heap#sift_down
  0.41      0.000     0.000     0.000     0.000       40   IO#write
  0.40      0.000     0.000     0.000     0.000      129   Array#max
  0.38      0.000     0.000     0.000     0.000      125   Array#<<
  0.35      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.34      0.000     0.000     0.000     0.000      140   BasicObject#!
  0.32      0.000     0.000     0.000     0.000       60   Kernel#rand
  0.27      0.000     0.000     0.000     0.000      110   Integer#<=
  0.26      0.001     0.000     0.000     0.001       10   CompSci::Heap#pop
  0.24      0.003     0.000     0.000     0.003       24   IO#puts
  0.24      0.003     0.000     0.000     0.003       24   Kernel#puts
  0.22      0.000     0.000     0.000     0.000       60   Array#push
  0.12      0.000     0.000     0.000     0.000        4   String#%
  0.12      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.12      0.000     0.000     0.000     0.000       36   Array#first
  0.10      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.10      0.002     0.000     0.000     0.002      129  *CompSci::Heap#heap?
  0.09      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.09      0.003     0.000     0.000     0.003        4   CompSci::CompleteNaryTree#display
  0.09      0.000     0.000     0.000     0.000       22   Module#method_added
  0.08      0.000     0.000     0.000     0.000       36   Integer#>=
  0.06      0.000     0.000     0.000     0.000       10   Array#unshift
  0.06      0.000     0.000     0.000     0.000        4   TrueClass#to_s
  0.06      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.05      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.05      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.05      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.04      0.000     0.000     0.000     0.000       10   Array#pop
  0.04      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.04      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.04      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.04      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.04      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.03      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.03      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.03      0.000     0.000     0.000     0.000        9   BasicObject#==
  0.03      0.000     0.000     0.000     0.000       10   Array#shift
  0.03      0.003     0.000     0.000     0.003        4   Enumerable#each_with_index
  0.02      0.000     0.000     0.000     0.000        1   Module#append_features
  0.02      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#initialize
  0.02      0.000     0.000     0.000     0.000        5   Class#inherited
  0.01      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.01      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/heap_push.rb -- 
#
# 3 seconds worth of pushes
#

10000th push: 0.00005037 s
20000th push: 0.00006239 s
30000th push: 0.00002861 s
40000th push: 0.00006232 s
50000th push: 0.00005126 s
60000th push: 0.00009242 s
70000th push: 0.00003812 s
80000th push: 0.00002703 s
90000th push: 0.00008629 s
100000th push: 0.00003609 s
-------------
    100k push: 2.90093107 s (34k push / s)

pushed 103356 items in 3.0 s

still a heap with 103357 items? YES - 1.539 sec

Measure Mode: wall_time
Thread ID: 47061190384660
Fiber ID: 47061190322860
Total: 4.541040
Sort by: self_time

 %self      total      self      wait     child     calls  name
 10.26      1.008     0.466     0.000     0.543   336824   CompSci::Heap#heapish?
  6.73      1.918     0.306     0.000     1.612   233477  *CompSci::Heap#sift_up
  5.50      3.000     0.250     0.000     2.750        1   Kernel#loop
  5.37      0.244     0.244     0.000     0.000  1037245   Array#[]
  4.62      0.359     0.210     0.000     0.150   103357   Array#initialize
  4.00      0.291     0.182     0.000     0.109   233468   <Class::CompSci::CompleteNaryTree>#parent_idx
  3.34      0.226     0.152     0.000     0.074   336824   BasicObject#!=
  3.28      2.154     0.149     0.000     2.005   103357   CompSci::Heap#push
  3.17      0.255     0.144     0.000     0.111   103357   Object#number
  3.04      0.138     0.138     0.000     0.000   543538   Integer#*
  2.71      0.123     0.123     0.000     0.000   543547   Integer#==
  2.59      0.118     0.118     0.000     0.000   516784   Integer#+
  1.95      0.229     0.089     0.000     0.141   103369   <Module::CompSci::Timer>#since
  1.82      0.083     0.083     0.000     0.000   310080   Integer#%
  1.80      0.082     0.082     0.000     0.000   336825   Kernel#class
  1.78      0.081     0.081     0.000     0.000   336826   Integer#-
  1.77      0.080     0.080     0.000     0.000   336824   Integer#<=>
  1.68      0.077     0.077     0.000     0.000   310072   Array#length
  1.48      0.111     0.067     0.000     0.044   103383   <Module::CompSci::Timer>#now
  1.46      0.487     0.066     0.000     0.420   103357   <Class::CompSci::CompleteNaryTree>#children_idx
  1.44      0.065     0.065     0.000     0.000   260240   Array#[]=
  1.34      0.420     0.061     0.000     0.359   103358   Class#new
  1.26      0.057     0.057     0.000     0.000   233468   Integer#/
  1.21      0.055     0.055     0.000     0.000   233468   BasicObject#!
  1.19      0.054     0.054     0.000     0.000   206714   Integer#<
  1.15      0.052     0.052     0.000     0.000   233477   Integer#<=
  0.97      0.044     0.044     0.000     0.000   103383   <Module::Process>#clock_gettime
  0.82      0.037     0.037     0.000     0.000   103356   Float#>
  0.70      0.032     0.032     0.000     0.000   103461   Array#push
  0.65      0.029     0.029     0.000     0.000   103369   Float#-
  0.64      0.029     0.029     0.000     0.000   103356   Array#<<
  0.00      0.000     0.000     0.000     0.000       13   String#%
  0.00      0.000     0.000     0.000     0.000      104   Kernel#rand
  0.00      0.000     0.000     0.000     0.000      105   Array#shift
  0.00      0.000     0.000     0.000     0.000       33   IO#write
  0.00      4.541     0.000     0.000     4.541        2   Global#[No method]
  0.00      1.540     0.000     0.000     1.540       11   <Module::CompSci::Timer>#elapsed
  0.00      0.000     0.000     0.000     0.000        1   Range#each
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.000     0.000     0.000     0.000       18   IO#puts
  0.00      0.000     0.000     0.000     0.000        1   Array#shuffle
  0.00      1.539     0.000     0.000     1.539   206717  *Array#each
  0.00      0.000     0.000     0.000     0.000       18   Kernel#puts
  0.00      0.000     0.000     0.000     0.000       23   Module#method_added
  0.00      0.001     0.000     0.000     0.001        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#size
  0.00      1.539     0.000     0.000     1.539   103357  *CompSci::Heap#heap?
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_f
  0.00      0.000     0.000     0.000     0.000        1   Enumerable#to_a
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        5   Class#inherited
  0.00      0.000     0.000     0.000     0.000        1   Kernel#print
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_s
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        1   Float#/
  0.00      0.000     0.000     0.000     0.000        1   String#to_i
  0.00      0.000     0.000     0.000     0.000        1   Module#included
  0.00      0.000     0.000     0.000     0.000        1   Module#alias_method

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/tree.rb -- 
#
# Fill up and display some trees
#

[5, 41, 20, 94, 62, 93, 0, 32, 82, 82, 13, 8, 25, 59, 55, 91, 94, 97, 85, 40, 54, 60, 51, 65, 66, 59, 94, 1, 55, 30]

#<CompSci::Node:0x2ac4cca73120i @value=5 @children=[41, 20]>
                                        5                                       
                   41                                      20                   
         94                  62                  93                   0         
    32        82        82        13         8        25        59        55    
  91   94   97   85   40   54   60   51   65   66   59   94   1    55   30      



#<CompSci::Node:0x2ac4cca5fd78i @value=5 @children=[41, 20, 94]>
                                        5                                       
            41                        20                        94            
   62      93       0      32      82      82      13       8      25   
59 55 91 94 97 85 40 54 60 51 65 66 59 94 1 55 30                     



#<CompSci::Node:0x2ac4cca46b5ci @value=5 @children=[41, 20, 94, 62]>
                                        5                                       
         41                  20                  94                  62         
  93   0    32   82   82   13   8    25   59   55   91   94   97   85   40   54 
60 51 65 66 59 94 1 55 30                                                        


Measure Mode: wall_time
Thread ID: 47024734018560
Fiber ID: 47024733956260
Total: 0.004947
Sort by: self_time

 %self      total      self      wait     child     calls  name
  8.34      0.001     0.000     0.000     0.001       13   Array#map
  7.75      0.000     0.000     0.000     0.000      310   Array#initialize
  5.74      0.001     0.000     0.000     0.001      466  *Class#new
  4.92      0.000     0.000     0.000     0.000      202   Array#+
  4.86      0.000     0.000     0.000     0.000       13   Array#any?
  4.31      0.001     0.000     0.000     0.001       49   Integer#times
  4.15      0.000     0.000     0.000     0.000      156   CompSci::Node#initialize
  2.09      0.000     0.000     0.000     0.000      513   Array#[]
  1.94      0.000     0.000     0.000     0.000      312   String#size
  1.90      0.000     0.000     0.000     0.000      153   CompSci::Node#[]=
  1.86      0.000     0.000     0.000     0.000      168   CompSci::Node#to_s
  1.82      0.000     0.000     0.000     0.000      156   String#ljust
  1.80      0.000     0.000     0.000     0.000      379   BasicObject#!
  1.65      0.000     0.000     0.000     0.000      369   NilClass#nil?
  1.46      0.000     0.000     0.000     0.000      312   Integer#+
  1.18      0.000     0.000     0.000     0.000        4   Kernel#p
  1.07      0.000     0.000     0.000     0.000      156   String#rjust
  1.05      0.005     0.000     0.000     0.005        2   Global#[No method]
  1.04      0.000     0.000     0.000     0.000      169   Integer#/
  1.01      0.000     0.000     0.000     0.000      169   Array#max
  0.98      0.002     0.000     0.000     0.002        3   CompSci::Node#display
  0.95      0.000     0.000     0.000     0.000      132   Integer#to_s
  0.92      0.004     0.000     0.000     0.004       22  *Array#each
  0.87      0.000     0.000     0.000     0.000       19   Array#join
  0.82      0.000     0.000     0.000     0.000      166   Array#length
  0.81      0.000     0.000     0.000     0.000      153   Array#[]=
  0.78      0.000     0.000     0.000     0.000      156   Kernel#is_a?
  0.70      0.000     0.000     0.000     0.000      156   Array#shift
  0.51      0.000     0.000     0.000     0.000       66   NilClass#to_s
  0.51      0.000     0.000     0.000     0.000        4   IO#set_encoding
  0.51      0.001     0.000     0.000     0.001       13   <Class::CompSci::Node>#display_level
  0.41      0.000     0.000     0.000     0.000       16   IO#write
  0.33      0.000     0.000     0.000     0.000        3   String#%
  0.28      0.000     0.000     0.000     0.000        3   Module#attr_accessor
  0.27      0.000     0.000     0.000     0.000        1   Array#inspect
  0.26      0.000     0.000     0.000     0.000       30   Kernel#rand
  0.20      0.000     0.000     0.000     0.000       25   Module#method_added
  0.20      0.001     0.000     0.000     0.001        2  *Kernel#require
  0.18      0.000     0.000     0.000     0.000       13   IO#puts
  0.18      0.000     0.000     0.000     0.000        3   CompSci::Node#inspect
  0.15      0.000     0.000     0.000     0.000       13   Kernel#puts
  0.14      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.12      0.000     0.000     0.000     0.000        3   Module#to_s
  0.10      0.000     0.000     0.000     0.000       10   Array#<<
  0.10      0.000     0.000     0.000     0.000        1   MonitorMixin#mon_enter
  0.10      0.000     0.000     0.000     0.000        5   Class#inherited
  0.09      0.000     0.000     0.000     0.000       16   Kernel#class
  0.08      0.000     0.000     0.000     0.000       13   Array#empty?
  0.08      0.000     0.000     0.000     0.000       10   Kernel#nil?
  0.06      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.06      0.000     0.000     0.000     0.000        1   MonitorMixin#mon_exit
  0.06      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.06      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.06      0.000     0.000     0.000     0.000        3   <Class::Thread>#current
  0.04      0.000     0.000     0.000     0.000        1   Thread::Mutex#unlock
  0.04      0.000     0.000     0.000     0.000        3   Kernel#object_id
  0.04      0.000     0.000     0.000     0.000        1   Module#append_features
  0.04      0.000     0.000     0.000     0.000        1   <Module::Gem>#suffixes
  0.04      0.000     0.000     0.000     0.000        1   <Module::Gem>#find_unresolved_default_spec
  0.02      0.000     0.000     0.000     0.000        1   Module#included
  0.02      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.02      0.000     0.000     0.000     0.000        1   BasicObject#singleton_method_added
  0.02      0.000     0.000     0.000     0.000        1   MonitorMixin#mon_check_owner
  0.02      0.000     0.000     0.000     0.000        1   <Class::Gem::Specification>#unresolved_deps
  0.02      0.000     0.000     0.000     0.000        1   Kernel#respond_to?
  0.02      0.000     0.000     0.000     0.000        1   Thread::Mutex#lock

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/push_tree.rb -- 
#
# Try out Binary, Ternary, and Quaternary PushTrees
# Push the same vals to each
#

[63, 66, 73, 62, 1, 4, 80, 87, 66, 41, 8, 54, 18, 12, 14, 53, 58, 35, 37, 10, 32, 64, 37, 5, 33, 75, 68, 55, 48, 70]
#<CompSci::PushTree:0x005648fb65bb08 @root=#<CompSci::ChildFlexNode:0x2b247db2dde8i @value=63 @children=[66, 73]>, @child_slots=2, @open_parent=#<CompSci::ChildFlexNode:0x2b247db2d6f4i @value=14 @children=[70]>>
                                       63                                       
                   66                                      73                   
         62                   1                   4                  80         
    87        66        41         8        54        18        12        14    
  53   58   35   37   10   32   64   37   5    33   75   68   55   48   70   _  

df_search visited: 63 66 62 87 53 58 66 35 37 1 41 10 32 8 64 37 73 4 54 5 33 18 75 68 80 12 55 48 14 70


push: [74, 39, 64, 54, 79, 47, 73, 58, 90, 23, 90, 5, 66, 23, 74, 71, 22, 16, 74, 93, 25, 18, 90, 68, 19, 55, 17, 84, 77, 31]

                                       63                                       
                   66                                      73                   
         62                   1                   4                  80         
    87        66        41         8        54        18        12        14    
  53   58   35   37   10   32   64   37   5    33   75   68   55   48   70   74 
39 64 54 79 47 73 58 90 23 90 5 66 23 74 71 22 16 74 93 25 18 90 68 19 55 17 84 77 31 _ _ _ 


[63, 66, 73, 62, 1, 4, 80, 87, 66, 41, 8, 54, 18, 12, 14, 53, 58, 35, 37, 10, 32, 64, 37, 5, 33, 75, 68, 55, 48, 70]
#<CompSci::PushTree:0x005648fb61fd60 @root=#<CompSci::ChildFlexNode:0x2b247db0ff3ci @value=63 @children=[66, 73, 62]>, @child_slots=3, @open_parent=#<CompSci::ChildFlexNode:0x2b247db0f53ci @value=41 @children=[48, 70]>>
                                       63                                       
            66                        73                        62            
    1       4      80      87      66      41       8      54      18   
12 14 53 58 35 37 10 32 64 37 5 33 75 68 55 48 70 _ _ _ _ _ _ _ _ _ _ 

df_search visited: 63 66 1 12 14 53 4 58 35 37 80 10 32 64 73 87 37 5 33 66 75 68 55 41 48 70 62 8 54 18


push: [3, 60, 26, 91, 24, 43, 84, 16, 57, 32, 87, 3, 62, 10, 15, 65, 49, 81, 25, 63, 3, 11, 75, 89, 76, 60, 61, 84, 93, 54]

                                       63                                       
            66                        73                        62            
    1       4      80      87      66      41       8      54      18   
12 14 53 58 35 37 10 32 64 37 5 33 75 68 55 48 70 3 60 26 91 24 43 84 16 57 32 
87 3 62 10 15 65 49 81 25 63 3 11 75 89 76 60 61 84 93 54 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 


[63, 66, 73, 62, 1, 4, 80, 87, 66, 41, 8, 54, 18, 12, 14, 53, 58, 35, 37, 10, 32, 64, 37, 5, 33, 75, 68, 55, 48, 70]
#<CompSci::PushTree:0x005648fb44bd18 @root=#<CompSci::ChildFlexNode:0x2b247da25f2ci @value=63 @children=[66, 73, 62, 1]>, @child_slots=4, @open_parent=#<CompSci::ChildFlexNode:0x2b247da25978i @value=87 @children=[70]>>
                                       63                                       
         66                  73                  62                   1         
  4    80   87   66   41   8    54   18   12   14   53   58   35   37   10   32 
64 37 5 33 75 68 55 48 70 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

df_search visited: 63 66 4 64 37 5 33 80 75 68 55 48 87 70 66 73 41 8 54 18 62 12 14 53 58 1 35 37 10 32


push: [10, 98, 39, 46, 30, 49, 24, 41, 47, 9, 42, 34, 41, 78, 15, 16, 55, 50, 14, 3, 90, 93, 41, 83, 10, 62, 4, 23, 94, 40]

                                       63                                       
         66                  73                  62                   1         
  4    80   87   66   41   8    54   18   12   14   53   58   35   37   10   32 
64 37 5 33 75 68 55 48 70 10 98 39 46 30 49 24 41 47 9 42 34 41 78 15 16 55 50 14 3 90 93 41 83 10 62 4 23 94 40 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 


#
# 30 inserts, puts, df_search
#

[29, 26, 63, 69, 95, 90, 17, 33, 18, 51, 87, 1, 65, 28, 64, 79, 67, 57, 26, 17, 72, 87, 11, 51, 12, 39, 90, 2, 65, 46]
                                       29                                       
                   26                                      63                   
         69                  95                  90                  17         
    33        18        51        87         1        65        28        64    
  79   67   57   26   17   72   87   11   51   12   39   90   2    65   46   _  
#<CompSci::PushTree:0x005648fb4761f8 @root=#<CompSci::ChildFlexNode:0x2b247da3b3b8i @value=29 @children=[26, 63]>, @child_slots=2, @open_parent=#<CompSci::ChildFlexNode:0x2b247da37240i @value=64 @children=[46]>>

visited 29
visited 26
visited 69
visited 33
visited 79
visited 67
visited 18
visited 57
visited 26
visited 95
visited 51
visited 17
visited 72
visited 87
visited 87
visited 11
visited 63
visited 90
visited 1
visited 51
visited 12
visited 65
visited 39
visited 90
visited 17
visited 28
visited 2
visited 65
visited 64
visited 46

push: [38, 78, 14, 31, 14, 27, 60, 3, 24, 41, 93, 21, 4, 33, 25, 27, 63, 35, 14, 87, 62, 58, 39, 55, 57, 67, 90, 37, 2, 33]
                                       29                                       
                   26                                      63                   
         69                  95                  90                  17         
    33        18        51        87         1        65        28        64    
  79   67   57   26   17   72   87   11   51   12   39   90   2    65   46   38 
78 14 31 14 27 60 3 24 41 93 21 4 33 25 27 63 35 14 87 62 58 39 55 57 67 90 37 2 33 _ _ _ 

#
# 5 seconds worth of pushes
#

100th push: 0.00002291 s
200th push: 0.00001343 s
300th push: 0.00001347 s
400th push: 0.00001375 s
500th push: 0.00001523 s
600th push: 0.00001415 s
700th push: 0.00001434 s
800th push: 0.00001475 s
900th push: 0.00001461 s
1000th push: 0.00001484 s
-----------
    1k push: 0.3180 s (3144 push / s)

1100th push: 0.00001457 s
1200th push: 0.00001516 s
1300th push: 0.00002469 s
1400th push: 0.00001473 s
1500th push: 0.00001524 s
1600th push: 0.00001458 s
1700th push: 0.00001499 s
1800th push: 0.00003586 s
1900th push: 0.00004664 s
2000th push: 0.00001681 s
-----------
    1k push: 0.9639 s (1037 push / s)

2100th push: 0.00001628 s
2200th push: 0.00001655 s
2300th push: 0.00001822 s
2400th push: 0.00001535 s
2500th push: 0.00001808 s
2600th push: 0.00001705 s
2700th push: 0.00007421 s
2800th push: 0.00001745 s
2900th push: 0.00001798 s
3000th push: 0.00001937 s
-----------
    1k push: 1.7209 s (581 push / s)

3100th push: 0.00001712 s
3200th push: 0.00001868 s
3300th push: 0.00001905 s
3400th push: 0.00001860 s
3500th push: 0.00001829 s
3600th push: 0.00001872 s
3700th push: 0.00002136 s
3800th push: 0.00001863 s
pushed 3803 items in 5.0 s

Measure Mode: wall_time
Thread ID: 47435726634000
Fiber ID: 47435726571820
Total: 5.029035
Sort by: self_time

 %self      total      self      wait     child     calls  name
 32.97      4.907     1.658     0.000     3.249      992   CompSci::PushTree#bf_search
 24.18      1.216     1.216     0.000     0.000   905460   Array#+
 15.69      1.199     0.789     0.000     0.410   913981   CompSci::PushTree#open_parent?
  7.92      0.398     0.398     0.000     0.000   906181   Array#shift
  4.91      0.247     0.247     0.000     0.000   906185   Array#empty?
  4.12      0.207     0.207     0.000     0.000   913981   Integer#<
  4.04      0.203     0.203     0.000     0.000   914531   Array#length
  3.98      0.200     0.200     0.000     0.000   907000   BasicObject#!
  0.23      5.012     0.012     0.000     5.000        1   Kernel#loop
  0.18      4.939     0.009     0.000     4.930     4039   CompSci::PushTree#open_parent
  0.17      0.023     0.009     0.000     0.014     4566   Class#new
  0.13      0.013     0.007     0.000     0.006     4044   CompSci::ChildNode#initialize
  0.13      0.012     0.007     0.000     0.006     4039   CompSci::ChildFlexNode#add_child
  0.10      0.040     0.005     0.000     0.035     4039   CompSci::ChildFlexNode#new_child
  0.10      4.984     0.005     0.000     4.979     4039   CompSci::PushTree#push
  0.10      0.006     0.005     0.000     0.001     4044   CompSci::Node#initialize
  0.08      0.011     0.004     0.000     0.007     3845   <Module::CompSci::Timer>#since
  0.08      0.022     0.004     0.000     0.018     2147  *Array#each
  0.07      0.003     0.003     0.000     0.000     3984   Kernel#rand
  0.06      0.018     0.003     0.000     0.015     1992   CompSci::PushTree#open_sibling
  0.06      0.006     0.003     0.000     0.003     3888   <Module::CompSci::Timer>#now
  0.06      0.012     0.003     0.000     0.009     1992   Enumerable#find
  0.06      0.003     0.003     0.000     0.000     3888   <Module::Process>#clock_gettime
  0.05      0.003     0.003     0.000     0.000     3803   Float#>
  0.05      0.004     0.002     0.000     0.001     4039   BasicObject#!=
  0.04      0.002     0.002     0.000     0.000     4160   Array#<<
  0.04      0.004     0.002     0.000     0.002       39   Array#map
  0.03      0.002     0.002     0.000     0.000     3845   Float#-
  0.03      0.002     0.002     0.000     0.000     4841   Integer#+
  0.03      0.001     0.001     0.000     0.000     4086   Kernel#class
  0.02      0.001     0.001     0.000     0.000     4044   Kernel#is_a?
  0.02      0.001     0.001     0.000     0.000     4039   BasicObject#==
  0.02      0.001     0.001     0.000     0.000     3841   Integer#%
  0.02      0.001     0.001     0.000     0.000     1992   CompSci::ChildNode#siblings
  0.02      0.001     0.001     0.000     0.000     2000   Kernel#respond_to?
  0.02      0.001     0.001     0.000     0.000     3841   Integer#==
  0.02      0.001     0.001     0.000     0.000      517   Array#initialize
  0.01      0.001     0.001     0.000     0.000       53   String#%
  0.01      0.001     0.001     0.000     0.001       39   Array#any?
  0.01      0.000     0.000     0.000     0.000      519   String#rjust
  0.01      0.000     0.000     0.000     0.000     1038   String#size
  0.01      0.000     0.000     0.000     0.000      749   Integer#to_s
  0.01      0.000     0.000     0.000     0.000      504   CompSci::Node#to_s
  0.01      0.000     0.000     0.000     0.000      519   String#ljust
  0.01      0.000     0.000     0.000     0.000     1028   NilClass#nil?
  0.00      0.000     0.000     0.000     0.000      208   IO#write
  0.00      0.000     0.000     0.000     0.000      968   Array#[]
  0.00      0.000     0.000     0.000     0.000       58   Array#join
  0.00      0.000     0.000     0.000     0.000      558   Array#max
  0.00      0.000     0.000     0.000     0.000        8   Kernel#p
  0.00      0.000     0.000     0.000     0.000      118   IO#puts
  0.00      0.001     0.000     0.000     0.001       38   <Module::CompSci::Timer>#elapsed
  0.00      0.000     0.000     0.000     0.000      558   Integer#/
  0.00      5.029     0.000     0.000     5.029        2   Global#[No method]
  0.00      0.008     0.000     0.000     0.007        8   CompSci::Node#display
  0.00      0.000     0.000     0.000     0.000      118   Kernel#puts
  0.00      0.000     0.000     0.000     0.000        8   Array#inspect
  0.00      0.004     0.000     0.000     0.004       39   <Class::CompSci::Node>#display_level
  0.00      0.000     0.000     0.000     0.000        4   Kernel#inspect
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.001     0.000     0.000     0.001        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000      120  *CompSci::PushTree#df_search
  0.00      0.000     0.000     0.000     0.000        8   CompSci::Node#inspect
  0.00      0.000     0.000     0.000     0.000        3   Module#attr_accessor
  0.00      0.000     0.000     0.000     0.000       31   Kernel#nil?
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.000     0.000     0.000     0.000       34   Module#method_added
  0.00      0.000     0.000     0.000     0.000        5   CompSci::PushTree#initialize
  0.00      0.000     0.000     0.000     0.000        8   Module#to_s
  0.00      0.000     0.000     0.000     0.000        2   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000        8   Kernel#object_id
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        3   Float#/
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        5   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.00      0.000     0.000     0.000     0.000        3   Integer#to_f
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000        1   Module#included
  0.00      0.000     0.000     0.000     0.000        6   Class#inherited
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock

* indicates recursively called methods
