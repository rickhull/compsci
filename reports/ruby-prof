RUBYLIB=lib ruby-prof  examples/complete_tree.rb -- 
/proc/loadavg 0.60 0.23 0.11 1/80 1534
#
# Print CompleteBinary-, Ternary-, and QuaternaryTree
#

[72, 45, 96, 26, 27, 48, 75, 71, 47, 78, 31, 32, 9, 73, 76, 75, 23, 23, 52, 56, 85, 15, 81, 56, 67, 0, 9, 65, 87, 80]
#<CompSci::CompleteBinaryTree:0x00564272397190 @array=[72, 45, 96, 26, 27, 48, 75, 71, 47, 78, 31, 32, 9, 73, 76, 75, 23, 23, 52, 56, 85, 15, 81, 56, 67, 0, 9, 65, 87, 80], @child_slots=2>
                                       72                                       
                   45                                      96                   
         26                  27                  48                  75         
    71        47        78        31        32         9        73        76    
  75   23   23   52   56   85   15   81   56   67   0    9    65   87   80 



push: [62, 75, 34, 65, 9, 37, 2, 5, 12, 86, 63, 58, 80, 40, 7, 89, 12, 28, 30, 71, 9, 92, 18, 2, 29, 51, 69, 54, 65, 49]
                                       72                                       
                   45                                      96                   
         26                  27                  48                  75         
    71        47        78        31        32         9        73        76    
  75   23   23   52   56   85   15   81   56   67   0    9    65   87   80   62 
75 34 65 9 37 2 5 12 86 63 58 80 40 7 89 12 28 30 71 9 92 18 2 29 51 69 54 65 49 



[72, 45, 96, 26, 27, 48, 75, 71, 47, 78, 31, 32, 9, 73, 76, 75, 23, 23, 52, 56, 85, 15, 81, 56, 67, 0, 9, 65, 87, 80]
#<CompSci::CompleteTernaryTree:0x00564272366388 @array=[72, 45, 96, 26, 27, 48, 75, 71, 47, 78, 31, 32, 9, 73, 76, 75, 23, 23, 52, 56, 85, 15, 81, 56, 67, 0, 9, 65, 87, 80], @child_slots=3>
                                       72                                       
            45                        96                        26            
   27      48      75      71      47      78      31      32       9   
73 76 75 23 23 52 56 85 15 81 56 67 0 9 65 87 80 



push: [96, 11, 36, 15, 88, 88, 87, 69, 29, 66, 38, 89, 48, 98, 51, 60, 72, 84, 4, 58, 25, 25, 69, 28, 32, 41, 35, 92, 74, 68]
                                       72                                       
            45                        96                        26            
   27      48      75      71      47      78      31      32       9   
73 76 75 23 23 52 56 85 15 81 56 67 0 9 65 87 80 96 11 36 15 88 88 87 69 29 66 
38 89 48 98 51 60 72 84 4 58 25 25 69 28 32 41 35 92 74 68 



[72, 45, 96, 26, 27, 48, 75, 71, 47, 78, 31, 32, 9, 73, 76, 75, 23, 23, 52, 56, 85, 15, 81, 56, 67, 0, 9, 65, 87, 80]
#<CompSci::CompleteQuaternaryTree:0x005642722cf000 @array=[72, 45, 96, 26, 27, 48, 75, 71, 47, 78, 31, 32, 9, 73, 76, 75, 23, 23, 52, 56, 85, 15, 81, 56, 67, 0, 9, 65, 87, 80], @child_slots=4>
                                       72                                       
         45                  96                  26                  27         
  48   75   71   47   78   31   32   9    73   76   75   23   23   52   56   85 
15 81 56 67 0 9 65 87 80 



push: [22, 39, 18, 34, 81, 89, 77, 17, 93, 67, 58, 1, 38, 36, 85, 10, 90, 30, 67, 98, 11, 36, 83, 97, 54, 28, 35, 55, 62, 50]
                                       72                                       
         45                  96                  26                  27         
  48   75   71   47   78   31   32   9    73   76   75   23   23   52   56   85 
15 81 56 67 0 9 65 87 80 22 39 18 34 81 89 77 17 93 67 58 1 38 36 85 10 90 30 67 98 11 36 83 97 54 28 35 55 62 50 



Measure Mode: wall_time
Thread ID: 47421690649600
Fiber ID: 47421690600180
Total: 0.008810
Sort by: self_time

 %self      total      self      wait     child     calls  name
 16.84      0.003     0.001     0.000     0.002      270   Kernel#loop
  9.60      0.001     0.001     0.000     0.001     1077   <Class::CompSci::CompleteNaryTree>#parent_idx
  4.83      0.000     0.000     0.000     0.000     1617   Integer#/
  3.96      0.000     0.000     0.000     0.000     1347   Integer#+
  3.46      0.004     0.000     0.000     0.003      270   <Class::CompSci::CompleteNaryTree>#gen
  2.83      0.000     0.000     0.000     0.000     1077   Integer#-
  2.57      0.000     0.000     0.000     0.000      292   String#+
  2.53      0.000     0.000     0.000     0.000      270   String#ljust
  2.52      0.000     0.000     0.000     0.000      540   String#size
  2.48      0.000     0.000     0.000     0.000     1077   Integer#<
  2.26      0.000     0.000     0.000     0.000      543   Integer#to_s
  2.18      0.000     0.000     0.000     0.000      270   BasicObject#!=
  1.93      0.007     0.000     0.000     0.007        9  *Array#each
  1.37      0.000     0.000     0.000     0.000      270   String#rjust
  1.30      0.000     0.000     0.000     0.000      180   CompSci::CompleteNaryTree#push
  1.17      0.000     0.000     0.000     0.000        9   Array#inspect
  0.98      0.000     0.000     0.000     0.000      270   Array#max
  0.95      0.000     0.000     0.000     0.000      270   Integer#**
  0.86      0.000     0.000     0.000     0.000        6   Kernel#p
  0.80      0.000     0.000     0.000     0.000      270   Kernel#class
  0.78      0.000     0.000     0.000     0.000      270   Integer#==
  0.59      0.000     0.000     0.000     0.000      180   Array#push
  0.55      0.000     0.000     0.000     0.000      120   Kernel#rand
  0.52      0.000     0.000     0.000     0.000        4   Array#initialize
  0.51      0.000     0.000     0.000     0.000      180   Array#shift
  0.46      0.000     0.000     0.000     0.000      186   Array#empty?
  0.36      0.000     0.000     0.000     0.000       37   IO#write
  0.31      0.000     0.000     0.000     0.000        6   IO#set_encoding
  0.29      0.000     0.000     0.000     0.000        2   Kernel#respond_to?
  0.28      0.000     0.000     0.000     0.000        3   Kernel#inspect
  0.27      0.000     0.000     0.000     0.000        1   CompSci::CompleteQuaternaryTree#initialize
  0.24      0.000     0.000     0.000     0.000       28   Kernel#puts
  0.21      0.009     0.000     0.000     0.009        2   Global#[No method]
  0.16      0.000     0.000     0.000     0.000       28   IO#puts
  0.15      0.001     0.000     0.000     0.001        4  *Kernel#require
  0.14      0.000     0.000     0.000     0.000        7   Class#new
  0.11      0.007     0.000     0.000     0.007        6   CompSci::CompleteNaryTree#display
  0.10      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_enter
  0.08      0.007     0.000     0.000     0.007        6   Enumerable#each_with_index
  0.06      0.000     0.000     0.000     0.000       13   Module#method_added
  0.06      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.06      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_check_owner
  0.05      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.05      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.05      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.05      0.000     0.000     0.000     0.000        4   Class#inherited
  0.05      0.000     0.000     0.000     0.000        2   <Module::Gem>#find_unresolved_default_spec
  0.05      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.05      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_exit
  0.04      0.000     0.000     0.000     0.000        3   CompSci::CompleteNaryTree#initialize
  0.04      0.000     0.000     0.000     0.000        1   CompSci::CompleteTernaryTree#initialize
  0.04      0.000     0.000     0.000     0.000        1   CompSci::CompleteBinaryTree#initialize
  0.04      0.000     0.000     0.000     0.000        2   <Class::Gem::Specification>#unresolved_deps
  0.03      0.000     0.000     0.000     0.000        2   <Module::Gem>#suffixes
  0.02      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.02      0.000     0.000     0.000     0.000        1   Module#append_features
  0.01      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.01      0.000     0.000     0.000     0.000        2   Thread::Mutex#unlock
  0.01      0.000     0.000     0.000     0.000        2   Thread::Mutex#lock
  0.01      0.000     0.000     0.000     0.000        6   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/heap.rb -- 
#
# display the results of TernaryHeap push and pop
#

push: 38 53 51 77 15 39 91 55 95 6 85 28 56 77 67 63 78 90 95 65 30 18 4 96 19 17 33 63 60 14
array: [96, 95, 95, 85, 77, 90, 65, 91, 63, 60, 53, 28, 56, 15, 67, 63, 38, 77, 78, 39, 30, 18, 4, 51, 19, 17, 33, 55, 6, 14]
heap: true
                                       96                                       
            95                        95                        85            
   77      90      65      91      63      60      53      28      56   
15 67 63 38 77 78 39 30 18 4 51 19 17 33 55 6 14 


pop: 96
array: [95, 95, 91, 85, 77, 90, 65, 51, 63, 60, 53, 28, 56, 15, 67, 63, 38, 77, 78, 39, 30, 18, 4, 14, 19, 17, 33, 55, 6]
heap: true
                                       95                                       
            95                        91                        85            
   77      90      65      51      63      60      53      28      56   
15 67 63 38 77 78 39 30 18 4 14 19 17 33 55 6 


pop: 95 95 91 90 85 78 77 77 67
array: [65, 63, 63, 56, 30, 38, 39, 51, 55, 60, 53, 28, 17, 15, 14, 4, 19, 33, 6, 18]
heap: true
                                       65                                       
            63                        63                        56            
   30      38      39      51      55      60      53      28      17   
15 14 4 19 33 6 18 


push: 59 81 73 48 74 65 61 85 36 37 10 69 4 22 59 7 98 78 42 89 10 7 35 26 28 30 8 54 51 76
array: [98, 76, 81, 89, 54, 65, 63, 73, 74, 60, 56, 69, 85, 30, 30, 51, 38, 33, 6, 18, 39, 59, 51, 48, 63, 55, 61, 65, 36, 37, 10, 53, 4, 22, 28, 7, 59, 17, 42, 78, 10, 7, 15, 14, 26, 28, 4, 8, 35, 19]
heap: true
                                       98                                       
            76                        81                        89            
   54      65      63      73      74      60      56      69      85   
30 30 51 38 33 6 18 39 59 51 48 63 55 61 65 36 37 10 53 4 22 28 7 59 17 42 78 
10 7 15 14 26 28 4 8 35 19 

Measure Mode: wall_time
Thread ID: 46916002814980
Fiber ID: 46916002765560
Total: 0.010504
Sort by: self_time

 %self      total      self      wait     child     calls  name
  9.21      0.006     0.001     0.000     0.005      302  *Array#each
  6.48      0.002     0.001     0.000     0.001      129   Kernel#loop
  5.47      0.001     0.001     0.000     0.001      353   CompSci::Heap#heapish?
  4.73      0.001     0.000     0.000     0.000      560   <Class::CompSci::CompleteNaryTree>#parent_idx
  4.39      0.003     0.000     0.000     0.003      169  *Array#initialize
  3.77      0.000     0.000     0.000     0.000     1579   Integer#+
  2.46      0.000     0.000     0.000     0.000      952   Integer#<
  2.33      0.000     0.000     0.000     0.000      851   Integer#*
  2.33      0.000     0.000     0.000     0.000      482   BasicObject#!=
  2.21      0.000     0.000     0.000     0.000      818   Integer#/
  2.12      0.000     0.000     0.000     0.000      620   Integer#-
  1.99      0.000     0.000     0.000     0.000      870   Array#[]
  1.68      0.001     0.000     0.000     0.001      115  *CompSci::Heap#sift_up
  1.46      0.000     0.000     0.000     0.000      595   Array#length
  1.36      0.002     0.000     0.000     0.002      129   <Class::CompSci::CompleteNaryTree>#gen
  1.36      0.000     0.000     0.000     0.000      401   Kernel#class
  1.19      0.000     0.000     0.000     0.000      129   String#ljust
  1.15      0.003     0.000     0.000     0.003      170  *Class#new
  1.08      0.000     0.000     0.000     0.000      474   Integer#==
  1.06      0.001     0.000     0.000     0.001      166   <Class::CompSci::CompleteNaryTree>#children_idx
  1.05      0.000     0.000     0.000     0.000      327   Integer#to_s
  1.00      0.000     0.000     0.000     0.000      129   String#rjust
  0.90      0.001     0.000     0.000     0.001       60   CompSci::Heap#push
  0.89      0.000     0.000     0.000     0.000      353   Integer#<=>
  0.89      0.000     0.000     0.000     0.000      142   String#+
  0.69      0.000     0.000     0.000     0.000      258   String#size
  0.69      0.010     0.000     0.000     0.010        2   Global#[No method]
  0.65      0.000     0.000     0.000     0.000      164   Array#[]=
  0.58      0.001     0.000     0.000     0.001       37   CompSci::Heap#heapiest
  0.51      0.001     0.000     0.000     0.001       60   Kernel#tap
  0.47      0.000     0.000     0.000     0.000      143   BasicObject#!
  0.46      0.001     0.000     0.000     0.001       37  *CompSci::Heap#sift_down
  0.45      0.000     0.000     0.000     0.000      129   Integer#**
  0.44      0.000     0.000     0.000     0.000        4   Array#inspect
  0.44      0.000     0.000     0.000     0.000        3   Array#join
  0.41      0.000     0.000     0.000     0.000      129   Array#max
  0.38      0.000     0.000     0.000     0.000      125   Array#<<
  0.37      0.000     0.000     0.000     0.000       40   IO#write
  0.31      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.31      0.000     0.000     0.000     0.000       60   Kernel#rand
  0.30      0.000     0.000     0.000     0.000      115   Integer#<=
  0.29      0.001     0.000     0.000     0.001       10   CompSci::Heap#pop
  0.23      0.003     0.000     0.000     0.003       24   IO#puts
  0.22      0.000     0.000     0.000     0.000       60   Array#push
  0.21      0.003     0.000     0.000     0.003       24   Kernel#puts
  0.14      0.000     0.000     0.000     0.000       37   Array#first
  0.13      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.13      0.002     0.000     0.000     0.002      129  *CompSci::Heap#heap?
  0.12      0.000     0.000     0.000     0.000        4   String#%
  0.11      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.09      0.000     0.000     0.000     0.000       37   Integer#>=
  0.09      0.000     0.000     0.000     0.000        8   BasicObject#==
  0.08      0.003     0.000     0.000     0.003        4   Enumerable#each_with_index
  0.07      0.000     0.000     0.000     0.000       22   Module#method_added
  0.07      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.06      0.003     0.000     0.000     0.003        4   CompSci::CompleteNaryTree#display
  0.06      0.000     0.000     0.000     0.000       10   Array#unshift
  0.06      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.06      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.05      0.000     0.000     0.000     0.000        4   TrueClass#to_s
  0.05      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.05      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.05      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.04      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.04      0.000     0.000     0.000     0.000       10   Array#pop
  0.04      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.04      0.000     0.000     0.000     0.000        5   Class#inherited
  0.03      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.03      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.03      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.02      0.000     0.000     0.000     0.000       10   Array#shift
  0.02      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#initialize
  0.02      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.02      0.000     0.000     0.000     0.000        1   Module#append_features
  0.02      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.02      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.01      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/heap_push.rb -- 
#
# 3 seconds worth of pushes
#

10000th push: 0.00003628 s
20000th push: 0.00005149 s
30000th push: 0.00002150 s
40000th push: 0.00001475 s
50000th push: 0.00001296 s
60000th push: 0.00001335 s
70000th push: 0.00006051 s
80000th push: 0.00004061 s
90000th push: 0.00003994 s
100000th push: 0.00003070 s
-------------
    100k push: 2.82355728 s (35k push / s)

pushed 106336 items in 3.0 s

still a heap with 106337 items? YES - 1.489 sec

Measure Mode: wall_time
Thread ID: 46975548283900
Fiber ID: 46975548234740
Total: 4.491354
Sort by: self_time

 %self      total      self      wait     child     calls  name
 10.77      1.055     0.484     0.000     0.571   348230   CompSci::Heap#heapish?
  7.05      2.081     0.316     0.000     1.764   241903  *CompSci::Heap#sift_up
  5.60      3.000     0.251     0.000     2.749        1   Kernel#loop
  5.22      0.235     0.235     0.000     0.000   967592   Array#[]
  4.46      0.343     0.200     0.000     0.143   106337   Array#initialize
  4.35      0.316     0.195     0.000     0.120   241894   <Class::CompSci::CompleteNaryTree>#parent_idx
  3.55      2.330     0.159     0.000     2.171   106337   CompSci::Heap#push
  3.51      0.237     0.158     0.000     0.080   348230   BasicObject#!=
  3.24      0.145     0.145     0.000     0.000   560904   Integer#*
  2.63      0.118     0.118     0.000     0.000   531684   Integer#+
  2.39      0.107     0.107     0.000     0.000   454576   Integer#==
  2.12      0.095     0.095     0.000     0.000   348231   Kernel#class
  2.12      0.241     0.095     0.000     0.145   106349   <Module::CompSci::Timer>#since
  2.06      0.092     0.092     0.000     0.000   348231   Integer#-
  1.95      0.088     0.088     0.000     0.000   319012   Array#length
  1.74      0.078     0.078     0.000     0.000   348230   Integer#<=>
  1.56      0.115     0.070     0.000     0.045   106363   <Module::CompSci::Timer>#now
  1.51      0.068     0.068     0.000     0.000   271132   Array#[]=
  1.41      0.462     0.063     0.000     0.399   106337   <Class::CompSci::CompleteNaryTree>#children_idx
  1.38      0.062     0.062     0.000     0.000   241903   Integer#<=
  1.35      0.061     0.061     0.000     0.000   241894   BasicObject#!
  1.24      0.056     0.056     0.000     0.000   241894   Integer#/
  1.24      0.399     0.056     0.000     0.343   106338   Class#new
  1.15      0.052     0.052     0.000     0.000   212674   Integer#<
  1.10      0.049     0.049     0.000     0.000   106337   Kernel#rand
  1.00      0.045     0.045     0.000     0.000   106363   <Module::Process>#clock_gettime
  0.92      0.041     0.041     0.000     0.000   106336   Float#>
  0.68      0.031     0.031     0.000     0.000   106337   Array#push
  0.68      0.030     0.030     0.000     0.000   106349   Float#-
  0.67      0.030     0.030     0.000     0.000   106346   Integer#%
  0.66      0.030     0.030     0.000     0.000   106336   Array#<<
  0.01      0.000     0.000     0.000     0.000       13   String#%
  0.00      0.000     0.000     0.000     0.000       33   IO#write
  0.00      4.491     0.000     0.000     4.491        2   Global#[No method]
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      1.490     0.000     0.000     1.490       11   <Module::CompSci::Timer>#elapsed
  0.00      0.000     0.000     0.000     0.000       18   Kernel#puts
  0.00      1.489     0.000     0.000     1.489   212677  *Array#each
  0.00      0.000     0.000     0.000     0.000       18   IO#puts
  0.00      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.00      1.489     0.000     0.000     1.489   106337  *CompSci::Heap#heap?
  0.00      0.000     0.000     0.000     0.000       22   Module#method_added
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#size
  0.00      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.00      0.000     0.000     0.000     0.000        5   Class#inherited
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_f
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        1   Kernel#print
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_s
  0.00      0.000     0.000     0.000     0.000        1   Float#/
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.00      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/tree.rb -- 
#
# Try out Binary-, Ternary-, and QuaternaryTree
#

[29, 6, 54, 64, 73, 22, 55, 91, 31, 13, 84, 73, 73, 80, 59, 11, 28, 80, 79, 33, 87, 22, 53, 98, 46, 44, 54, 73, 89, 75]
#<CompSci::BinaryTree:0x005651dd949118 @root=#<CompSci::ChildNode:0x2b28eeca4864i @value=29 @children=[6, 54]>, @child_slots=2, @open_parent=#<CompSci::ChildNode:0x2b28eeca4a58i @value=59 @children=[75]>>
                                       29                                       
                    6                                      54                   
         64                  73                  22                  55         
    91        31        13        84        73        73        80        59    
  11   28   80   79   33   87   22   53   98   46   44   54   73   89   75 

df_search visited: 29 6 64 91 11 28 31 80 79 73 13 33 87 84 22 53 54 22 73 98 46 73 44 54 55 80 73 89 59 75


push: [87, 57, 58, 13, 15, 24, 56, 23, 92, 7, 92, 96, 88, 41, 30, 21, 69, 9, 3, 28, 22, 10, 43, 25, 80, 67, 57, 82, 80, 71]

                                       29                                       
                    6                                      54                   
         64                  73                  22                  55         
    91        31        13        84        73        73        80        59    
  11   28   80   79   33   87   22   53   98   46   44   54   73   89   75   87 
57 58 13 15 24 56 23 92 7 92 96 88 41 30 21 69 9 3 28 22 10 43 25 80 67 57 82 80 71 


[29, 6, 54, 64, 73, 22, 55, 91, 31, 13, 84, 73, 73, 80, 59, 11, 28, 80, 79, 33, 87, 22, 53, 98, 46, 44, 54, 73, 89, 75]
#<CompSci::TernaryTree:0x005651dd8a0e50 @root=#<CompSci::ChildNode:0x2b28eec50714i @value=29 @children=[6, 54, 64]>, @child_slots=3, @open_parent=#<CompSci::ChildNode:0x2b28eec502f0i @value=13 @children=[89, 75]>>
                                       29                                       
             6                        54                        64            
   73      22      55      91      31      13      84      73      73   
80 59 11 28 80 79 33 87 22 53 98 46 44 54 73 89 75 

df_search visited: 29 6 73 80 59 11 22 28 80 79 55 33 87 22 54 91 53 98 46 31 44 54 73 13 89 75 64 84 73 73


push: [27, 29, 16, 9, 43, 50, 65, 74, 48, 77, 97, 19, 74, 75, 98, 66, 93, 90, 6, 73, 72, 2, 56, 44, 45, 80, 53, 66, 10, 15]

                                       29                                       
             6                        54                        64            
   73      22      55      91      31      13      84      73      73   
80 59 11 28 80 79 33 87 22 53 98 46 44 54 73 89 75 27 29 16 9 43 50 65 74 48 77 
97 19 74 75 98 66 93 90 6 73 72 2 56 44 45 80 53 66 10 15 


[29, 6, 54, 64, 73, 22, 55, 91, 31, 13, 84, 73, 73, 80, 59, 11, 28, 80, 79, 33, 87, 22, 53, 98, 46, 44, 54, 73, 89, 75]
#<CompSci::QuaternaryTree:0x005651dd81bc50 @root=#<CompSci::ChildNode:0x2b28eec0de14i @value=29 @children=[6, 54, 64, 73]>, @child_slots=4, @open_parent=#<CompSci::ChildNode:0x2b28eec0da7ci @value=91 @children=[75]>>
                                       29                                       
          6                  54                  64                  73         
  22   55   91   31   13   84   73   73   80   59   11   28   80   79   33   87 
22 53 98 46 44 54 73 89 75 

df_search visited: 29 6 22 22 53 98 46 55 44 54 73 89 91 75 31 54 13 84 73 73 64 80 59 11 28 73 80 79 33 87


push: [62, 60, 83, 49, 8, 75, 39, 61, 74, 51, 59, 46, 30, 58, 34, 69, 10, 51, 70, 96, 82, 15, 8, 66, 66, 63, 78, 34, 21, 28]

                                       29                                       
          6                  54                  64                  73         
  22   55   91   31   13   84   73   73   80   59   11   28   80   79   33   87 
22 53 98 46 44 54 73 89 75 62 60 83 49 8 75 39 61 74 51 59 46 30 58 34 69 10 51 70 96 82 15 8 66 66 63 78 34 21 28 


Measure Mode: wall_time
Thread ID: 47454803565580
Fiber ID: 47454803523900
Total: 0.012872
Sort by: self_time

 %self      total      self      wait     child     calls  name
 20.92      0.007     0.003     0.000     0.004       32   CompSci::Tree#bf_search
  4.75      0.001     0.001     0.000     0.000      671   CompSci::NaryTree#open_parent?
  3.20      0.000     0.000     0.000     0.000      593   Array#+
  2.41      0.000     0.000     0.000     0.000      562   Integer#to_s
  2.31      0.001     0.000     0.000     0.000      177   CompSci::ChildNode#add_child
  2.29      0.003     0.000     0.000     0.002      177   CompSci::NaryTree#open_parent
  2.17      0.000     0.000     0.000     0.000     1100   Integer#+
  2.05      0.000     0.000     0.000     0.000      379   CompSci::Node#to_s
  2.03      0.000     0.000     0.000     0.000      799   Array#shift
  1.92      0.000     0.000     0.000     0.000      808   Array#empty?
  1.84      0.000     0.000     0.000     0.000      292   String#+
  1.63      0.000     0.000     0.000     0.000      270   String#ljust
  1.60      0.011     0.000     0.000     0.011      156  *Array#each
  1.58      0.001     0.000     0.000     0.001      177   CompSci::Node#new_child
  1.52      0.000     0.000     0.000     0.000      180   CompSci::ChildNode#initialize
  1.45      0.000     0.000     0.000     0.000      671   Integer#<
  1.41      0.000     0.000     0.000     0.000      180   CompSci::Node#initialize
  1.38      0.000     0.000     0.000     0.000      357   BasicObject#!=
  1.28      0.000     0.000     0.000     0.000      625   BasicObject#!
  1.21      0.000     0.000     0.000     0.000      540   String#size
  1.17      0.004     0.000     0.000     0.004      177   CompSci::NaryTree#push
  1.16      0.000     0.000     0.000     0.000      270   String#rjust
  1.14      0.001     0.000     0.000     0.000      650  *CompSci::ChildNode#gen
  1.10      0.001     0.000     0.000     0.001      187  *Class#new
  1.10      0.000     0.000     0.000     0.000      360   Integer#**
  1.07      0.000     0.000     0.000     0.000      671   Array#length
  1.05      0.000     0.000     0.000     0.000      177   CompSci::Node#add_child
  1.04      0.000     0.000     0.000     0.000      540   Integer#/
  0.79      0.000     0.000     0.000     0.000        6   Kernel#p
  0.78      0.000     0.000     0.000     0.000      267   Array#<<
  0.75      0.000     0.000     0.000     0.000      245   Kernel#respond_to?
  0.70      0.000     0.000     0.000     0.000       62   CompSci::NaryTree#open_sibling
  0.68      0.000     0.000     0.000     0.000      270   Array#max
  0.58      0.000     0.000     0.000     0.000        9   Array#join
  0.56      0.000     0.000     0.000     0.000        6   Array#inspect
  0.56      0.000     0.000     0.000     0.000        4   Array#initialize
  0.50      0.000     0.000     0.000     0.000      270   Integer#==
  0.49      0.000     0.000     0.000     0.000       90   <Module::Math>#log
  0.47      0.000     0.000     0.000     0.000      120   Kernel#rand
  0.46      0.000     0.000     0.000     0.000       62   Enumerable#find
  0.36      0.000     0.000     0.000     0.000      183   Kernel#class
  0.31      0.000     0.000     0.000     0.000      177   BasicObject#==
  0.29      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.28      0.000     0.000     0.000     0.000        3   Kernel#inspect
  0.27      0.000     0.000     0.000     0.000       90   Float#floor
  0.26      0.000     0.000     0.000     0.000       43   IO#write
  0.25      0.000     0.000     0.000     0.000        9   String#%
  0.23      0.000     0.000     0.000     0.000        6   Array#map
  0.21      0.013     0.000     0.000     0.013        2   Global#[No method]
  0.20      0.000     0.000     0.000     0.000       62   CompSci::ChildNode#siblings
  0.19      0.000     0.000     0.000     0.000       31   Kernel#puts
  0.14      0.000     0.000     0.000     0.000        6   CompSci::Node#inspect
  0.14      0.000     0.000     0.000     0.000       31   IO#puts
  0.14      0.000     0.000     0.000     0.000       34   Module#method_added
  0.10      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.10      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.09      0.004     0.000     0.000     0.004        4   CompSci::NaryTree#display
  0.08      0.000     0.000     0.000     0.000       90  *CompSci::Tree#df_search
  0.08      0.000     0.000     0.000     0.000        2   Module#attr_accessor
  0.07      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.07      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.06      0.000     0.000     0.000     0.000        6   Module#to_s
  0.05      0.000     0.000     0.000     0.000        7   Class#inherited
  0.05      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.05      0.002     0.000     0.000     0.002        2   CompSci::BinaryTree#display
  0.05      0.000     0.000     0.000     0.000        3   CompSci::Tree#initialize
  0.05      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.04      0.000     0.000     0.000     0.000        3   CompSci::NaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.03      0.000     0.000     0.000     0.000       11   Integer#>
  0.03      0.000     0.000     0.000     0.000        1   CompSci::BinaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        2   Module#alias_method
  0.03      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.03      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.02      0.000     0.000     0.000     0.000        6   Kernel#object_id
  0.02      0.000     0.000     0.000     0.000        1   Module#append_features
  0.02      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.02      0.000     0.000     0.000     0.000        1   CompSci::QuaternaryTree#initialize
  0.02      0.000     0.000     0.000     0.000        1   CompSci::TernaryTree#initialize
  0.02      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.02      0.000     0.000     0.000     0.000        4   BasicObject#singleton_method_added
  0.01      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.01      0.000     0.000     0.000     0.000        1   Module#included
  0.01      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.01      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.01      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/tree_push.rb -- 
#
# 3 seconds worth of pushes
#

100th push: 0.00004737 s
200th push: 0.00001635 s
300th push: 0.00001527 s
400th push: 0.00004511 s
500th push: 0.00001572 s
600th push: 0.00001727 s
700th push: 0.00001683 s
800th push: 0.00001811 s
900th push: 0.00001833 s
1000th push: 0.00001758 s
-----------
    1k push: 0.3569 s (2802 push / s)

1100th push: 0.00001706 s
1200th push: 0.00001653 s
1300th push: 0.00001497 s
1400th push: 0.00001728 s
1500th push: 0.00001732 s
1600th push: 0.00004760 s
1700th push: 0.00001749 s
1800th push: 0.00001811 s
1900th push: 0.00001757 s
2000th push: 0.00001858 s
-----------
    1k push: 1.0316 s (969 push / s)

2100th push: 0.00002463 s
2200th push: 0.00003527 s
2300th push: 0.00001884 s
2400th push: 0.00001913 s
2500th push: 0.00001927 s
2600th push: 0.00003378 s
2700th push: 0.00001967 s
2800th push: 0.00002042 s
2900th push: 0.00002200 s
pushed 2911 items in 3.0 s

#
# 30 inserts, puts, df_search
#

[48, 87, 92, 16, 60, 66, 76, 42, 18, 55, 20, 23, 13, 28, 87, 81, 67, 18, 21, 84, 69, 18, 64, 55, 16, 3, 49, 70, 45, 79]
                                       48                                       
                   87                                      92                   
         16                  60                  66                  76         
    42        18        55        20        23        13        28        87    
  81   67   18   21   84   69   18   64   55   16   3    49   70   45   79 
#<CompSci::BinaryTree:0x00556250f6b190 @root=#<CompSci::ChildNode:0x2ab1287b58b4i @value=48 @children=[87, 92]>, @child_slots=2, @open_parent=#<CompSci::ChildNode:0x2ab1287b50d0i @value=87 @children=[79]>>

visited 48
visited 87
visited 16
visited 42
visited 81
visited 67
visited 18
visited 18
visited 21
visited 60
visited 55
visited 84
visited 69
visited 20
visited 18
visited 64
visited 92
visited 66
visited 23
visited 55
visited 16
visited 13
visited 3
visited 49
visited 76
visited 28
visited 70
visited 45
visited 87
visited 79

push: [43, 66, 12, 18, 2, 75, 95, 22, 19, 83, 2, 16, 63, 38, 88, 17, 41, 85, 69, 63, 64, 35, 47, 46, 4, 33, 56, 49, 33, 1]
                                       48                                       
                   87                                      92                   
         16                  60                  66                  76         
    42        18        55        20        23        13        28        87    
  81   67   18   21   84   69   18   64   55   16   3    49   70   45   79   43 
66 12 18 2 75 95 22 19 83 2 16 63 38 88 17 41 85 69 63 64 35 47 46 4 33 56 49 33 1 

Measure Mode: wall_time
Thread ID: 46940376005640
Fiber ID: 46940375955480
Total: 3.008463
Sort by: self_time

 %self      total      self      wait     child     calls  name
 35.58      2.924     1.071     0.000     1.854      745   CompSci::Tree#bf_search
 18.83      0.567     0.567     0.000     0.000   530299   Array#+
 16.79      0.785     0.505     0.000     0.280   536886   CompSci::NaryTree#open_parent?
  7.78      0.234     0.234     0.000     0.000   531102   Array#shift
  4.68      0.141     0.141     0.000     0.000   536886   Integer#<
  4.65      0.140     0.140     0.000     0.000   536886   Array#length
  4.61      0.139     0.139     0.000     0.000   531044   BasicObject#!
  4.55      0.137     0.137     0.000     0.000   531105   Array#empty?
  0.31      3.002     0.009     0.000     2.992        1   Kernel#loop
  0.22      2.947     0.007     0.000     2.940     2970   CompSci::NaryTree#open_parent
  0.18      0.012     0.005     0.000     0.006     2970   CompSci::ChildNode#add_child
  0.14      0.007     0.004     0.000     0.003     2972   CompSci::ChildNode#initialize
  0.13      0.027     0.004     0.000     0.023     2970   CompSci::Node#new_child
  0.12      0.011     0.004     0.000     0.007     2976  *Class#new
  0.12      0.009     0.003     0.000     0.006     2943   <Module::CompSci::Timer>#since
  0.11      2.977     0.003     0.000     2.974     2970   CompSci::NaryTree#push
  0.10      0.007     0.003     0.000     0.005     1517  *Array#each
  0.09      0.003     0.003     0.000     0.000     2972   CompSci::Node#initialize
  0.08      0.013     0.003     0.000     0.011     1484   CompSci::NaryTree#open_sibling
  0.08      0.005     0.002     0.000     0.002     2976   <Module::CompSci::Timer>#now
  0.08      0.002     0.002     0.000     0.000     2972   Kernel#rand
  0.07      0.002     0.002     0.000     0.000     2976   <Module::Process>#clock_gettime
  0.07      0.004     0.002     0.000     0.001     2970   CompSci::Node#add_child
  0.06      0.003     0.002     0.000     0.001     2970   BasicObject#!=
  0.06      0.009     0.002     0.000     0.007     1484   Enumerable#find
  0.06      0.002     0.002     0.000     0.000     2911   Float#>
  0.05      0.001     0.001     0.000     0.000     2970   Array#<<
  0.04      0.001     0.001     0.000     0.000     2943   Float#-
  0.03      0.001     0.001     0.000     0.000     2940   Integer#%
  0.03      0.001     0.001     0.000     0.000     3181   Integer#+
  0.03      0.001     0.001     0.000     0.000     2972   Kernel#class
  0.03      0.001     0.001     0.000     0.000     3030   Integer#==
  0.03      0.001     0.001     0.000     0.000     1484   CompSci::ChildNode#siblings
  0.03      0.001     0.001     0.000     0.000     2970   BasicObject#==
  0.02      0.001     0.001     0.000     0.000       34   String#%
  0.02      0.001     0.001     0.000     0.000     1487   Kernel#respond_to?
  0.00      0.000     0.000     0.000     0.000      142   IO#write
  0.00      0.001     0.000     0.000     0.001       29   <Module::CompSci::Timer>#elapsed
  0.00      0.000     0.000     0.000     0.000        2   Array#initialize
  0.00      3.008     0.000     0.000     3.008        2   Global#[No method]
  0.00      0.000     0.000     0.000     0.000      186   Integer#to_s
  0.00      0.000     0.000     0.000     0.000      125   CompSci::Node#to_s
  0.00      0.002     0.000     0.000     0.002       75   IO#puts
  0.00      0.002     0.000     0.000     0.002       75   Kernel#puts
  0.00      0.000     0.000     0.000     0.000       90   <Module::Math>#log
  0.00      0.000     0.000     0.000     0.000       99   String#+
  0.00      0.000     0.000     0.000     0.000      180   Integer#/
  0.00      0.000     0.000     0.000     0.000       90   String#ljust
  0.00      0.000     0.000     0.000     0.000      180   Integer#**
  0.00      0.000     0.000     0.000     0.000        2   Kernel#p
  0.00      0.000     0.000     0.000     0.000       90   String#rjust
  0.00      0.000     0.000     0.000     0.000      180   String#size
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.000     0.000     0.000     0.000       90   Float#floor
  0.00      0.000     0.000     0.000     0.000        2   Array#inspect
  0.00      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000       90   Array#max
  0.00      0.000     0.000     0.000     0.000        1   Kernel#inspect
  0.00      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.000     0.000     0.000     0.000        2   Module#attr_accessor
  0.00      0.000     0.000     0.000     0.000       34   Module#method_added
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000        2   CompSci::Tree#initialize
  0.00      0.000     0.000     0.000     0.000        2   CompSci::BinaryTree#initialize
  0.00      0.000     0.000     0.000     0.000       30  *CompSci::Tree#df_search
  0.00      0.000     0.000     0.000     0.000        2   Module#to_s
  0.00      0.000     0.000     0.000     0.000        2   CompSci::Node#inspect
  0.00      0.002     0.000     0.000     0.002        2   CompSci::BinaryTree#display
  0.00      0.000     0.000     0.000     0.000        2   Integer#to_f
  0.00      0.000     0.000     0.000     0.000        7   Class#inherited
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        2   Array#join
  0.00      0.000     0.000     0.000     0.000        2   Array#map
  0.00      0.000     0.000     0.000     0.000        2   CompSci::NaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000        4   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        2   Module#alias_method
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        2   Float#/
  0.00      0.000     0.000     0.000     0.000        2   Kernel#object_id
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000       11   Integer#>
  0.00      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
