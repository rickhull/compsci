RUBYLIB=lib ruby-prof  examples/complete_tree.rb -- 
/proc/loadavg 0.64 0.23 0.09 1/84 3059
#
# Print CompleteBinary-, Ternary-, and QuaternaryTree
#

[33, 23, 44, 31, 34, 77, 89, 92, 82, 75, 79, 33, 29, 15, 58, 56, 13, 12, 48, 50, 68, 50, 63, 23, 34, 95, 31, 63, 89, 58]
#<CompSci::CompleteBinaryTree:0x0056006cb52ff8 @array=[33, 23, 44, 31, 34, 77, 89, 92, 82, 75, 79, 33, 29, 15, 58, 56, 13, 12, 48, 50, 68, 50, 63, 23, 34, 95, 31, 63, 89, 58], @child_slots=2>
                                       33                                       
                   23                                      44                   
         31                  34                  77                  89         
    92        82        75        79        33        29        15        58    
  56   13   12   48   50   68   50   63   23   34   95   31   63   89   58 



push: [95, 45, 67, 74, 37, 87, 98, 19, 0, 84, 79, 33, 19, 86, 42, 23, 89, 27, 42, 60, 26, 34, 50, 81, 82, 38, 34, 79, 10, 56]
                                       33                                       
                   23                                      44                   
         31                  34                  77                  89         
    92        82        75        79        33        29        15        58    
  56   13   12   48   50   68   50   63   23   34   95   31   63   89   58   95 
45 67 74 37 87 98 19 0 84 79 33 19 86 42 23 89 27 42 60 26 34 50 81 82 38 34 79 10 56 



[33, 23, 44, 31, 34, 77, 89, 92, 82, 75, 79, 33, 29, 15, 58, 56, 13, 12, 48, 50, 68, 50, 63, 23, 34, 95, 31, 63, 89, 58]
#<CompSci::CompleteTernaryTree:0x0056006cb223f8 @array=[33, 23, 44, 31, 34, 77, 89, 92, 82, 75, 79, 33, 29, 15, 58, 56, 13, 12, 48, 50, 68, 50, 63, 23, 34, 95, 31, 63, 89, 58], @child_slots=3>
                                       33                                       
            23                        44                        31            
   34      77      89      92      82      75      79      33      29   
15 58 56 13 12 48 50 68 50 63 23 34 95 31 63 89 58 



push: [83, 47, 34, 62, 17, 4, 30, 90, 70, 84, 75, 95, 51, 98, 89, 70, 77, 10, 55, 53, 10, 98, 83, 66, 44, 15, 71, 9, 68, 74]
                                       33                                       
            23                        44                        31            
   34      77      89      92      82      75      79      33      29   
15 58 56 13 12 48 50 68 50 63 23 34 95 31 63 89 58 83 47 34 62 17 4 30 90 70 84 
75 95 51 98 89 70 77 10 55 53 10 98 83 66 44 15 71 9 68 74 



[33, 23, 44, 31, 34, 77, 89, 92, 82, 75, 79, 33, 29, 15, 58, 56, 13, 12, 48, 50, 68, 50, 63, 23, 34, 95, 31, 63, 89, 58]
#<CompSci::CompleteQuaternaryTree:0x0056006ca8b2a0 @array=[33, 23, 44, 31, 34, 77, 89, 92, 82, 75, 79, 33, 29, 15, 58, 56, 13, 12, 48, 50, 68, 50, 63, 23, 34, 95, 31, 63, 89, 58], @child_slots=4>
                                       33                                       
         23                  44                  31                  34         
  77   89   92   82   75   79   33   29   15   58   56   13   12   48   50   68 
50 63 23 34 95 31 63 89 58 



push: [65, 57, 80, 71, 31, 67, 71, 70, 27, 46, 62, 67, 48, 48, 29, 82, 79, 25, 94, 81, 43, 28, 4, 63, 83, 53, 10, 54, 30, 24]
                                       33                                       
         23                  44                  31                  34         
  77   89   92   82   75   79   33   29   15   58   56   13   12   48   50   68 
50 63 23 34 95 31 63 89 58 65 57 80 71 31 67 71 70 27 46 62 67 48 48 29 82 79 25 94 81 43 28 4 63 83 53 10 54 30 24 



Measure Mode: wall_time
Thread ID: 47279910460420
Fiber ID: 47279910410700
Total: 0.008320
Sort by: self_time

 %self      total      self      wait     child     calls  name
 16.02      0.003     0.001     0.000     0.002      270   Kernel#loop
  9.57      0.001     0.001     0.000     0.001     1077   <Class::CompSci::CompleteNaryTree>#parent_idx
  4.76      0.000     0.000     0.000     0.000     1617   Integer#/
  3.55      0.000     0.000     0.000     0.000     1347   Integer#+
  3.00      0.000     0.000     0.000     0.000     1077   Integer#<
  2.99      0.000     0.000     0.000     0.000     1077   Integer#-
  2.94      0.003     0.000     0.000     0.003      270   <Class::CompSci::CompleteNaryTree>#gen
  2.80      0.000     0.000     0.000     0.000      543   Integer#to_s
  2.73      0.000     0.000     0.000     0.000      292   String#+
  1.99      0.000     0.000     0.000     0.000      270   String#rjust
  1.73      0.007     0.000     0.000     0.007        9  *Array#each
  1.68      0.000     0.000     0.000     0.000      540   String#size
  1.63      0.000     0.000     0.000     0.000      270   String#ljust
  1.44      0.000     0.000     0.000     0.000        9   Array#inspect
  1.32      0.000     0.000     0.000     0.000      270   BasicObject#!=
  1.30      0.000     0.000     0.000     0.000      180   CompSci::CompleteNaryTree#push
  1.03      0.000     0.000     0.000     0.000      270   Array#max
  0.91      0.000     0.000     0.000     0.000      270   Integer#==
  0.84      0.000     0.000     0.000     0.000        6   Kernel#p
  0.82      0.000     0.000     0.000     0.000      270   Integer#**
  0.81      0.000     0.000     0.000     0.000      270   Kernel#class
  0.74      0.000     0.000     0.000     0.000        4   Array#initialize
  0.67      0.000     0.000     0.000     0.000      120   Kernel#rand
  0.56      0.000     0.000     0.000     0.000      180   Array#shift
  0.51      0.000     0.000     0.000     0.000       28   Kernel#puts
  0.49      0.000     0.000     0.000     0.000      180   Array#push
  0.44      0.000     0.000     0.000     0.000      186   Array#empty?
  0.40      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.38      0.000     0.000     0.000     0.000       37   IO#write
  0.35      0.000     0.000     0.000     0.000        6   IO#set_encoding
  0.31      0.000     0.000     0.000     0.000       28   IO#puts
  0.27      0.000     0.000     0.000     0.000        3   Kernel#inspect
  0.26      0.008     0.000     0.000     0.008        2   Global#[No method]
  0.19      0.001     0.000     0.000     0.001        4  *Kernel#require
  0.15      0.006     0.000     0.000     0.006        6   CompSci::CompleteNaryTree#display
  0.12      0.006     0.000     0.000     0.006        6   Enumerable#each_with_index
  0.12      0.000     0.000     0.000     0.000        7   Class#new
  0.10      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_enter
  0.07      0.000     0.000     0.000     0.000        3   CompSci::CompleteNaryTree#initialize
  0.07      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.06      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.06      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_exit
  0.05      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.05      0.000     0.000     0.000     0.000        1   CompSci::CompleteQuaternaryTree#initialize
  0.05      0.000     0.000     0.000     0.000       13   Module#method_added
  0.04      0.000     0.000     0.000     0.000        1   CompSci::CompleteBinaryTree#initialize
  0.04      0.000     0.000     0.000     0.000        1   Module#append_features
  0.04      0.000     0.000     0.000     0.000        2   <Module::Gem>#suffixes
  0.04      0.000     0.000     0.000     0.000        6   <Class::Thread>#current
  0.03      0.000     0.000     0.000     0.000        1   CompSci::CompleteTernaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.03      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_check_owner
  0.03      0.000     0.000     0.000     0.000        2   <Module::Gem>#find_unresolved_default_spec
  0.03      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.03      0.000     0.000     0.000     0.000        2   Kernel#respond_to?
  0.02      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.02      0.000     0.000     0.000     0.000        4   Class#inherited
  0.02      0.000     0.000     0.000     0.000        2   <Class::Gem::Specification>#unresolved_deps
  0.01      0.000     0.000     0.000     0.000        1   Module#included
  0.01      0.000     0.000     0.000     0.000        2   Thread::Mutex#unlock
  0.01      0.000     0.000     0.000     0.000        2   Thread::Mutex#lock

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/heap.rb -- 
RUBYLIB=lib ruby-prof  examples/heap_push.rb -- 
#
# 3 seconds worth of pushes
#

10000th push: 0.00006000 s
20000th push: 0.00003045 s
30000th push: 0.00010289 s
40000th push: 0.00003037 s
50000th push: 0.00002573 s
60000th push: 0.00001239 s
70000th push: 0.00001245 s
80000th push: 0.00002152 s
90000th push: 0.00002140 s
100000th push: 0.00003052 s
-------------
    100k push: 2.74571293 s (36k push / s)

pushed 109275 items in 3.0 s

still a heap with 109276 items? YES - 1.503 sec

Measure Mode: wall_time
Thread ID: 47311046278160
Fiber ID: 47311046228660
Total: 4.504721
Sort by: self_time

 %self      total      self      wait     child     calls  name
 10.84      1.063     0.488     0.000     0.574   357449   CompSci::Heap#heapish?
  7.06      2.086     0.318     0.000     1.768   248188  *CompSci::Heap#sift_up
  5.62      3.000     0.253     0.000     2.747        1   Kernel#loop
  5.03      0.227     0.227     0.000     0.000   992722   Array#[]
  4.57      0.352     0.206     0.000     0.146   109276   Array#initialize
  4.32      0.315     0.195     0.000     0.121   248174   <Class::CompSci::CompleteNaryTree>#parent_idx
  3.47      0.245     0.156     0.000     0.089   357449   BasicObject#!=
  3.47      2.329     0.156     0.000     2.173   109276   CompSci::Heap#push
  3.26      0.147     0.147     0.000     0.000   576001   Integer#*
  2.60      0.117     0.117     0.000     0.000   546379   Integer#+
  2.52      0.114     0.114     0.000     0.000   466734   Integer#==
  2.15      0.247     0.097     0.000     0.151   109288   <Module::CompSci::Timer>#since
  2.05      0.092     0.092     0.000     0.000   357450   Integer#-
  1.97      0.089     0.089     0.000     0.000   357450   Kernel#class
  1.77      0.080     0.080     0.000     0.000   327829   Array#length
  1.76      0.079     0.079     0.000     0.000   357449   Integer#<=>
  1.53      0.069     0.069     0.000     0.000   277824   Array#[]=
  1.52      0.117     0.069     0.000     0.048   109302   <Module::CompSci::Timer>#now
  1.47      0.471     0.066     0.000     0.405   109276   <Class::CompSci::CompleteNaryTree>#children_idx
  1.45      0.065     0.065     0.000     0.000   248188   Integer#<=
  1.42      0.064     0.064     0.000     0.000   248174   BasicObject#!
  1.24      0.056     0.056     0.000     0.000   248174   Integer#/
  1.18      0.405     0.053     0.000     0.352   109277   Class#new
  1.16      0.052     0.052     0.000     0.000   218552   Integer#<
  1.07      0.048     0.048     0.000     0.000   109302   <Module::Process>#clock_gettime
  1.06      0.048     0.048     0.000     0.000   109276   Kernel#rand
  0.92      0.041     0.041     0.000     0.000   109275   Float#>
  0.75      0.034     0.034     0.000     0.000   109288   Float#-
  0.72      0.032     0.032     0.000     0.000   109276   Array#push
  0.64      0.029     0.029     0.000     0.000   109285   Integer#%
  0.63      0.028     0.028     0.000     0.000   109275   Array#<<
  0.00      0.000     0.000     0.000     0.000       13   String#%
  0.00      0.000     0.000     0.000     0.000       33   IO#write
  0.00      4.505     0.000     0.000     4.505        2   Global#[No method]
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_f
  0.00      1.503     0.000     0.000     1.503       11   <Module::CompSci::Timer>#elapsed
  0.00      1.503     0.000     0.000     1.503   218555  *Array#each
  0.00      0.000     0.000     0.000     0.000       18   IO#puts
  0.00      0.000     0.000     0.000     0.000       18   Kernel#puts
  0.00      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.000     0.000     0.000     0.000       22   Module#method_added
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      1.503     0.000     0.000     1.503   109276  *CompSci::Heap#heap?
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#size
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        5   Class#inherited
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_s
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000        1   Float#/
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteNaryTree#initialize
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.00      0.000     0.000     0.000     0.000        1   Kernel#print
  0.00      0.000     0.000     0.000     0.000        1   Module#included
  0.00      0.000     0.000     0.000     0.000        1   Module#alias_method

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/tree.rb -- 
#
# Try out Binary-, Ternary-, and QuaternaryTree
#

[84, 92, 41, 47, 86, 44, 12, 36, 69, 7, 78, 4, 1, 22, 95, 86, 41, 69, 67, 47, 60, 22, 85, 90, 86, 27, 29, 11, 67, 56]
#<CompSci::BinaryTree:0x0055cbdc677840 @root=#<CompSci::ChildFlexNode:0x2ae5ee33bbe4i @value=84 @children=[92, 41]>, @child_slots=2, @open_parent=#<CompSci::ChildFlexNode:0x2ae5ee33b130i @value=95 @children=[56]>>
                                       84                                       
                   92                                      41                   
         47                  86                  44                  12         
    36        69         7        78         4         1        22        95    
  86   41   69   67   47   60   22   85   90   86   27   29   11   67   56 

df_search visited: 84 92 47 36 86 41 69 69 67 86 7 47 60 78 22 85 41 44 4 90 86 1 27 29 12 22 11 67 95 56


push: [63, 93, 18, 73, 64, 16, 72, 27, 18, 39, 57, 59, 40, 95, 56, 50, 93, 17, 97, 33, 24, 13, 59, 57, 68, 67, 18, 92, 38, 92]

                                       84                                       
                   92                                      41                   
         47                  86                  44                  12         
    36        69         7        78         4         1        22        95    
  86   41   69   67   47   60   22   85   90   86   27   29   11   67   56   63 
93 18 73 64 16 72 27 18 39 57 59 40 95 56 50 93 17 97 33 24 13 59 57 68 67 18 92 38 92 


[84, 92, 41, 47, 86, 44, 12, 36, 69, 7, 78, 4, 1, 22, 95, 86, 41, 69, 67, 47, 60, 22, 85, 90, 86, 27, 29, 11, 67, 56]
#<CompSci::TernaryTree:0x0055cbdc5ef120 @root=#<CompSci::ChildFlexNode:0x2ae5ee2f7854i @value=84 @children=[92, 41, 47]>, @child_slots=3, @open_parent=#<CompSci::ChildFlexNode:0x2ae5ee2f7444i @value=7 @children=[67, 56]>>
                                       84                                       
            92                        41                        47            
   86      44      12      36      69       7      78       4       1   
22 95 86 41 69 67 47 60 22 85 90 86 27 29 11 67 56 

df_search visited: 84 92 86 22 95 86 44 41 69 67 12 47 60 22 41 36 85 90 86 69 27 29 11 7 67 56 47 78 4 1


push: [42, 48, 23, 11, 14, 30, 21, 41, 39, 80, 5, 0, 85, 21, 71, 49, 4, 80, 14, 47, 80, 52, 55, 26, 18, 52, 13, 8, 30, 70]

                                       84                                       
            92                        41                        47            
   86      44      12      36      69       7      78       4       1   
22 95 86 41 69 67 47 60 22 85 90 86 27 29 11 67 56 42 48 23 11 14 30 21 41 39 80 
5 0 85 21 71 49 4 80 14 47 80 52 55 26 18 52 13 8 30 70 


[84, 92, 41, 47, 86, 44, 12, 36, 69, 7, 78, 4, 1, 22, 95, 86, 41, 69, 67, 47, 60, 22, 85, 90, 86, 27, 29, 11, 67, 56]
#<CompSci::QuaternaryTree:0x0055cbdc56cb58 @root=#<CompSci::ChildFlexNode:0x2ae5ee2b6598i @value=84 @children=[92, 41, 47, 86]>, @child_slots=4, @open_parent=#<CompSci::ChildFlexNode:0x2ae5ee2b6174i @value=36 @children=[56]>>
                                       84                                       
         92                  41                  47                  86         
  44   12   36   69   7    78   4    1    22   95   86   41   69   67   47   60 
22 85 90 86 27 29 11 67 56 

df_search visited: 84 92 44 22 85 90 86 12 27 29 11 67 36 56 69 41 7 78 4 1 47 22 95 86 41 86 69 67 47 60


push: [54, 41, 63, 1, 26, 11, 12, 59, 29, 6, 54, 45, 51, 17, 7, 25, 46, 65, 58, 54, 57, 49, 28, 21, 51, 2, 14, 31, 66, 92]

                                       84                                       
         92                  41                  47                  86         
  44   12   36   69   7    78   4    1    22   95   86   41   69   67   47   60 
22 85 90 86 27 29 11 67 56 54 41 63 1 26 11 12 59 29 6 54 45 51 17 7 25 46 65 58 54 57 49 28 21 51 2 14 31 66 92 


Measure Mode: wall_time
Thread ID: 47167030983700
Fiber ID: 47167030934160
Total: 0.011688
Sort by: self_time

 %self      total      self      wait     child     calls  name
 21.81      0.006     0.003     0.000     0.004       32   CompSci::Tree#bf_search
  5.14      0.001     0.001     0.000     0.000      671   CompSci::NaryTree#open_parent?
  3.02      0.000     0.000     0.000     0.000      593   Array#+
  2.46      0.000     0.000     0.000     0.000     1100   Integer#+
  2.35      0.000     0.000     0.000     0.000      292   String#+
  2.32      0.000     0.000     0.000     0.000      379   CompSci::Node#to_s
  2.05      0.000     0.000     0.000     0.000      799   Array#shift
  2.03      0.000     0.000     0.000     0.000      177   CompSci::ChildFlexNode#add_child
  1.96      0.000     0.000     0.000     0.000      562   Integer#to_s
  1.96      0.000     0.000     0.000     0.000      808   Array#empty?
  1.92      0.002     0.000     0.000     0.002      177   CompSci::NaryTree#open_parent
  1.70      0.000     0.000     0.000     0.000      180   CompSci::Node#initialize
  1.66      0.001     0.000     0.000     0.001      177   CompSci::ChildFlexNode#new_child
  1.64      0.000     0.000     0.000     0.000      357   BasicObject#!=
  1.61      0.010     0.000     0.000     0.010      156  *Array#each
  1.48      0.000     0.000     0.000     0.000      180   CompSci::ChildNode#initialize
  1.46      0.001     0.000     0.000     0.001      187  *Class#new
  1.41      0.000     0.000     0.000     0.000      270   String#ljust
  1.29      0.004     0.000     0.000     0.004      177   CompSci::NaryTree#push
  1.29      0.000     0.000     0.000     0.000      540   Integer#/
  1.26      0.000     0.000     0.000     0.000      671   Integer#<
  1.18      0.000     0.000     0.000     0.000      540   String#size
  1.16      0.001     0.000     0.000     0.000      650  *CompSci::ChildNode#gen
  1.16      0.000     0.000     0.000     0.000      671   Array#length
  1.10      0.000     0.000     0.000     0.000      625   BasicObject#!
  1.08      0.000     0.000     0.000     0.000      270   String#rjust
  1.04      0.000     0.000     0.000     0.000      267   Array#<<
  0.86      0.000     0.000     0.000     0.000      360   Integer#**
  0.85      0.000     0.000     0.000     0.000        6   Kernel#p
  0.79      0.000     0.000     0.000     0.000        6   Array#inspect
  0.75      0.000     0.000     0.000     0.000      270   Array#max
  0.68      0.000     0.000     0.000     0.000       62   CompSci::NaryTree#open_sibling
  0.64      0.000     0.000     0.000     0.000      270   Integer#==
  0.62      0.000     0.000     0.000     0.000      245   Kernel#respond_to?
  0.59      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.55      0.000     0.000     0.000     0.000        9   Array#join
  0.52      0.000     0.000     0.000     0.000       90   <Module::Math>#log
  0.44      0.000     0.000     0.000     0.000      183   Kernel#class
  0.42      0.000     0.000     0.000     0.000        4   Array#initialize
  0.42      0.000     0.000     0.000     0.000      180   Kernel#is_a?
  0.36      0.000     0.000     0.000     0.000      120   Kernel#rand
  0.32      0.000     0.000     0.000     0.000      177   BasicObject#==
  0.29      0.000     0.000     0.000     0.000        3   Kernel#inspect
  0.27      0.000     0.000     0.000     0.000       62   CompSci::ChildNode#siblings
  0.25      0.000     0.000     0.000     0.000        9   String#%
  0.25      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.24      0.000     0.000     0.000     0.000       62   Enumerable#find
  0.24      0.000     0.000     0.000     0.000       90   Float#floor
  0.21      0.000     0.000     0.000     0.000        6   Module#to_s
  0.21      0.000     0.000     0.000     0.000       43   IO#write
  0.19      0.000     0.000     0.000     0.000       31   Kernel#puts
  0.18      0.000     0.000     0.000     0.000       31   IO#puts
  0.17      0.012     0.000     0.000     0.012        2   Global#[No method]
  0.16      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.14      0.000     0.000     0.000     0.000        6   CompSci::Node#inspect
  0.13      0.000     0.000     0.000     0.000        6   Array#map
  0.13      0.000     0.000     0.000     0.000       38   Module#method_added
  0.12      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.11      0.003     0.000     0.000     0.003        4   CompSci::NaryTree#display
  0.08      0.001     0.000     0.000     0.001        2   CompSci::BinaryTree#display
  0.07      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.06      0.000     0.000     0.000     0.000       90  *CompSci::Tree#df_search
  0.06      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.06      0.000     0.000     0.000     0.000        2   Module#attr_accessor
  0.05      0.000     0.000     0.000     0.000        3   CompSci::NaryTree#initialize
  0.04      0.000     0.000     0.000     0.000       11   Integer#>
  0.04      0.000     0.000     0.000     0.000        9   Class#inherited
  0.04      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.03      0.000     0.000     0.000     0.000        3   CompSci::Tree#initialize
  0.03      0.000     0.000     0.000     0.000        2   Module#alias_method
  0.03      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.03      0.000     0.000     0.000     0.000        5   BasicObject#singleton_method_added
  0.03      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.03      0.000     0.000     0.000     0.000        1   CompSci::QuaternaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        1   CompSci::TernaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.03      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.03      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.02      0.000     0.000     0.000     0.000        1   Module#append_features
  0.02      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.02      0.000     0.000     0.000     0.000        1   CompSci::BinaryTree#initialize
  0.02      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.01      0.000     0.000     0.000     0.000        6   Kernel#object_id
  0.01      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.01      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/tree_push.rb -- 
#
# 3 seconds worth of pushes
#

100th push: 0.00002070 s
200th push: 0.00001416 s
300th push: 0.00001539 s
400th push: 0.00001425 s
500th push: 0.00001440 s
600th push: 0.00001467 s
700th push: 0.00001528 s
800th push: 0.00001515 s
900th push: 0.00001523 s
1000th push: 0.00001532 s
-----------
    1k push: 0.3270 s (3057 push / s)

1100th push: 0.00001500 s
1200th push: 0.00001558 s
1300th push: 0.00001540 s
1400th push: 0.00001552 s
1500th push: 0.00001697 s
1600th push: 0.00001594 s
1700th push: 0.00001578 s
1800th push: 0.00001727 s
1900th push: 0.00001600 s
2000th push: 0.00001636 s
-----------
    1k push: 0.9790 s (1021 push / s)

2100th push: 0.00001674 s
2200th push: 0.00001817 s
2300th push: 0.00001752 s
2400th push: 0.00001850 s
2500th push: 0.00001792 s
2600th push: 0.00001814 s
2700th push: 0.00001834 s
2800th push: 0.00001919 s
2900th push: 0.00001876 s
pushed 2975 items in 3.0 s

#
# 30 inserts, puts, df_search
#

[81, 84, 79, 52, 53, 20, 96, 45, 38, 41, 44, 96, 38, 65, 15, 33, 64, 92, 43, 64, 26, 43, 38, 3, 18, 42, 72, 98, 35, 39]
                                       81                                       
                   84                                      79                   
         52                  53                  20                  96         
    45        38        41        44        96        38        65        15    
  33   64   92   43   64   26   43   38   3    18   42   72   98   35   39 
#<CompSci::BinaryTree:0x0055eab6b8ba18 @root=#<CompSci::ChildFlexNode:0x2af55b5c5ce4i @value=81 @children=[84, 79]>, @child_slots=2, @open_parent=#<CompSci::ChildFlexNode:0x2af55b5c4b78i @value=15 @children=[39]>>
