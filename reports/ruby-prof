RUBYLIB=lib ruby-prof  examples/complete_tree.rb -- 
/proc/loadavg 0.77 0.22 0.08 1/95 4407
#
# Print CompleteBinary-, Ternary-, and QuaternaryTree
#

[98, 61, 75, 77, 48, 20, 52, 39, 2, 26, 12, 68, 50, 41, 62, 60, 33, 65, 66, 0, 94, 62, 34, 18, 93, 48, 98, 25, 59, 60]
#<CompSci::CompleteBinaryTree:0x0055e931640a08 @array=[98, 61, 75, 77, 48, 20, 52, 39, 2, 26, 12, 68, 50, 41, 62, 60, 33, 65, 66, 0, 94, 62, 34, 18, 93, 48, 98, 25, 59, 60], @child_slots=2>
                                       98                                       
                   61                                      75                   
         77                  48                  20                  52         
    39         2        26        12        68        50        41        62    
  60   33   65   66   0    94   62   34   18   93   48   98   25   59   60 



push: [2, 42, 10, 28, 23, 49, 84, 92, 21, 37, 98, 65, 35, 28, 79, 40, 69, 19, 84, 37, 69, 69, 1, 49, 93, 25, 18, 54, 76, 97]
                                       98                                       
                   61                                      75                   
         77                  48                  20                  52         
    39         2        26        12        68        50        41        62    
  60   33   65   66   0    94   62   34   18   93   48   98   25   59   60   2  
42 10 28 23 49 84 92 21 37 98 65 35 28 79 40 69 19 84 37 69 69 1 49 93 25 18 54 76 97 



[98, 61, 75, 77, 48, 20, 52, 39, 2, 26, 12, 68, 50, 41, 62, 60, 33, 65, 66, 0, 94, 62, 34, 18, 93, 48, 98, 25, 59, 60]
#<CompSci::CompleteTernaryTree:0x0055e9315e9528 @array=[98, 61, 75, 77, 48, 20, 52, 39, 2, 26, 12, 68, 50, 41, 62, 60, 33, 65, 66, 0, 94, 62, 34, 18, 93, 48, 98, 25, 59, 60], @child_slots=3>
                                       98                                       
            61                        75                        77            
   48      20      52      39       2      26      12      68      50   
41 62 60 33 65 66 0 94 62 34 18 93 48 98 25 59 60 



push: [39, 90, 79, 98, 18, 37, 58, 49, 88, 91, 88, 2, 55, 34, 72, 26, 97, 5, 12, 94, 72, 76, 32, 8, 72, 58, 10, 67, 60, 59]
                                       98                                       
            61                        75                        77            
   48      20      52      39       2      26      12      68      50   
41 62 60 33 65 66 0 94 62 34 18 93 48 98 25 59 60 39 90 79 98 18 37 58 49 88 91 
88 2 55 34 72 26 97 5 12 94 72 76 32 8 72 58 10 67 60 59 



[98, 61, 75, 77, 48, 20, 52, 39, 2, 26, 12, 68, 50, 41, 62, 60, 33, 65, 66, 0, 94, 62, 34, 18, 93, 48, 98, 25, 59, 60]
#<CompSci::CompleteQuaternaryTree:0x0055e931573698 @array=[98, 61, 75, 77, 48, 20, 52, 39, 2, 26, 12, 68, 50, 41, 62, 60, 33, 65, 66, 0, 94, 62, 34, 18, 93, 48, 98, 25, 59, 60], @child_slots=4>
                                       98                                       
         61                  75                  77                  48         
  20   52   39   2    26   12   68   50   41   62   60   33   65   66   0    94 
62 34 18 93 48 98 25 59 60 



push: [8, 69, 66, 69, 46, 14, 91, 89, 72, 34, 9, 3, 44, 62, 38, 24, 77, 41, 23, 86, 74, 8, 75, 25, 47, 21, 62, 17, 75, 56]
                                       98                                       
         61                  75                  77                  48         
  20   52   39   2    26   12   68   50   41   62   60   33   65   66   0    94 
62 34 18 93 48 98 25 59 60 8 69 66 69 46 14 91 89 72 34 9 3 44 62 38 24 77 41 23 86 74 8 75 25 47 21 62 17 75 56 



Measure Mode: wall_time
Thread ID: 47230020746240
Fiber ID: 47230020683940
Total: 0.008452
Sort by: self_time

 %self      total      self      wait     child     calls  name
 17.23      0.003     0.001     0.000     0.002      270   Kernel#loop
 10.45      0.001     0.001     0.000     0.000     1077   <Class::CompSci::CompleteTree>#parent_idx
  4.57      0.000     0.000     0.000     0.000     1617   Integer#/
  3.48      0.000     0.000     0.000     0.000     1347   Integer#+
  3.09      0.000     0.000     0.000     0.000     1077   Integer#<
  3.05      0.004     0.000     0.000     0.003      270   <Class::CompSci::CompleteTree>#gen
  2.82      0.000     0.000     0.000     0.000     1077   Integer#-
  2.55      0.000     0.000     0.000     0.000      292   String#+
  2.50      0.000     0.000     0.000     0.000      543   Integer#to_s
  2.24      0.000     0.000     0.000     0.000      270   String#ljust
  1.71      0.007     0.000     0.000     0.007        9  *Array#each
  1.53      0.000     0.000     0.000     0.000      540   String#size
  1.51      0.000     0.000     0.000     0.000      270   String#rjust
  1.49      0.000     0.000     0.000     0.000      270   BasicObject#!=
  1.46      0.000     0.000     0.000     0.000      270   Kernel#class
  1.40      0.000     0.000     0.000     0.000      180   CompSci::CompleteTree#push
  1.03      0.000     0.000     0.000     0.000      270   Integer#**
  1.03      0.000     0.000     0.000     0.000        9   Array#inspect
  1.00      0.000     0.000     0.000     0.000      270   Array#max
  0.91      0.000     0.000     0.000     0.000        6   Kernel#p
  0.76      0.000     0.000     0.000     0.000      270   Integer#==
  0.62      0.000     0.000     0.000     0.000        4   Array#initialize
  0.51      0.000     0.000     0.000     0.000      186   Array#empty?
  0.51      0.008     0.000     0.000     0.008        2   Global#[No method]
  0.50      0.000     0.000     0.000     0.000      120   Kernel#rand
  0.50      0.000     0.000     0.000     0.000      180   Array#push
  0.47      0.000     0.000     0.000     0.000      180   Array#shift
  0.31      0.000     0.000     0.000     0.000        6   IO#set_encoding
  0.28      0.000     0.000     0.000     0.000       37   IO#write
  0.28      0.000     0.000     0.000     0.000        3   Kernel#inspect
  0.24      0.000     0.000     0.000     0.000       28   IO#puts
  0.21      0.000     0.000     0.000     0.000        7   Class#new
  0.15      0.006     0.000     0.000     0.006        6   CompSci::CompleteTree#display
  0.15      0.000     0.000     0.000     0.000       28   Kernel#puts
  0.15      0.001     0.000     0.000     0.001        4  *Kernel#require
  0.10      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_enter
  0.08      0.000     0.000     0.000     0.000       13   Module#method_added
  0.07      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.07      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_exit
  0.06      0.000     0.000     0.000     0.000        3   CompSci::CompleteTree#initialize
  0.06      0.000     0.000     0.000     0.000        2   <Module::Gem>#find_unresolved_default_spec
  0.05      0.000     0.000     0.000     0.000        1   CompSci::CompleteTernaryTree#initialize
  0.05      0.006     0.000     0.000     0.006        6   Enumerable#each_with_index
  0.05      0.000     0.000     0.000     0.000        6   <Class::Thread>#current
  0.05      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.04      0.000     0.000     0.000     0.000        2   <Class::Gem::Specification>#unresolved_deps
  0.04      0.000     0.000     0.000     0.000        1   CompSci::CompleteQuaternaryTree#initialize
  0.04      0.000     0.000     0.000     0.000        1   CompSci::CompleteBinaryTree#initialize
  0.04      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.03      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.03      0.000     0.000     0.000     0.000        4   Class#inherited
  0.03      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.03      0.000     0.000     0.000     0.000        2   <Module::Gem>#suffixes
  0.02      0.000     0.000     0.000     0.000        1   Module#append_features
  0.02      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.02      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_check_owner
  0.02      0.000     0.000     0.000     0.000        2   Kernel#respond_to?
  0.01      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.01      0.000     0.000     0.000     0.000        1   Module#included
  0.01      0.000     0.000     0.000     0.000        2   Thread::Mutex#unlock
  0.01      0.000     0.000     0.000     0.000        2   Thread::Mutex#lock

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/heap.rb -- 
RUBYLIB=lib ruby-prof  examples/heap_push.rb -- 
#
# 3 seconds worth of pushes
#

10000th push: 0.00005931 s
20000th push: 0.00002742 s
30000th push: 0.00002853 s
40000th push: 0.00002782 s
50000th push: 0.00001855 s
60000th push: 0.00002763 s
70000th push: 0.00010010 s
80000th push: 0.00003666 s
90000th push: 0.00002761 s
pushed 97648 items in 3.0 s

still a heap with 97648 items? YES - 1.484 sec

Measure Mode: wall_time
Thread ID: 47394365529100
Fiber ID: 47394367126540
Total: 4.485807
Sort by: self_time

 %self      total      self      wait     child     calls  name
 10.70      1.014     0.480     0.000     0.534   320512   CompSci::Heap#heapish?
  6.78      1.955     0.304     0.000     1.651   222876  *CompSci::Heap#sift_up
  5.38      3.000     0.241     0.000     2.759        1   Kernel#loop
  5.23      0.235     0.235     0.000     0.000   989128   Array#[]
  4.82      0.361     0.216     0.000     0.145    97648   Array#initialize
  4.20      0.298     0.188     0.000     0.109   222865   <Class::CompSci::CompleteTree>#parent_idx
  3.37      0.231     0.151     0.000     0.080   320512   BasicObject#!=
  3.34      2.186     0.150     0.000     2.036    97648   CompSci::Heap#push
  3.22      0.245     0.145     0.000     0.101    97648   Object#number
  2.93      0.131     0.131     0.000     0.000   515808   Integer#*
  2.83      0.127     0.127     0.000     0.000   515817   Integer#==
  2.58      0.116     0.116     0.000     0.000   488240   Integer#+
  1.96      0.221     0.088     0.000     0.133    97659   <Module::CompSci::Timer>#since
  1.84      0.083     0.083     0.000     0.000   320514   Integer#-
  1.79      0.080     0.080     0.000     0.000   320513   Kernel#class
  1.71      0.077     0.077     0.000     0.000   320512   Integer#<=>
  1.69      0.076     0.076     0.000     0.000   292953   Integer#%
  1.63      0.073     0.073     0.000     0.000   292945   Array#length
  1.44      0.065     0.065     0.000     0.000   250456   Array#[]=
  1.42      0.104     0.064     0.000     0.041    97671   <Module::CompSci::Timer>#now
  1.38      0.474     0.062     0.000     0.412    97648   <Class::CompSci::CompleteTree>#children_idx
  1.24      0.055     0.055     0.000     0.000   222865   BasicObject#!
  1.18      0.053     0.053     0.000     0.000   222865   Integer#/
  1.17      0.052     0.052     0.000     0.000   222876   Integer#<=
  1.14      0.412     0.051     0.000     0.361    97649   Class#new
  1.14      0.051     0.051     0.000     0.000   195296   Integer#<
  0.91      0.041     0.041     0.000     0.000    97671   <Module::Process>#clock_gettime
  0.74      0.033     0.033     0.000     0.000    97648   Float#>
  0.65      0.029     0.029     0.000     0.000    97745   Array#push
  0.64      0.029     0.029     0.000     0.000    97659   Float#-
  0.59      0.026     0.026     0.000     0.000    97647   Array#<<
  0.00      0.000     0.000     0.000     0.000       11   String#%
  0.00      0.000     0.000     0.000     0.000       97   Kernel#rand
  0.00      4.486     0.000     0.000     4.486        2   Global#[No method]
  0.00      0.000     0.000     0.000     0.000       98   Array#shift
  0.00      1.485     0.000     0.000     1.485       10   <Module::CompSci::Timer>#elapsed
  0.00      0.000     0.000     0.000     0.000       26   IO#write
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.000     0.000     0.000     0.000        1   Range#each
  0.00      0.000     0.000     0.000     0.000        1   Array#shuffle
  0.00      1.484     0.000     0.000     1.484   195299  *Array#each
  0.00      0.000     0.000     0.000     0.000       14   Kernel#puts
  0.00      0.000     0.000     0.000     0.000       14   IO#puts
  0.00      0.001     0.000     0.000     0.001        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.000     0.000     0.000     0.000        1   Kernel#print
  0.00      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000       23   Module#method_added
  0.00      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        5   Class#inherited
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      1.484     0.000     0.000     1.484    97648  *CompSci::Heap#heap?
  0.00      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.00      0.000     0.000     0.000     0.000        1   Integer#to_s
  0.00      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteTree#size
  0.00      0.000     0.000     0.000     0.000        1   CompSci::CompleteTree#initialize
  0.00      0.000     0.000     0.000     0.000        1   Enumerable#to_a
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000        1   String#to_i
  0.00      0.000     0.000     0.000     0.000        1   Module#included
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/tree.rb -- 
#
# Fill up and display some trees
#

[71, 45, 79, 5, 13, 75, 20, 46, 74, 6, 24, 15, 27, 90, 12, 12, 70, 10, 28, 97, 40, 65, 45, 59, 42, 58, 87, 55, 26, 81]

#<CompSci::Node:0x2ad77a7f2304i @value=71 @children=[45, 79]>
                                       71                                       
                   45                                      79                   
          5                  13                  75                  20         
    46        74         6        24        15        27        90        12    
  12   70   10   28   97   40   65   45   59   42   58   87   55   26   81      



#<CompSci::Node:0x2ad77a7da268i @value=71 @children=[45, 79, 5]>
                                       71                                       
            45                        79                         5            
   13      75      20      46      74       6      24      15      27   
90 12 12 70 10 28 97 40 65 45 59 42 58 87 55 26 81                     



#<CompSci::Node:0x2ad77a7a4f3ci @value=71 @children=[45, 79, 5, 13]>
                                       71                                       
         45                  79                   5                  13         
  75   20   46   74   6    24   15   27   90   12   12   70   10   28   97   40 
65 45 59 42 58 87 55 26 81                                                        


Measure Mode: wall_time
Thread ID: 47104960134160
Fiber ID: 47104960071980
Total: 0.005415
Sort by: self_time

 %self      total      self      wait     child     calls  name
  8.02      0.001     0.000     0.000     0.001       13   Array#map
  7.95      0.001     0.000     0.000     0.000      310   Array#initialize
  5.91      0.001     0.000     0.000     0.001      466  *Class#new
  4.72      0.000     0.000     0.000     0.000       13   Array#any?
  4.14      0.001     0.000     0.000     0.001       49   Integer#times
  3.62      0.000     0.000     0.000     0.000      202   Array#+
  3.51      0.000     0.000     0.000     0.000      156   CompSci::Node#initialize
  2.08      0.000     0.000     0.000     0.000      153   CompSci::Node#[]=
  2.03      0.000     0.000     0.000     0.000      513   Array#[]
  1.99      0.000     0.000     0.000     0.000      156   String#ljust
  1.94      0.000     0.000     0.000     0.000      168   CompSci::Node#to_s
  1.73      0.000     0.000     0.000     0.000      369   NilClass#nil?
  1.58      0.000     0.000     0.000     0.000       13   IO#puts
  1.37      0.000     0.000     0.000     0.000      312   String#size
  1.34      0.000     0.000     0.000     0.000      312   Integer#+
  1.30      0.000     0.000     0.000     0.000      156   String#rjust
  1.27      0.000     0.000     0.000     0.000       16   IO#write
  1.25      0.000     0.000     0.000     0.000      132   Integer#to_s
  1.17      0.000     0.000     0.000     0.000        4   Kernel#p
  0.99      0.000     0.000     0.000     0.000      169   Array#max
  0.83      0.000     0.000     0.000     0.000      176   Array#length
  0.77      0.000     0.000     0.000     0.000      379   BasicObject#!
  0.75      0.000     0.000     0.000     0.000       19   Array#join
  0.72      0.002     0.000     0.000     0.002        3   CompSci::Node#display
  0.70      0.004     0.000     0.000     0.004       22  *Array#each
  0.70      0.000     0.000     0.000     0.000      169   Integer#/
  0.66      0.000     0.000     0.000     0.000      156   Array#shift
  0.59      0.000     0.000     0.000     0.000      153   Array#[]=
  0.55      0.000     0.000     0.000     0.000        3   Module#to_s
  0.47      0.000     0.000     0.000     0.000        4   IO#set_encoding
  0.46      0.001     0.000     0.000     0.001       13   <Class::CompSci::Node>#display_line
  0.41      0.000     0.000     0.000     0.000       66   NilClass#to_s
  0.41      0.005     0.000     0.000     0.005        2   Global#[No method]
  0.33      0.000     0.000     0.000     0.000        3   String#%
  0.30      0.000     0.000     0.000     0.000        2   Module#attr_accessor
  0.25      0.000     0.000     0.000     0.000       30   Kernel#rand
  0.22      0.000     0.000     0.000     0.000        1   Array#inspect
  0.22      0.000     0.000     0.000     0.000       34   Module#method_added
  0.19      0.000     0.000     0.000     0.000       13   Kernel#puts
  0.18      0.000     0.000     0.000     0.000        2   Module#attr_reader
  0.17      0.001     0.000     0.000     0.001       10   Enumerable#reduce
  0.16      0.000     0.000     0.000     0.000       13   Array#empty?
  0.15      0.001     0.000     0.000     0.001        2  *Kernel#require
  0.15      0.000     0.000     0.000     0.000        3   CompSci::Node#inspect
  0.13      0.000     0.000     0.000     0.000       10   Array#<<
  0.11      0.000     0.000     0.000     0.000       16   Kernel#class
  0.11      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.11      0.000     0.000     0.000     0.000        7   Class#inherited
  0.11      0.000     0.000     0.000     0.000        1   MonitorMixin#mon_enter
  0.10      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.07      0.000     0.000     0.000     0.000       10   Integer#**
  0.07      0.000     0.000     0.000     0.000        1   MonitorMixin#mon_exit
  0.07      0.000     0.000     0.000     0.000       10   Kernel#nil?
  0.07      0.000     0.000     0.000     0.000        1   <Module::Gem>#find_unresolved_default_spec
  0.06      0.000     0.000     0.000     0.000       10   Integer#>
  0.04      0.000     0.000     0.000     0.000        1   Module#append_features
  0.04      0.000     0.000     0.000     0.000        1   <Class::Gem::Specification>#unresolved_deps
  0.04      0.000     0.000     0.000     0.000        1   <Module::Gem>#suffixes
  0.04      0.000     0.000     0.000     0.000        3   <Class::Thread>#current
  0.04      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.04      0.000     0.000     0.000     0.000        2   BasicObject#singleton_method_added
  0.02      0.000     0.000     0.000     0.000        3   Kernel#object_id
  0.02      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.02      0.000     0.000     0.000     0.000        1   Module#included
  0.02      0.000     0.000     0.000     0.000        1   Thread::Mutex#unlock
  0.02      0.000     0.000     0.000     0.000        1   MonitorMixin#mon_check_owner
  0.02      0.000     0.000     0.000     0.000        1   Kernel#respond_to?
  0.02      0.000     0.000     0.000     0.000        1   Thread::Mutex#lock

* indicates recursively called methods
RUBYLIB=lib ruby-prof  examples/push_tree.rb -- 
#
# Try out Binary, Ternary, and Quaternary PushTrees
# Push the same vals to each
#

[62, 78, 39, 9, 86, 50, 41, 0, 64, 42, 3, 62, 88, 13, 18, 19, 74, 1, 9, 75, 67, 5, 78, 38, 96, 12, 59, 51, 39, 80]
#<CompSci::PushTree:0x0055a8a5a39780 @root=#<CompSci::ChildFlexNode:0x2ad452d1cc24i @value=62 @children=[78, 39]>, @child_slots=2, @open_parent=#<CompSci::ChildFlexNode:0x2ad452d1c468i @value=18 @children=[80]>>
                                       62                                       
                   78                                      39                   
          9                  86                  50                  41         
     0        64        42         3        62        88        13        18    
  19   74   1    9    75   67   5    78   38   96   12   59   51   39   80   _  

df_search visited: 62 78 9 0 19 74 64 1 9 86 42 75 67 3 5 78 39 50 62 38 96 88 12 59 41 13 51 39 18 80


push: [45, 32, 37, 82, 86, 93, 46, 26, 88, 90, 44, 7, 95, 40, 25, 58, 81, 56, 8, 70, 62, 47, 40, 35, 90, 18, 9, 56, 26, 85]

                                       62                                       
                   78                                      39                   
          9                  86                  50                  41         
     0        64        42         3        62        88        13        18    
  19   74   1    9    75   67   5    78   38   96   12   59   51   39   80   45 
32 37 82 86 93 46 26 88 90 44 7 95 40 25 58 81 56 8 70 62 47 40 35 90 18 9 56 26 85 _ _ _ 


[62, 78, 39, 9, 86, 50, 41, 0, 64, 42, 3, 62, 88, 13, 18, 19, 74, 1, 9, 75, 67, 5, 78, 38, 96, 12, 59, 51, 39, 80]
#<CompSci::PushTree:0x0055a8a5997818 @root=#<CompSci::ChildFlexNode:0x2ad452ccbce8i @value=62 @children=[78, 39, 9]>, @child_slots=3, @open_parent=#<CompSci::ChildFlexNode:0x2ad452ccb414i @value=42 @children=[39, 80]>>
                                       62                                       
            78                        39                         9            
   86      50      41       0      64      42       3      62      88   
13 18 19 74 1 9 75 67 5 78 38 96 12 59 51 39 80 _ _ _ _ _ _ _ _ _ _ 

df_search visited: 62 78 86 13 18 19 50 74 1 9 41 75 67 5 39 0 78 38 96 64 12 59 51 42 39 80 9 3 62 88


push: [70, 88, 93, 15, 71, 92, 41, 44, 5, 46, 44, 63, 55, 41, 43, 49, 41, 67, 44, 95, 53, 69, 66, 86, 47, 82, 43, 43, 87, 66]

                                       62                                       
            78                        39                         9            
   86      50      41       0      64      42       3      62      88   
13 18 19 74 1 9 75 67 5 78 38 96 12 59 51 39 80 70 88 93 15 71 92 41 44 5 46 
44 63 55 41 43 49 41 67 44 95 53 69 66 86 47 82 43 43 87 66 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 


[62, 78, 39, 9, 86, 50, 41, 0, 64, 42, 3, 62, 88, 13, 18, 19, 74, 1, 9, 75, 67, 5, 78, 38, 96, 12, 59, 51, 39, 80]
#<CompSci::PushTree:0x0055a8a58314d8 @root=#<CompSci::ChildFlexNode:0x2ad452c18b34i @value=62 @children=[78, 39, 9, 86]>, @child_slots=4, @open_parent=#<CompSci::ChildFlexNode:0x2ad452c185bci @value=0 @children=[80]>>
                                       62                                       
         78                  39                   9                  86         
  50   41   0    64   42   3    62   88   13   18   19   74   1    9    75   67 
5 78 38 96 12 59 51 39 80 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

df_search visited: 62 78 50 5 78 38 96 41 12 59 51 39 0 80 64 39 42 3 62 88 9 13 18 19 74 86 1 9 75 67


push: [68, 5, 51, 77, 46, 34, 3, 15, 72, 57, 38, 53, 60, 36, 96, 46, 12, 89, 44, 68, 28, 46, 93, 43, 44, 92, 62, 93, 50, 6]

                                       62                                       
         78                  39                   9                  86         
  50   41   0    64   42   3    62   88   13   18   19   74   1    9    75   67 
5 78 38 96 12 59 51 39 80 68 5 51 77 46 34 3 15 72 57 38 53 60 36 96 46 12 89 44 68 28 46 93 43 44 92 62 93 50 6 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 


#
# 30 inserts, puts, df_search
#

[37, 26, 7, 76, 3, 76, 35, 96, 75, 28, 84, 93, 25, 87, 79, 73, 5, 89, 85, 13, 74, 97, 13, 25, 52, 90, 19, 11, 20, 1]
                                       37                                       
                   26                                       7                   
         76                   3                  76                  35         
    96        75        28        84        93        25        87        79    
  73   5    89   85   13   74   97   13   25   52   90   19   11   20   1    _  
#<CompSci::PushTree:0x0055a8a59cc3b0 @root=#<CompSci::ChildFlexNode:0x2ad452ce63a4i @value=37 @children=[26, 7]>, @child_slots=2, @open_parent=#<CompSci::ChildFlexNode:0x2ad452cdb940i @value=79 @children=[1]>>

visited 37
visited 26
visited 76
visited 96
visited 73
visited 5
visited 75
visited 89
visited 85
visited 3
visited 28
visited 13
visited 74
visited 84
visited 97
visited 13
visited 7
visited 76
visited 93
visited 25
visited 52
visited 25
visited 90
visited 19
visited 35
visited 87
visited 11
visited 20
visited 79
visited 1

push: [6, 70, 3, 35, 30, 58, 35, 35, 64, 83, 72, 16, 3, 45, 79, 83, 67, 48, 86, 6, 15, 7, 6, 95, 18, 6, 39, 31, 91, 11]
                                       37                                       
                   26                                       7                   
         76                   3                  76                  35         
    96        75        28        84        93        25        87        79    
  73   5    89   85   13   74   97   13   25   52   90   19   11   20   1    6  
70 3 35 30 58 35 35 64 83 72 16 3 45 79 83 67 48 86 6 15 7 6 95 18 6 39 31 91 11 _ _ _ 

#
# 5 seconds worth of pushes
#

100th push: 0.00001966 s
200th push: 0.00001275 s
300th push: 0.00001293 s
400th push: 0.00001338 s
500th push: 0.00001369 s
600th push: 0.00001360 s
700th push: 0.00002349 s
800th push: 0.00001401 s
900th push: 0.00001376 s
1000th push: 0.00001416 s
-----------
    1k push: 0.3125 s (3200 push / s)

1100th push: 0.00001584 s
1200th push: 0.00001397 s
1300th push: 0.00004488 s
1400th push: 0.00001429 s
1500th push: 0.00002897 s
1600th push: 0.00001465 s
1700th push: 0.00001528 s
1800th push: 0.00001587 s
1900th push: 0.00001500 s
2000th push: 0.00001569 s
-----------
    1k push: 0.9529 s (1049 push / s)

2100th push: 0.00001586 s
2200th push: 0.00001717 s
2300th push: 0.00002378 s
2400th push: 0.00001815 s
2500th push: 0.00001707 s
2600th push: 0.00001713 s
2700th push: 0.00001810 s
2800th push: 0.00001752 s
2900th push: 0.00001665 s
3000th push: 0.00001747 s
-----------
    1k push: 1.6942 s (590 push / s)

3100th push: 0.00001777 s
3200th push: 0.00001711 s
3300th push: 0.00001721 s
3400th push: 0.00001822 s
3500th push: 0.00001804 s
3600th push: 0.00001876 s
3700th push: 0.00001861 s
3800th push: 0.00001642 s
pushed 3831 items in 5.0 s

Measure Mode: wall_time
Thread ID: 47091409902600
Fiber ID: 47091409835400
Total: 5.025585
Sort by: self_time

 %self      total      self      wait     child     calls  name
 32.60      4.909     1.638     0.000     3.271      999   CompSci::PushTree#bf_search
 23.34      1.173     1.173     0.000     0.000   918823   Array#+
 17.29      1.292     0.869     0.000     0.423   927407   CompSci::PushTree#open_parent?
  7.54      0.379     0.379     0.000     0.000   919551   Array#shift
  4.49      0.226     0.226     0.000     0.000   919555   Array#empty?
  4.25      0.213     0.213     0.000     0.000   920370   BasicObject#!
  4.23      0.213     0.213     0.000     0.000   927407   Integer#<
  4.19      0.211     0.211     0.000     0.000   927988   Array#length
  0.22      5.009     0.011     0.000     4.998        1   Kernel#loop
  0.20      0.018     0.010     0.000     0.008     4594   Class#new
  0.18      4.942     0.009     0.000     4.933     4067   CompSci::PushTree#open_parent
  0.14      0.013     0.007     0.000     0.006     4067   CompSci::ChildFlexNode#add_child
  0.13      0.007     0.007     0.000     0.000     4072   CompSci::ChildFlexNode#initialize
  0.10      0.035     0.005     0.000     0.030     4067   CompSci::ChildFlexNode#new_child
  0.09      4.981     0.004     0.000     4.977     4067   CompSci::PushTree#push
  0.08      0.020     0.004     0.000     0.016     2161  *Array#each
  0.08      0.012     0.004     0.000     0.008     3873   <Module::CompSci::Timer>#since
  0.07      0.004     0.004     0.000     0.000     4012   Kernel#rand
  0.06      0.006     0.003     0.000     0.003     3916   <Module::CompSci::Timer>#now
  0.06      0.018     0.003     0.000     0.014     2006   CompSci::PushTree#open_sibling
  0.06      0.003     0.003     0.000     0.000     3916   <Module::Process>#clock_gettime
  0.05      0.012     0.003     0.000     0.009     2006   Enumerable#find
  0.05      0.002     0.002     0.000     0.000     3831   Float#>
  0.05      0.004     0.002     0.000     0.001     4067   BasicObject#!=
  0.04      0.002     0.002     0.000     0.000     4188   Array#<<
  0.03      0.003     0.002     0.000     0.002       39   Array#map
  0.03      0.002     0.002     0.000     0.000     3873   Float#-
  0.03      0.001     0.001     0.000     0.000     4869   Integer#+
  0.03      0.001     0.001     0.000     0.000     2006   CompSci::ChildNode#siblings
  0.02      0.001     0.001     0.000     0.000     4067   BasicObject#==
  0.02      0.001     0.001     0.000     0.000     4114   Kernel#class
  0.02      0.001     0.001     0.000     0.000     3869   Integer#==
  0.02      0.001     0.001     0.000     0.000     3869   Integer#%
  0.02      0.001     0.001     0.000     0.000     2014   Kernel#respond_to?
  0.02      0.001     0.001     0.000     0.000      517   Array#initialize
  0.01      0.001     0.001     0.000     0.000       53   String#%
  0.01      0.001     0.001     0.000     0.000       39   Array#any?
  0.01      0.000     0.000     0.000     0.000      749   Integer#to_s
  0.01      0.000     0.000     0.000     0.000      519   String#ljust
  0.01      0.001     0.000     0.000     0.000      504   CompSci::Node#to_s
  0.01      0.000     0.000     0.000     0.000      968   Array#[]
  0.00      0.000     0.000     0.000     0.000     1038   String#size
  0.00      0.000     0.000     0.000     0.000      519   String#rjust
  0.00      0.000     0.000     0.000     0.000      208   IO#write
  0.00      0.000     0.000     0.000     0.000     1028   NilClass#nil?
  0.00      0.000     0.000     0.000     0.000       58   Array#join
  0.00      0.000     0.000     0.000     0.000      558   Array#max
  0.00      0.000     0.000     0.000     0.000      118   IO#puts
  0.00      0.000     0.000     0.000     0.000      558   Integer#/
  0.00      0.000     0.000     0.000     0.000        8   Kernel#p
  0.00      0.001     0.000     0.000     0.001       38   <Module::CompSci::Timer>#elapsed
  0.00      0.007     0.000     0.000     0.007        8   CompSci::Node#display
  0.00      5.026     0.000     0.000     5.025        2   Global#[No method]
  0.00      0.000     0.000     0.000     0.000      118   Kernel#puts
  0.00      0.000     0.000     0.000     0.000        8   Array#inspect
  0.00      0.004     0.000     0.000     0.004       39   <Class::CompSci::Node>#display_line
  0.00      0.000     0.000     0.000     0.000        4   Kernel#inspect
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.003     0.000     0.000     0.002       31   Enumerable#reduce
  0.00      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.00      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000       43   Module#method_added
  0.00      0.000     0.000     0.000     0.000        2   Module#attr_accessor
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.000     0.000     0.000     0.000       31   Integer#>
  0.00      0.000     0.000     0.000     0.000        5   CompSci::PushTree#initialize
  0.00      0.000     0.000     0.000     0.000        8   CompSci::Node#inspect
  0.00      0.000     0.000     0.000     0.000      120  *CompSci::PushTree#df_search
  0.00      0.000     0.000     0.000     0.000       31   Integer#**
  0.00      0.000     0.000     0.000     0.000        8   Module#to_s
  0.00      0.000     0.000     0.000     0.000        3   Integer#to_f
  0.00      0.000     0.000     0.000     0.000       31   Kernel#nil?
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000        8   Kernel#object_id
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.00      0.000     0.000     0.000     0.000        8   Class#inherited
  0.00      0.000     0.000     0.000     0.000        3   Float#/
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.00      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        6   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
