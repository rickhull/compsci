Run options: --seed 32098

# Running:

.......................SS.....................................................................................

Finished in 0.366816s, 299.8781 runs/s, 33722.6521 assertions/s.

110 runs, 12370 assertions, 0 failures, 0 errors, 2 skips

You have skipped tests. Run with --verbose for details.
ruby -Ilib examples/tree.rb
/proc/loadavg 0.00 0.00 0.00 1/97 3207

#
# Fill up and display some trees
#

[92, 70, 64, 19, 32, 5, 77, 67, 43, 66, 66, 65, 49, 8, 82, 5, 97, 24, 78, 3, 63, 78, 80, 83, 2, 4, 82, 86, 2, 13]

#<CompSci::Node:0x2acc186db974i @value=92 @children=[70, 64]>
                                       92                                       
                   70                                      64                   
         19                  32                   5                  77         
    67        43        66        66        65        49         8        82    
  5    97   24   78   3    63   78   80   83   2    4    82   86   2    13      



#<CompSci::Node:0x2acc186d8f80i @value=92 @children=[70, 64, 19]>
                                       92                                       
            70                        64                        19            
   32       5      77      67      43      66      66      65      49   
8 82 5 97 24 78 3 63 78 80 83 2 4 82 86 2 13                     



#<CompSci::Node:0x2acc18659438i @value=92 @children=[70, 64, 19, 32]>
                                       92                                       
         70                  64                  19                  32         
  5    77   67   43   66   66   65   49   8    82   5    97   24   78   3    63 
78 80 83 2 4 82 86 2 13                                                        


ruby -Ilib examples/complete_tree.rb


#
# Print CompleteBinary-, Ternary-, and QuaternaryTree
#

[68, 65, 85, 16, 87, 32, 32, 63, 14, 81, 14, 79, 87, 94, 70, 15, 35, 84, 7, 87, 90, 64, 94, 27, 92, 95, 2, 5, 22, 98]
#<CompSci::CompleteBinaryTree:0x00562e877a03f8 @array=[68, 65, 85, 16, 87, 32, 32, 63, 14, 81, 14, 79, 87, 94, 70, 15, 35, 84, 7, 87, 90, 64, 94, 27, 92, 95, 2, 5, 22, 98], @child_slots=2>
                                       68                                       
                   65                                      85                   
         16                  87                  32                  32         
    63        14        81        14        79        87        94        70    
  15   35   84   7    87   90   64   94   27   92   95   2    5    22   98 



push: [58, 18, 36, 68, 95, 32, 37, 53, 83, 86, 82, 94, 69, 17, 88, 83, 17, 45, 20, 50, 12, 34, 46, 90, 95, 15, 84, 95, 50, 0]
                                       68                                       
                   65                                      85                   
         16                  87                  32                  32         
    63        14        81        14        79        87        94        70    
  15   35   84   7    87   90   64   94   27   92   95   2    5    22   98   58 
18 36 68 95 32 37 53 83 86 82 94 69 17 88 83 17 45 20 50 12 34 46 90 95 15 84 95 50 0 



[68, 65, 85, 16, 87, 32, 32, 63, 14, 81, 14, 79, 87, 94, 70, 15, 35, 84, 7, 87, 90, 64, 94, 27, 92, 95, 2, 5, 22, 98]
#<CompSci::CompleteTernaryTree:0x00562e87797aa0 @array=[68, 65, 85, 16, 87, 32, 32, 63, 14, 81, 14, 79, 87, 94, 70, 15, 35, 84, 7, 87, 90, 64, 94, 27, 92, 95, 2, 5, 22, 98], @child_slots=3>
                                       68                                       
            65                        85                        16            
   87      32      32      63      14      81      14      79      87   
94 70 15 35 84 7 87 90 64 94 27 92 95 2 5 22 98 



push: [26, 31, 81, 92, 46, 44, 89, 18, 11, 93, 30, 97, 13, 24, 92, 69, 64, 24, 53, 46, 62, 55, 66, 95, 88, 4, 93, 38, 3, 71]
                                       68                                       
            65                        85                        16            
   87      32      32      63      14      81      14      79      87   
94 70 15 35 84 7 87 90 64 94 27 92 95 2 5 22 98 26 31 81 92 46 44 89 18 11 93 
30 97 13 24 92 69 64 24 53 46 62 55 66 95 88 4 93 38 3 71 



[68, 65, 85, 16, 87, 32, 32, 63, 14, 81, 14, 79, 87, 94, 70, 15, 35, 84, 7, 87, 90, 64, 94, 27, 92, 95, 2, 5, 22, 98]
#<CompSci::CompleteQuaternaryTree:0x00562e876958a0 @array=[68, 65, 85, 16, 87, 32, 32, 63, 14, 81, 14, 79, 87, 94, 70, 15, 35, 84, 7, 87, 90, 64, 94, 27, 92, 95, 2, 5, 22, 98], @child_slots=4>
                                       68                                       
         65                  85                  16                  87         
  32   32   63   14   81   14   79   87   94   70   15   35   84   7    87   90 
64 94 27 92 95 2 5 22 98 



push: [20, 97, 34, 55, 77, 52, 86, 4, 94, 41, 72, 77, 81, 23, 33, 85, 32, 65, 87, 33, 59, 30, 63, 45, 25, 74, 5, 6, 98, 76]
                                       68                                       
         65                  85                  16                  87         
  32   32   63   14   81   14   79   87   94   70   15   35   84   7    87   90 
64 94 27 92 95 2 5 22 98 20 97 34 55 77 52 86 4 94 41 72 77 81 23 33 85 32 65 87 33 59 30 63 45 25 74 5 6 98 76 



ruby -Ilib examples/heap_push.rb


#
# 3 seconds worth of pushes
#

10000th push: 0.00000340 s
20000th push: 0.00000422 s
30000th push: 0.00000255 s
40000th push: 0.00000410 s
50000th push: 0.00000414 s
60000th push: 0.00000358 s
70000th push: 0.00000433 s
80000th push: 0.00000382 s
90000th push: 0.00000255 s
100000th push: 0.00000463 s
-------------
    100k push: 0.18782789 s (532k push / s)

110000th push: 0.00000291 s
120000th push: 0.00000354 s
130000th push: 0.00000272 s
140000th push: 0.00000294 s
150000th push: 0.00000322 s
160000th push: 0.00000406 s
170000th push: 0.00000246 s
180000th push: 0.00000249 s
190000th push: 0.00000410 s
200000th push: 0.00000248 s
-------------
    100k push: 0.18760305 s (533k push / s)

210000th push: 0.00000384 s
220000th push: 0.00000354 s
230000th push: 0.00000411 s
240000th push: 0.00000347 s
250000th push: 0.00000433 s
260000th push: 0.00000346 s
270000th push: 0.00000283 s
280000th push: 0.00000315 s
290000th push: 0.00000358 s
300000th push: 0.00000317 s
-------------
    100k push: 0.18709713 s (534k push / s)

310000th push: 0.00000257 s
320000th push: 0.00000246 s
330000th push: 0.00000375 s
340000th push: 0.00000352 s
350000th push: 0.00000238 s
360000th push: 0.00000340 s
370000th push: 0.00000366 s
380000th push: 0.00000248 s
390000th push: 0.00000274 s
400000th push: 0.00000242 s
-------------
    100k push: 0.18855356 s (530k push / s)

410000th push: 0.00000322 s
420000th push: 0.00000299 s
430000th push: 0.00000246 s
440000th push: 0.00000231 s
450000th push: 0.00000304 s
460000th push: 0.00000342 s
470000th push: 0.00000340 s
480000th push: 0.00000388 s
490000th push: 0.00000304 s
500000th push: 0.00000552 s
-------------
    100k push: 0.18851858 s (530k push / s)

510000th push: 0.00000312 s
520000th push: 0.00000376 s
530000th push: 0.00000276 s
540000th push: 0.00000409 s
550000th push: 0.00000298 s
560000th push: 0.00000261 s
570000th push: 0.00000279 s
580000th push: 0.00002176 s
590000th push: 0.00000259 s
600000th push: 0.00000370 s
-------------
    100k push: 0.18868683 s (529k push / s)

610000th push: 0.00000261 s
620000th push: 0.00000296 s
630000th push: 0.00000277 s
640000th push: 0.00000279 s
650000th push: 0.00000288 s
660000th push: 0.00000469 s
670000th push: 0.00000323 s
680000th push: 0.00000313 s
690000th push: 0.00000356 s
700000th push: 0.00000300 s
-------------
    100k push: 0.18960503 s (527k push / s)

710000th push: 0.00000415 s
720000th push: 0.00000314 s
730000th push: 0.00000386 s
740000th push: 0.00000368 s
750000th push: 0.00000392 s
760000th push: 0.00000246 s
770000th push: 0.00000300 s
780000th push: 0.00000535 s
790000th push: 0.00000428 s
800000th push: 0.00000443 s
-------------
    100k push: 0.18768130 s (532k push / s)

810000th push: 0.00000392 s
820000th push: 0.00000452 s
830000th push: 0.00000437 s
840000th push: 0.00000463 s
850000th push: 0.00000292 s
860000th push: 0.00000243 s
870000th push: 0.00000329 s
880000th push: 0.00000228 s
890000th push: 0.00000354 s
900000th push: 0.00000295 s
-------------
    100k push: 0.18814535 s (531k push / s)

910000th push: 0.00000256 s
920000th push: 0.00000239 s
930000th push: 0.00000289 s
940000th push: 0.00000239 s
950000th push: 0.00000409 s
960000th push: 0.00000523 s
970000th push: 0.00000349 s
980000th push: 0.00000293 s
990000th push: 0.00000251 s
1000000th push: 0.00000273 s
-------------
    100k push: 0.18610657 s (537k push / s)

1010000th push: 0.00000296 s
1020000th push: 0.00000434 s
1030000th push: 0.00000248 s
1040000th push: 0.00000239 s
1050000th push: 0.00000249 s
1060000th push: 0.00000296 s
1070000th push: 0.00000342 s
1080000th push: 0.00000260 s
1090000th push: 0.00000297 s
1100000th push: 0.00000816 s
-------------
    100k push: 0.18817695 s (531k push / s)

1110000th push: 0.00000284 s
1120000th push: 0.00000569 s
1130000th push: 0.00000284 s
1140000th push: 0.00000276 s
1150000th push: 0.00000394 s
1160000th push: 0.00000345 s
1170000th push: 0.00000275 s
1180000th push: 0.00000324 s
1190000th push: 0.00000347 s
1200000th push: 0.00000265 s
-------------
    100k push: 0.21415851 s (466k push / s)

1210000th push: 0.00000394 s
1220000th push: 0.00000432 s
1230000th push: 0.00000299 s
1240000th push: 0.00000377 s
1250000th push: 0.00000280 s
1260000th push: 0.00000282 s
1270000th push: 0.00000325 s
1280000th push: 0.00000365 s
1290000th push: 0.00000311 s
1300000th push: 0.00000312 s
-------------
    100k push: 0.21374079 s (467k push / s)

1310000th push: 0.00000274 s
1320000th push: 0.00000270 s
1330000th push: 0.00000265 s
1340000th push: 0.00000358 s
1350000th push: 0.00000375 s
1360000th push: 0.00000375 s
1370000th push: 0.00000360 s
1380000th push: 0.00000272 s
1390000th push: 0.00000403 s
1400000th push: 0.00000364 s
-------------
    100k push: 0.21231228 s (471k push / s)

1410000th push: 0.00000297 s
1420000th push: 0.00000309 s
1430000th push: 0.00000309 s
1440000th push: 0.00000265 s
1450000th push: 0.00000312 s
1460000th push: 0.00001638 s
1470000th push: 0.00000479 s
1480000th push: 0.00000475 s
1490000th push: 0.00000498 s
1500000th push: 0.00000335 s
-------------
    100k push: 0.19051137 s (524k push / s)

1510000th push: 0.00000309 s
1520000th push: 0.00000364 s
1530000th push: 0.00000245 s
1540000th push: 0.00000263 s
1550000th push: 0.00000279 s
pushed 1554018 items in 3.0 s

still a heap with 1554033 items? YES - 1.628 sec

ruby -Ilib examples/heap.rb


#
# display the results of TernaryHeap push and pop
#

push: 26 62 21 17 53 43 42 63 31 49 6 16 83 45 35 27 63 75 76 39 68 47 28 40 28 27 5 69 98 39
array: [98, 76, 83, 63, 45, 75, 68, 40, 62, 69, 6, 16, 17, 26, 35, 27, 43, 53, 63, 39, 42, 47, 21, 28, 28, 27, 5, 31, 49, 39]
heap: true
                                       98                                       
            76                        83                        63            
   45      75      68      40      62      69       6      16      17   
26 35 27 43 53 63 39 42 47 21 28 28 27 5 31 49 39 


pop: 98
array: [83, 76, 69, 63, 45, 75, 68, 40, 62, 49, 6, 16, 17, 26, 35, 27, 43, 53, 63, 39, 42, 47, 21, 28, 28, 27, 5, 31, 39]
heap: true
                                       83                                       
            76                        69                        63            
   45      75      68      40      62      49       6      16      17   
26 35 27 43 53 63 39 42 47 21 28 28 27 5 31 39 


pop: 83 76 75 69 68 63 63 62 53
array: [49, 47, 40, 28, 45, 43, 42, 31, 27, 21, 6, 16, 17, 26, 35, 27, 28, 5, 39, 39]
heap: true
                                       49                                       
            47                        40                        28            
   45      43      42      31      27      21       6      16      17   
26 35 27 28 5 39 39 


push: 59 31 17 45 28 76 9 1 33 65 87 15 94 42 24 31 67 0 43 13 93 77 70 1 7 45 41 38 79 50
array: [94, 93, 76, 87, 79, 50, 47, 40, 45, 65, 42, 67, 43, 70, 45, 77, 43, 5, 39, 39, 42, 31, 17, 31, 28, 27, 9, 1, 21, 33, 59, 6, 15, 28, 16, 24, 31, 0, 17, 13, 26, 45, 49, 1, 7, 35, 27, 38, 41, 28]
heap: true
                                       94                                       
            93                        76                        87            
   79      50      47      40      45      65      42      67      43   
70 45 77 43 5 39 39 42 31 17 31 28 27 9 1 21 33 59 6 15 28 16 24 31 0 17 13 
26 45 49 1 7 35 27 38 41 28 

ruby -Ilib examples/key_node.rb



#
# INSERT NODES INTO A BST (RANDOM KEYS)
#

[:butter, :monkey, :robert, :uncle, :orange, :london, :willie, :tommy, :charlie, :freddy, :king, :harry, :vinegar, :xerxes, :nuts, :pudding, :edward, :ink, :yellow, :sugar, :duff, :zebra, :george, :queenie, :apples, :johnnie]
[71, 36, 90, 56, 20, 7, 73, 82, 36, 51, 15, 7, 39, 65, 24, 98, 84, 55, 25, 43, 14, 33, 66, 46, 39, 34]
                                    71:butter                                   
                36:monkey                               90:robert               
      20:orange           56:uncle            73:willie          98:pudding     
 7:london   24:nuts 36:charlie 65:xerxes      _     82:tommy      _         _    
  _  15:king   _  25:yellow   _  51:freddy   _  66:george   _    _    _  84:edward   _    _    _    _  
_ _ 7:harry _ _ _ _ 33:zebra _ _ 39:vinegar 55:ink _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
_ _ _ _ _ 14:duff _ _ _ _ _ _ _ _ _ 34:johnnie _ _ _ _ _ 43:sugar _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 39:apples 46:queenie _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 


#
# INSERT 30 NODES INTO A BST (UNIQUE KEYS)
#

                                      4:18                                      
                  2:11                                    26:93                 
        1:70                3:87                23:49               28:37       
     _         _         _         _       17:20     25:43     27:60     30:18  
  _    _    _    _    _    _    _    _  15:88 18:78 24:86   _    _    _  29:58   _  
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 10:59 16:84 _ 21:54 _ _ _ _ _ _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 7:4 11:22 _ _ _ _ 20:97 22:41 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 6:59 9:62 _ 14:71 _ _ _ _ _ _ _ _ 19:58 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 



#
# SEARCH FOR 30 DIFFERENT KEYS
#

found 1:70
found 2:11
found 3:87
found 4:18
found 5:32
found 6:59
found 7:4
found 8:69
found 9:62
found 10:59
found 11:22
found 12:25
found 13:59
found 14:71
found 15:88
found 16:84
found 17:20
found 18:78
found 19:58
found 20:97
found 21:54
found 22:41
found 23:49
found 24:86
found 25:43
found 26:93
found 27:60
found 28:37
found 29:58
found 30:18

#
# INSERT 30 NODES INTO A TST (NON-UNIQUE KEYS)
#

12:32
16:6
42:11
43:21
28:19
20:9
7:11
18:18
15:20
49:11
29:45
23:45
16:4
27:10
6:2
34:46
4:25
21:36
18:19
10:32
43:43
21:31
2:6
4:14
44:12
33:5
17:42
41:15
3:22
                                      37:23                                     
           12:32                       _                       42:11          
  7:11      _     16:6      _       _       _     41:15     _     43:21 
6:2 _ 10:32 _ _ _ 15:20 16:4 28:19 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 43:43 49:11 
4:25 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 20:9 _ 29:45 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 44:12 _ _ 




#
# SEARCH FOR 50 RANDOM KEYS
#

search 0: 
search 1: 
search 2: 6
search 3: 22
search 4: 25 14
search 5: 
search 6: 2
search 7: 11
search 8: 
search 9: 
search 10: 32
search 11: 
search 12: 32
search 13: 
search 14: 
search 15: 20
search 16: 6 4
search 17: 42
search 18: 18 19
search 19: 
search 20: 9
search 21: 36 31
search 22: 
search 23: 45
search 24: 
search 25: 
search 26: 
search 27: 10
search 28: 19
search 29: 45
search 30: 
search 31: 
search 32: 
search 33: 5
search 34: 46
search 35: 
search 36: 
search 37: 23
search 38: 
search 39: 
search 40: 
search 41: 15
search 42: 11
search 43: 21 43
search 44: 12
search 45: 
search 46: 
search 47: 
search 48: 
search 49: 11
ruby -Ilib examples/push_tree.rb


#
# Try out Binary, Ternary, and Quaternary PushTrees
# Push the same vals to each
#

[57, 81, 1, 82, 51, 24, 85, 25, 51, 40, 98, 86, 48, 46, 32, 66, 14, 7, 7, 78, 57, 18, 21, 82, 12, 24, 95, 42, 28, 86]
#<CompSci::PushTree:0x0055a64cc4c7f8 @root=#<CompSci::ChildFlexNode:0x2ad326626474i @value=57 @children=[81, 1]>, @child_slots=2, @open_parent=#<CompSci::ChildFlexNode:0x2ad3266216f4i @value=32 @children=[86]>>
                                       57                                       
                   81                                       1                   
         82                  51                  24                  85         
    25        51        40        98        86        48        46        32    
  66   14   7    7    78   57   18   21   82   12   24   95   42   28   86   _  

df_search visited: 57 81 82 25 66 14 51 7 7 51 40 78 57 98 18 21 1 24 86 82 12 48 24 95 85 46 42 28 32 86


push: [95, 90, 93, 30, 47, 78, 58, 29, 24, 17, 61, 30, 29, 86, 88, 41, 51, 6, 23, 14, 94, 17, 61, 16, 5, 36, 30, 78, 96, 81]

                                       57                                       
                   81                                       1                   
         82                  51                  24                  85         
    25        51        40        98        86        48        46        32    
  66   14   7    7    78   57   18   21   82   12   24   95   42   28   86   95 
90 93 30 47 78 58 29 24 17 61 30 29 86 88 41 51 6 23 14 94 17 61 16 5 36 30 78 96 81 _ _ _ 


[57, 81, 1, 82, 51, 24, 85, 25, 51, 40, 98, 86, 48, 46, 32, 66, 14, 7, 7, 78, 57, 18, 21, 82, 12, 24, 95, 42, 28, 86]
#<CompSci::PushTree:0x0055a64cc2c0e8 @root=#<CompSci::ChildFlexNode:0x2ad3266160d8i @value=57 @children=[81, 1, 82]>, @child_slots=3, @open_parent=#<CompSci::ChildFlexNode:0x2ad326615c3ci @value=40 @children=[28, 86]>>
                                       57                                       
            81                         1                        82            
   51      24      85      25      51      40      98      86      48   
46 32 66 14 7 7 78 57 18 21 82 12 24 95 42 28 86 _ _ _ _ _ _ _ _ _ _ 

df_search visited: 57 81 51 46 32 66 24 14 7 7 85 78 57 18 1 25 21 82 12 51 24 95 42 40 28 86 82 98 86 48


push: [1, 59, 59, 81, 49, 34, 79, 33, 53, 80, 93, 52, 95, 33, 80, 12, 32, 92, 37, 86, 66, 34, 32, 74, 48, 22, 67, 75, 64, 58]

                                       57                                       
            81                         1                        82            
   51      24      85      25      51      40      98      86      48   
46 32 66 14 7 7 78 57 18 21 82 12 24 95 42 28 86 1 59 59 81 49 34 79 33 53 80 
93 52 95 33 80 12 32 92 37 86 66 34 32 74 48 22 67 75 64 58 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 


[57, 81, 1, 82, 51, 24, 85, 25, 51, 40, 98, 86, 48, 46, 32, 66, 14, 7, 7, 78, 57, 18, 21, 82, 12, 24, 95, 42, 28, 86]
#<CompSci::PushTree:0x0055a64cdfc800 @root=#<CompSci::ChildFlexNode:0x2ad3266fe4a0i @value=57 @children=[81, 1, 82, 51]>, @child_slots=4, @open_parent=#<CompSci::ChildFlexNode:0x2ad3266fe108i @value=25 @children=[86]>>
                                       57                                       
         81                   1                  82                  51         
  24   85   25   51   40   98   86   48   46   32   66   14   7    7    78   57 
18 21 82 12 24 95 42 28 86 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

df_search visited: 57 81 24 18 21 82 12 85 24 95 42 28 25 86 51 1 40 98 86 48 82 46 32 66 14 51 7 7 78 57


push: [4, 45, 77, 4, 80, 59, 84, 60, 69, 73, 5, 39, 72, 11, 81, 52, 85, 76, 24, 35, 81, 43, 96, 61, 87, 77, 71, 88, 58, 1]

                                       57                                       
         81                   1                  82                  51         
  24   85   25   51   40   98   86   48   46   32   66   14   7    7    78   57 
18 21 82 12 24 95 42 28 86 4 45 77 4 80 59 84 60 69 73 5 39 72 11 81 52 85 76 24 35 81 43 96 61 87 77 71 88 58 1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 


#
# 30 inserts, puts, df_search
#

[89, 25, 38, 74, 23, 36, 77, 93, 98, 90, 72, 18, 78, 23, 51, 21, 83, 90, 23, 0, 71, 25, 80, 38, 71, 31, 39, 34, 14, 26]
                                       89                                       
                   25                                      38                   
         74                  23                  36                  77         
    93        98        90        72        18        78        23        51    
  21   83   90   23   0    71   25   80   38   71   31   39   34   14   26   _  
#<CompSci::PushTree:0x0055a64cdd4378 @root=#<CompSci::ChildFlexNode:0x2ad3266ea20ci @value=89 @children=[25, 38]>, @child_slots=2, @open_parent=#<CompSci::ChildFlexNode:0x2ad3266dfbcci @value=51 @children=[26]>>

visited 89
visited 25
visited 74
visited 93
visited 21
visited 83
visited 98
visited 90
visited 23
visited 23
visited 90
visited 0
visited 71
visited 72
visited 25
visited 80
visited 38
visited 36
visited 18
visited 38
visited 71
visited 78
visited 31
visited 39
visited 77
visited 23
visited 34
visited 14
visited 51
visited 26

push: [33, 71, 48, 52, 66, 77, 14, 3, 31, 59, 58, 34, 49, 68, 55, 31, 17, 8, 49, 63, 61, 46, 6, 87, 39, 96, 19, 45, 38, 87]
                                       89                                       
                   25                                      38                   
         74                  23                  36                  77         
    93        98        90        72        18        78        23        51    
  21   83   90   23   0    71   25   80   38   71   31   39   34   14   26   33 
71 48 52 66 77 14 3 31 59 58 34 49 68 55 31 17 8 49 63 61 46 6 87 39 96 19 45 38 87 _ _ _ 

#
# 5 seconds worth of pushes
#

100th push: 0.00000265 s
200th push: 0.00000234 s
300th push: 0.00000256 s
400th push: 0.00000297 s
500th push: 0.00000307 s
600th push: 0.00000270 s
700th push: 0.00000312 s
800th push: 0.00000317 s
900th push: 0.00000350 s
1000th push: 0.00000343 s
-----------
    1k push: 0.0569 s (17579 push / s)

1100th push: 0.00000335 s
1200th push: 0.00000334 s
1300th push: 0.00000329 s
1400th push: 0.00002728 s
1500th push: 0.00000377 s
1600th push: 0.00000353 s
1700th push: 0.00000374 s
1800th push: 0.00000384 s
1900th push: 0.00000379 s
2000th push: 0.00000705 s
-----------
    1k push: 0.2047 s (4884 push / s)

2100th push: 0.00000448 s
2200th push: 0.00001425 s
2300th push: 0.00000521 s
2400th push: 0.00000645 s
2500th push: 0.00000595 s
2600th push: 0.00000519 s
2700th push: 0.00000528 s
2800th push: 0.00000538 s
2900th push: 0.00000585 s
3000th push: 0.00000616 s
-----------
    1k push: 0.4698 s (2128 push / s)

3100th push: 0.00001779 s
3200th push: 0.00000579 s
3300th push: 0.00000611 s
3400th push: 0.00000621 s
3500th push: 0.00000703 s
3600th push: 0.00000679 s
3700th push: 0.00000664 s
3800th push: 0.00000597 s
3900th push: 0.00000633 s
4000th push: 0.00000699 s
-----------
    1k push: 0.8474 s (1180 push / s)

4100th push: 0.00000638 s
4200th push: 0.00000653 s
4300th push: 0.00000659 s
4400th push: 0.00000675 s
4500th push: 0.00000752 s
4600th push: 0.00000727 s
4700th push: 0.00000873 s
4800th push: 0.00000699 s
4900th push: 0.00000696 s
5000th push: 0.00000708 s
-----------
    1k push: 1.2772 s (782 push / s)

5100th push: 0.00000633 s
5200th push: 0.00000664 s
5300th push: 0.00000737 s
5400th push: 0.00000703 s
5500th push: 0.00000899 s
5600th push: 0.00001435 s
5700th push: 0.00000664 s
5800th push: 0.00000689 s
5900th push: 0.00000676 s
6000th push: 0.00002528 s
-----------
    1k push: 1.8332 s (545 push / s)

6100th push: 0.00000808 s
pushed 6143 items in 5.0 s


