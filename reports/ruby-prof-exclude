RUBYLIB=lib ruby-prof --exclude-common-cycles examples/complete_tree.rb -- 
/proc/loadavg 0.81 0.24 0.09 1/95 4627
#
# Print CompleteBinary-, Ternary-, and QuaternaryTree
#

[45, 19, 97, 86, 0, 14, 80, 77, 24, 35, 0, 66, 80, 70, 67, 7, 87, 27, 5, 17, 71, 80, 10, 37, 37, 78, 98, 57, 82, 62]
#<CompSci::CompleteBinaryTree:0x0055c7391b39f0 @array=[45, 19, 97, 86, 0, 14, 80, 77, 24, 35, 0, 66, 80, 70, 67, 7, 87, 27, 5, 17, 71, 80, 10, 37, 37, 78, 98, 57, 82, 62], @child_slots=2>
                                       45                                       
                   19                                      97                   
         86                   0                  14                  80         
    77        24        35         0        66        80        70        67    
  7    87   27   5    17   71   80   10   37   37   78   98   57   82   62 



push: [83, 54, 91, 2, 98, 38, 6, 28, 64, 16, 37, 72, 53, 17, 70, 14, 10, 65, 2, 0, 40, 69, 72, 60, 7, 20, 9, 84, 66, 12]
                                       45                                       
                   19                                      97                   
         86                   0                  14                  80         
    77        24        35         0        66        80        70        67    
  7    87   27   5    17   71   80   10   37   37   78   98   57   82   62   83 
54 91 2 98 38 6 28 64 16 37 72 53 17 70 14 10 65 2 0 40 69 72 60 7 20 9 84 66 12 



[45, 19, 97, 86, 0, 14, 80, 77, 24, 35, 0, 66, 80, 70, 67, 7, 87, 27, 5, 17, 71, 80, 10, 37, 37, 78, 98, 57, 82, 62]
#<CompSci::CompleteTernaryTree:0x0055c739133f20 @array=[45, 19, 97, 86, 0, 14, 80, 77, 24, 35, 0, 66, 80, 70, 67, 7, 87, 27, 5, 17, 71, 80, 10, 37, 37, 78, 98, 57, 82, 62], @child_slots=3>
                                       45                                       
            19                        97                        86            
    0      14      80      77      24      35       0      66      80   
70 67 7 87 27 5 17 71 80 10 37 37 78 98 57 82 62 



push: [93, 53, 45, 56, 43, 5, 93, 61, 63, 37, 97, 31, 78, 23, 95, 11, 21, 98, 98, 56, 24, 73, 9, 82, 97, 68, 55, 37, 86, 72]
                                       45                                       
            19                        97                        86            
    0      14      80      77      24      35       0      66      80   
70 67 7 87 27 5 17 71 80 10 37 37 78 98 57 82 62 93 53 45 56 43 5 93 61 63 37 
97 31 78 23 95 11 21 98 98 56 24 73 9 82 97 68 55 37 86 72 



[45, 19, 97, 86, 0, 14, 80, 77, 24, 35, 0, 66, 80, 70, 67, 7, 87, 27, 5, 17, 71, 80, 10, 37, 37, 78, 98, 57, 82, 62]
#<CompSci::CompleteQuaternaryTree:0x0055c7390f1df0 @array=[45, 19, 97, 86, 0, 14, 80, 77, 24, 35, 0, 66, 80, 70, 67, 7, 87, 27, 5, 17, 71, 80, 10, 37, 37, 78, 98, 57, 82, 62], @child_slots=4>
                                       45                                       
         19                  97                  86                   0         
  14   80   77   24   35   0    66   80   70   67   7    87   27   5    17   71 
80 10 37 37 78 98 57 82 62 



push: [61, 79, 89, 33, 50, 91, 45, 1, 86, 39, 58, 17, 8, 49, 74, 41, 8, 75, 95, 57, 55, 73, 22, 2, 65, 12, 67, 54, 33, 43]
                                       45                                       
         19                  97                  86                   0         
  14   80   77   24   35   0    66   80   70   67   7    87   27   5    17   71 
80 10 37 37 78 98 57 82 62 61 79 89 33 50 91 45 1 86 39 58 17 8 49 74 41 8 75 95 57 55 73 22 2 65 12 67 54 33 43 



Measure Mode: wall_time
Thread ID: 47157071051780
Fiber ID: 47157070986360
Total: 0.008636
Sort by: self_time

 %self      total      self      wait     child     calls  name
 17.04      0.003     0.001     0.000     0.002      270   Kernel#loop
 14.91      0.006     0.001     0.000     0.005        6   CompSci::CompleteTree#display
  9.95      0.001     0.001     0.000     0.000     1077   <Class::CompSci::CompleteTree>#parent_idx
  4.62      0.000     0.000     0.000     0.000     1617   Integer#/
  3.83      0.000     0.000     0.000     0.000     1347   Integer#+
  3.04      0.000     0.000     0.000     0.000     1077   Integer#<
  2.82      0.000     0.000     0.000     0.000      292   String#+
  2.75      0.004     0.000     0.000     0.003      270   <Class::CompSci::CompleteTree>#gen
  2.67      0.000     0.000     0.000     0.000     1077   Integer#-
  2.35      0.000     0.000     0.000     0.000      543   Integer#to_s
  2.14      0.000     0.000     0.000     0.000      270   String#ljust
  1.92      0.009     0.000     0.000     0.008        2   Global#[No method]
  1.90      0.000     0.000     0.000     0.000      270   Array#max
  1.55      0.000     0.000     0.000     0.000      540   String#size
  1.54      0.000     0.000     0.000     0.000      270   BasicObject#!=
  1.45      0.000     0.000     0.000     0.000        9   Array#inspect
  1.24      0.000     0.000     0.000     0.000      180   CompSci::CompleteTree#push
  1.05      0.000     0.000     0.000     0.000      270   String#rjust
  1.00      0.000     0.000     0.000     0.000      270   Integer#==
  0.95      0.000     0.000     0.000     0.000      270   Integer#**
  0.89      0.000     0.000     0.000     0.000        4   Array#initialize
  0.83      0.000     0.000     0.000     0.000        6   Kernel#p
  0.78      0.000     0.000     0.000     0.000      270   Kernel#class
  0.55      0.000     0.000     0.000     0.000      120   Kernel#rand
  0.55      0.000     0.000     0.000     0.000      180   Array#push
  0.48      0.000     0.000     0.000     0.000      180   Array#shift
  0.43      0.000     0.000     0.000     0.000      186   Array#empty?
  0.37      0.000     0.000     0.000     0.000        2   <Module::Gem>#find_unresolved_default_spec
  0.34      0.000     0.000     0.000     0.000        3   Kernel#inspect
  0.33      0.000     0.000     0.000     0.000        6   IO#set_encoding
  0.25      0.000     0.000     0.000     0.000       28   IO#puts
  0.25      0.000     0.000     0.000     0.000       37   IO#write
  0.23      0.000     0.000     0.000     0.000        7   Class#new
  0.17      0.000     0.000     0.000     0.000       28   Kernel#puts
  0.14      0.001     0.000     0.000     0.001        4  *Kernel#require
  0.08      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_enter
  0.07      0.000     0.000     0.000     0.000        3   CompSci::CompleteTree#initialize
  0.07      0.000     0.000     0.000     0.000       13   Module#method_added
  0.06      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.05      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_exit
  0.05      0.000     0.000     0.000     0.000        6   <Class::Thread>#current
  0.04      0.000     0.000     0.000     0.000        2   <Class::Gem::Specification>#unresolved_deps
  0.04      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.04      0.000     0.000     0.000     0.000        1   Module#append_features
  0.04      0.000     0.000     0.000     0.000        4   Class#inherited
  0.03      0.000     0.000     0.000     0.000        1   CompSci::CompleteTernaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        1   CompSci::CompleteBinaryTree#initialize
  0.03      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.03      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.02      0.000     0.000     0.000     0.000        1   CompSci::CompleteQuaternaryTree#initialize
  0.02      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.02      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.02      0.000     0.000     0.000     0.000        2   Thread::Mutex#unlock
  0.02      0.000     0.000     0.000     0.000        2   MonitorMixin#mon_check_owner
  0.02      0.000     0.000     0.000     0.000        2   <Module::Gem>#suffixes
  0.02      0.000     0.000     0.000     0.000        2   Kernel#respond_to?
  0.02      0.000     0.000     0.000     0.000        2   Thread::Mutex#lock
  0.01      0.000     0.000     0.000     0.000        1   Module#included
  0.01      0.000     0.000     0.000     0.000        1   Module#alias_method

* indicates recursively called methods
RUBYLIB=lib ruby-prof --exclude-common-cycles examples/heap.rb -- 
#
# display the results of TernaryHeap push and pop
#

push: 97 70 55 69 48 6 92 49 34 84 98 59 77 93 56 39 13 12 98 89 5 53 6 50 40 41 66 74 87 56
array: [98, 98, 87, 97, 92, 93, 89, 50, 74, 84, 69, 59, 77, 48, 56, 39, 6, 12, 13, 70, 5, 53, 6, 49, 40, 34, 41, 66, 55, 56]
heap: true
                                       98                                       
            98                        87                        97            
   92      93      89      50      74      84      69      59      77   
48 56 39 6 12 13 70 5 53 6 49 40 34 41 66 55 56 


pop: 98
array: [98, 93, 87, 97, 92, 56, 89, 50, 74, 84, 69, 59, 77, 48, 56, 39, 6, 12, 13, 70, 5, 53, 6, 49, 40, 34, 41, 66, 55]
heap: true
                                       98                                       
            93                        87                        97            
   92      56      89      50      74      84      69      59      77   
48 56 39 6 12 13 70 5 53 6 49 40 34 41 66 55 


pop: 98 97 93 92 89 87 84 77 74
array: [70, 66, 50, 69, 56, 56, 53, 34, 49, 40, 6, 59, 55, 48, 5, 39, 6, 12, 13, 41]
heap: true
                                       70                                       
            66                        50                        69            
   56      56      53      34      49      40       6      59      55   
48 5 39 6 12 13 41 


push: 94 31 27 14 57 36 83 23 59 67 70 12 72 96 92 97 72 60 36 72 82 69 87 10 65 62 16 20 28 19
array: [97, 87, 83, 96, 82, 56, 66, 50, 57, 70, 72, 94, 72, 70, 65, 39, 19, 12, 13, 41, 53, 31, 27, 14, 34, 36, 49, 23, 40, 59, 67, 6, 12, 69, 59, 92, 72, 55, 36, 60, 48, 56, 69, 5, 10, 62, 16, 20, 28, 6]
heap: true
                                       97                                       
            87                        83                        96            
   82      56      66      50      57      70      72      94      72   
70 65 39 19 12 13 41 53 31 27 14 34 36 49 23 40 59 67 6 12 69 59 92 72 55 36 60 
48 56 69 5 10 62 16 20 28 6 

Measure Mode: wall_time
Thread ID: 46967453924380
Fiber ID: 46967453858420
Total: 0.009444
Sort by: self_time

 %self      total      self      wait     child     calls  name
  7.15      0.003     0.001     0.000     0.002        4   CompSci::CompleteTree#display
  6.25      0.001     0.001     0.000     0.001      129   Kernel#loop
  5.65      0.001     0.001     0.000     0.001      336   CompSci::Heap#heapish?
  5.55      0.001     0.001     0.000     0.000      557   <Class::CompSci::CompleteTree>#parent_idx
  4.72      0.003     0.000     0.000     0.002      165  *Array#initialize
  3.96      0.000     0.000     0.000     0.000     1555   Integer#+
  2.72      0.000     0.000     0.000     0.000      940   Integer#<
  2.64      0.000     0.000     0.000     0.000      465   BasicObject#!=
  2.58      0.000     0.000     0.000     0.000      814   Array#[]
  2.29      0.000     0.000     0.000     0.000      822   Integer#*
  2.15      0.001     0.000     0.000     0.001      108  *CompSci::Heap#sift_up
  2.01      0.000     0.000     0.000     0.000      815   Integer#/
  1.75      0.000     0.000     0.000     0.000      579   Array#length
  1.63      0.000     0.000     0.000     0.000      617   Integer#-
  1.24      0.002     0.000     0.000     0.001      129   <Class::CompSci::CompleteTree>#gen
  1.14      0.000     0.000     0.000     0.000      394   Kernel#class
  1.14      0.003     0.000     0.000     0.003      166  *Class#new
  1.13      0.000     0.000     0.000     0.000      457   Integer#==
  1.11      0.000     0.000     0.000     0.000       33   CompSci::Heap#heapiest
  1.05      0.000     0.000     0.000     0.000      327   Integer#to_s
  1.03      0.000     0.000     0.000     0.000      142   String#+
  0.95      0.000     0.000     0.000     0.000      129   String#rjust
  0.89      0.001     0.000     0.000     0.001      162   <Class::CompSci::CompleteTree>#children_idx
  0.85      0.001     0.000     0.000     0.001       60   CompSci::Heap#push
  0.85      0.009     0.000     0.000     0.009        2   Global#[No method]
  0.84      0.000     0.000     0.000     0.000      336   Integer#<=>
  0.71      0.000     0.000     0.000     0.000      136   BasicObject#!
  0.69      0.000     0.000     0.000     0.000      129   String#ljust
  0.64      0.000     0.000     0.000     0.000      258   String#size
  0.59      0.001     0.000     0.000     0.001       33  *CompSci::Heap#sift_down
  0.56      0.000     0.000     0.000     0.000        4   Array#inspect
  0.54      0.000     0.000     0.000     0.000      142   Array#[]=
  0.52      0.000     0.000     0.000     0.000      129   Integer#**
  0.52      0.002     0.000     0.000     0.002      129  *CompSci::Heap#heap?
  0.46      0.000     0.000     0.000     0.000        3   Array#join
  0.43      0.001     0.000     0.000     0.001       60   Kernel#tap
  0.41      0.000     0.000     0.000     0.000      125   Array#<<
  0.36      0.000     0.000     0.000     0.000      129   Array#max
  0.34      0.000     0.000     0.000     0.000      108   Integer#<=
  0.34      0.000     0.000     0.000     0.000       40   IO#write
  0.31      0.001     0.000     0.000     0.001       10   CompSci::Heap#pop
  0.31      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.29      0.003     0.000     0.000     0.003       24   IO#puts
  0.27      0.000     0.000     0.000     0.000       60   Kernel#rand
  0.22      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.22      0.000     0.000     0.000     0.000       60   Array#push
  0.19      0.003     0.000     0.000     0.003       24   Kernel#puts
  0.14      0.000     0.000     0.000     0.000       33   Integer#>=
  0.13      0.000     0.000     0.000     0.000        4   String#%
  0.12      0.000     0.000     0.000     0.000       22   Module#method_added
  0.11      0.000     0.000     0.000     0.000        4   TrueClass#to_s
  0.10      0.001     0.000     0.000     0.001        6  *Kernel#require
  0.10      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.09      0.000     0.000     0.000     0.000       10   Array#pop
  0.09      0.000     0.000     0.000     0.000       33   Array#first
  0.08      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.06      0.000     0.000     0.000     0.000        1   Module#attr_reader
  0.05      0.000     0.000     0.000     0.000       10   Array#unshift
  0.05      0.000     0.000     0.000     0.000        7   BasicObject#singleton_method_added
  0.04      0.000     0.000     0.000     0.000        1   CompSci::Heap#initialize
  0.04      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.04      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.04      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.04      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.03      0.000     0.000     0.000     0.000       10   Array#shift
  0.03      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.03      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.02      0.000     0.000     0.000     0.000        1   Module#append_features
  0.02      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock
  0.02      0.000     0.000     0.000     0.000        8   BasicObject#==
  0.02      0.000     0.000     0.000     0.000        1   CompSci::CompleteTree#initialize
  0.02      0.000     0.000     0.000     0.000        1   Module#alias_method
  0.02      0.000     0.000     0.000     0.000        5   Class#inherited
  0.02      0.000     0.000     0.000     0.000        3   Kernel#respond_to?
  0.00      0.000     0.000     0.000     0.000        1   Module#included

* indicates recursively called methods
RUBYLIB=lib ruby-prof --exclude-common-cycles examples/heap_push.rb -- 
RUBYLIB=lib ruby-prof --exclude-common-cycles examples/tree.rb -- 
#
# Fill up and display some trees
#

[2, 51, 42, 58, 45, 33, 46, 51, 54, 34, 65, 34, 54, 15, 7, 18, 36, 17, 45, 41, 77, 22, 86, 12, 38, 75, 27, 30, 58, 23]

#<CompSci::Node:0x2b25529162dci @value=2 @children=[51, 42]>
                                        2                                       
                   51                                      42                   
         58                  45                  33                  46         
    51        54        34        65        34        54        15         7    
  18   36   17   45   41   77   22   86   12   38   75   27   30   58   23      



#<CompSci::Node:0x2b255290de0ci @value=2 @children=[51, 42, 58]>
                                        2                                       
            51                        42                        58            
   45      33      46      51      54      34      65      34      54   
15 7 18 36 17 45 41 77 22 86 12 38 75 27 30 58 23                     



#<CompSci::Node:0x2b25528d0214i @value=2 @children=[51, 42, 58, 45]>
RUBYLIB=lib ruby-prof --exclude-common-cycles examples/push_tree.rb -- 
#
# Try out Binary, Ternary, and Quaternary PushTrees
# Push the same vals to each
#

[42, 75, 24, 94, 31, 3, 61, 90, 51, 57, 68, 25, 47, 48, 33, 66, 38, 9, 91, 42, 94, 42, 1, 84, 27, 40, 29, 80, 67, 73]
#<CompSci::PushTree:0x00561fb27b6678 @root=#<CompSci::ChildFlexNode:0x2b0fd93db3dci @value=42 @children=[75, 24]>, @child_slots=2, @open_parent=#<CompSci::ChildFlexNode:0x2b0fd93dabe4i @value=33 @children=[73]>>
                                       42                                       
                   75                                      24                   
         94                  31                   3                  61         
    90        51        57        68        25        47        48        33    
  66   38   9    91   42   94   42   1    84   27   40   29   80   67   73   _  

df_search visited: 42 75 94 90 66 38 51 9 91 31 57 42 94 68 42 1 24 3 25 84 27 47 40 29 61 48 80 67 33 73


push: [19, 4, 14, 6, 91, 28, 90, 58, 55, 6, 46, 59, 80, 8, 61, 68, 8, 9, 57, 15, 39, 56, 95, 78, 3, 84, 63, 47, 59, 63]

                                       42                                       
                   75                                      24                   
         94                  31                   3                  61         
    90        51        57        68        25        47        48        33    
  66   38   9    91   42   94   42   1    84   27   40   29   80   67   73   19 
4 14 6 91 28 90 58 55 6 46 59 80 8 61 68 8 9 57 15 39 56 95 78 3 84 63 47 59 63 _ _ _ 


[42, 75, 24, 94, 31, 3, 61, 90, 51, 57, 68, 25, 47, 48, 33, 66, 38, 9, 91, 42, 94, 42, 1, 84, 27, 40, 29, 80, 67, 73]
#<CompSci::PushTree:0x00561fb2724e30 @root=#<CompSci::ChildFlexNode:0x2b0fd939277ci @value=42 @children=[75, 24, 94]>, @child_slots=3, @open_parent=#<CompSci::ChildFlexNode:0x2b0fd9392308i @value=57 @children=[67, 73]>>
                                       42                                       
            75                        24                        94            
   31       3      61      90      51      57      68      25      47   
48 33 66 38 9 91 42 94 42 1 84 27 40 29 80 67 73 _ _ _ _ _ _ _ _ _ _ 

df_search visited: 42 75 31 48 33 66 3 38 9 91 61 42 94 42 24 90 1 84 27 51 40 29 80 57 67 73 94 68 25 47


push: [6, 89, 65, 14, 39, 92, 22, 61, 54, 38, 68, 37, 84, 59, 10, 65, 48, 1, 78, 16, 82, 75, 89, 54, 56, 32, 84, 77, 83, 84]

                                       42                                       
            75                        24                        94            
   31       3      61      90      51      57      68      25      47   
48 33 66 38 9 91 42 94 42 1 84 27 40 29 80 67 73 6 89 65 14 39 92 22 61 54 38 
68 37 84 59 10 65 48 1 78 16 82 75 89 54 56 32 84 77 83 84 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 


[42, 75, 24, 94, 31, 3, 61, 90, 51, 57, 68, 25, 47, 48, 33, 66, 38, 9, 91, 42, 94, 42, 1, 84, 27, 40, 29, 80, 67, 73]
#<CompSci::PushTree:0x00561fb25acd50 @root=#<CompSci::ChildFlexNode:0x2b0fd92d66f8i @value=42 @children=[75, 24, 94, 31]>, @child_slots=4, @open_parent=#<CompSci::ChildFlexNode:0x2b0fd92d61d0i @value=90 @children=[73]>>
                                       42                                       
         75                  24                  94                  31         
  3    61   90   51   57   68   25   47   48   33   66   38   9    91   42   94 
42 1 84 27 40 29 80 67 73 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

df_search visited: 42 75 3 42 1 84 27 61 40 29 80 67 90 73 51 24 57 68 25 47 94 48 33 66 38 31 9 91 42 94


push: [13, 71, 91, 85, 4, 64, 61, 64, 82, 84, 95, 33, 13, 51, 85, 14, 27, 18, 31, 83, 17, 94, 10, 37, 25, 5, 69, 87, 83, 92]

                                       42                                       
         75                  24                  94                  31         
  3    61   90   51   57   68   25   47   48   33   66   38   9    91   42   94 
42 1 84 27 40 29 80 67 73 13 71 91 85 4 64 61 64 82 84 95 33 13 51 85 14 27 18 31 83 17 94 10 37 25 5 69 87 83 92 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 


#
# 30 inserts, puts, df_search
#

[9, 29, 41, 90, 78, 23, 79, 18, 85, 2, 83, 39, 12, 51, 20, 84, 29, 75, 9, 71, 41, 12, 97, 74, 34, 90, 13, 22, 81, 43]
                                        9                                       
                   29                                      41                   
         90                  78                  23                  79         
    18        85         2        83        39        12        51        20    
  84   29   75   9    71   41   12   97   74   34   90   13   22   81   43   _  
#<CompSci::PushTree:0x00561fb2733778 @root=#<CompSci::ChildFlexNode:0x2b0fd9399c70i @value=9 @children=[29, 41]>, @child_slots=2, @open_parent=#<CompSci::ChildFlexNode:0x2b0fd9398d5ci @value=20 @children=[43]>>

visited 9
visited 29
visited 90
visited 18
visited 84
visited 29
visited 85
visited 75
visited 9
visited 78
visited 2
visited 71
visited 41
visited 83
visited 12
visited 97
visited 41
visited 23
visited 39
visited 74
visited 34
visited 12
visited 90
visited 13
visited 79
visited 51
visited 22
visited 81
visited 20
visited 43

push: [14, 98, 23, 51, 29, 46, 7, 7, 58, 83, 94, 53, 16, 10, 25, 2, 66, 85, 98, 76, 77, 1, 3, 95, 18, 49, 74, 65, 84, 69]
                                        9                                       
                   29                                      41                   
         90                  78                  23                  79         
    18        85         2        83        39        12        51        20    
  84   29   75   9    71   41   12   97   74   34   90   13   22   81   43   14 
98 23 51 29 46 7 7 58 83 94 53 16 10 25 2 66 85 98 76 77 1 3 95 18 49 74 65 84 69 _ _ _ 

#
# 5 seconds worth of pushes
#

100th push: 0.00003174 s
200th push: 0.00001313 s
300th push: 0.00001330 s
400th push: 0.00001344 s
500th push: 0.00001345 s
600th push: 0.00001369 s
700th push: 0.00001425 s
800th push: 0.00001390 s
900th push: 0.00001430 s
1000th push: 0.00001417 s
-----------
    1k push: 0.3280 s (3048 push / s)

1100th push: 0.00001660 s
1200th push: 0.00001401 s
1300th push: 0.00001437 s
1400th push: 0.00001471 s
1500th push: 0.00004428 s
1600th push: 0.00001481 s
1700th push: 0.00001471 s
1800th push: 0.00001626 s
1900th push: 0.00001525 s
2000th push: 0.00001571 s
-----------
    1k push: 0.9700 s (1030 push / s)

2100th push: 0.00001545 s
2200th push: 0.00001663 s
2300th push: 0.00001502 s
2400th push: 0.00001684 s
2500th push: 0.00001764 s
2600th push: 0.00001721 s
2700th push: 0.00001634 s
2800th push: 0.00001605 s
2900th push: 0.00005075 s
3000th push: 0.00002193 s
-----------
    1k push: 1.7487 s (571 push / s)

3100th push: 0.00001964 s
3200th push: 0.00001657 s
3300th push: 0.00001830 s
3400th push: 0.00001740 s
3500th push: 0.00001735 s
3600th push: 0.00001800 s
3700th push: 0.00001826 s
pushed 3763 items in 5.0 s

Measure Mode: wall_time
Thread ID: 47347068189700
Fiber ID: 47347068125220
Total: 5.023261
Sort by: self_time

 %self      total      self      wait     child     calls  name
 32.91      4.906     1.653     0.000     3.253      982   CompSci::PushTree#bf_search
 22.97      1.154     1.154     0.000     0.000   886540   Array#+
 16.95      1.262     0.851     0.000     0.410   894971   CompSci::PushTree#open_parent?
  7.88      0.396     0.396     0.000     0.000   887251   Array#shift
  4.87      0.245     0.245     0.000     0.000   887255   Array#empty?
  4.15      0.209     0.209     0.000     0.000   888070   BasicObject#!
  4.09      0.205     0.205     0.000     0.000   895552   Array#length
  4.08      0.205     0.205     0.000     0.000   894971   Integer#<
  0.23      5.006     0.012     0.000     4.995        1   Kernel#loop
  0.19      0.018     0.010     0.000     0.009     4526   Class#new
  0.17      4.938     0.008     0.000     4.930     3999   CompSci::PushTree#open_parent
  0.15      0.007     0.007     0.000     0.000     4004   CompSci::ChildFlexNode#initialize
  0.14      0.013     0.007     0.000     0.005     1972   Enumerable#find
  0.13      0.012     0.006     0.000     0.006     3999   CompSci::ChildFlexNode#add_child
  0.10      0.035     0.005     0.000     0.030     3999   CompSci::ChildFlexNode#new_child
  0.10      4.978     0.005     0.000     4.973     3999   CompSci::PushTree#push
  0.09      0.012     0.004     0.000     0.007     3804   <Module::CompSci::Timer>#since
  0.07      0.018     0.003     0.000     0.015     1972   CompSci::PushTree#open_sibling
  0.07      0.003     0.003     0.000     0.000     3944   Kernel#rand
  0.06      0.006     0.003     0.000     0.003     3846   <Module::CompSci::Timer>#now
  0.06      0.003     0.003     0.000     0.000     3763   Float#>
  0.05      0.003     0.003     0.000     0.000     3846   <Module::Process>#clock_gettime
  0.05      0.004     0.002     0.000     0.001     3999   BasicObject#!=
  0.04      0.002     0.002     0.000     0.000     4120   Array#<<
  0.04      0.004     0.002     0.000     0.002       39   <Class::CompSci::Node>#display_line
  0.03      0.002     0.002     0.000     0.000     3804   Float#-
  0.03      0.002     0.002     0.000     0.000     4801   Integer#+
  0.03      0.001     0.001     0.000     0.000     1972   CompSci::ChildNode#siblings
  0.03      0.001     0.001     0.000     0.000     3999   BasicObject#==
  0.02      0.001     0.001     0.000     0.000     3800   Integer#%
  0.02      0.001     0.001     0.000     0.000     1980   Kernel#respond_to?
  0.02      0.001     0.001     0.000     0.000     4046   Kernel#class
  0.02      0.001     0.001     0.000     0.000     3800   Integer#==
  0.02      0.001     0.001     0.000     0.000      517   Array#initialize
  0.01      0.001     0.001     0.000     0.000       52   String#%
  0.01      0.008     0.001     0.000     0.007        8   CompSci::Node#display
  0.01      0.001     0.001     0.000     0.001       39   Array#any?
  0.01      0.000     0.000     0.000     0.000      749   Integer#to_s
  0.01      0.001     0.000     0.000     0.000      504   CompSci::Node#to_s
  0.01      0.000     0.000     0.000     0.000      519   String#ljust
  0.01      5.023     0.000     0.000     5.023        2   Global#[No method]
  0.01      0.000     0.000     0.000     0.000     1038   String#size
  0.01      0.000     0.000     0.000     0.000     1028   NilClass#nil?
  0.00      0.000     0.000     0.000     0.000      206   IO#write
  0.00      0.000     0.000     0.000     0.000      968   Array#[]
  0.00      0.000     0.000     0.000     0.000      519   String#rjust
  0.00      0.000     0.000     0.000     0.000        8   Kernel#p
  0.00      0.000     0.000     0.000     0.000       58   Array#join
  0.00      0.001     0.000     0.000     0.001       37   <Module::CompSci::Timer>#elapsed
  0.00      0.000     0.000     0.000     0.000      558   Array#max
  0.00      0.000     0.000     0.000     0.000      558   Integer#/
  0.00      0.000     0.000     0.000     0.000      117   Kernel#puts
  0.00      0.000     0.000     0.000     0.000      117   IO#puts
  0.00      0.000     0.000     0.000     0.000        8   Array#inspect
  0.00      0.000     0.000     0.000     0.000        4   Kernel#inspect
  0.00      0.000     0.000     0.000     0.000        8   IO#set_encoding
  0.00      0.000     0.000     0.000     0.000      120  *CompSci::PushTree#df_search
  0.00      0.000     0.000     0.000     0.000       31   Integer#**
  0.00      0.002     0.000     0.000     0.002        6  *Kernel#require
  0.00      0.000     0.000     0.000     0.000        8   CompSci::Node#inspect
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#find_unresolved_default_spec
  0.00      0.000     0.000     0.000     0.000       43   Module#method_added
  0.00      0.000     0.000     0.000     0.000        3   Module#attr_reader
  0.00      0.000     0.000     0.000     0.000        2   Module#attr_accessor
  0.00      0.000     0.000     0.000     0.000       31   Kernel#nil?
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_enter
  0.00      0.000     0.000     0.000     0.000       31   Integer#>
  0.00      0.000     0.000     0.000     0.000        8   Module#to_s
  0.00      0.000     0.000     0.000     0.000        5   CompSci::PushTree#initialize
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_exit
  0.00      0.000     0.000     0.000     0.000        8   Class#inherited
  0.00      0.000     0.000     0.000     0.000        3   Kernel#dup
  0.00      0.000     0.000     0.000     0.000        3   MonitorMixin#mon_check_owner
  0.00      0.000     0.000     0.000     0.000        3   Integer#to_f
  0.00      0.000     0.000     0.000     0.000        3   <Module::Gem>#suffixes
  0.00      0.000     0.000     0.000     0.000        3   Float#/
  0.00      0.000     0.000     0.000     0.000        3   <Class::Gem::Specification>#unresolved_deps
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#include
  0.00      0.000     0.000     0.000     0.000        6   BasicObject#singleton_method_added
  0.00      0.000     0.000     0.000     0.000        9   <Class::Thread>#current
  0.00      0.000     0.000     0.000     0.000        8   Kernel#object_id
  0.00      0.000     0.000     0.000     0.000        3   Kernel#initialize_dup
  0.00      0.000     0.000     0.000     0.000        1   Module#append_features
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#lock
  0.00      0.000     0.000     0.000     0.000        3   Array#initialize_copy
  0.00      0.000     0.000     0.000     0.000        1   Module#included
  0.00      0.000     0.000     0.000     0.000        3   Thread::Mutex#unlock

* indicates recursively called methods
