Run options: --seed 22076

# Running:

.....................................................................S...S......................

Finished in 0.324324s, 296.0006 runs/s, 3172.7561 assertions/s.

96 runs, 1029 assertions, 0 failures, 0 errors, 2 skips

You have skipped tests. Run with --verbose for details.
/proc/loadavg 0.08 0.02 0.01 1/80 1321
Warming up --------------------------------------
Fibonacci.classic(25)
                         7.000  i/100ms
Fibonacci.cache_recursive(25)
                        10.454k i/100ms
Fibonacci.cache_iterative(25)
                        23.045k i/100ms
Calculating -------------------------------------
Fibonacci.classic(25)
                         69.887  (± 4.3%) i/s -    210.000  in   3.012128s
Fibonacci.cache_recursive(25)
                        111.220k (± 2.9%) i/s -    334.528k in   3.010284s
Fibonacci.cache_iterative(25)
                        273.477k (± 2.4%) i/s -    829.620k in   3.035323s

Comparison:
Fibonacci.cache_iterative(25):   273476.6 i/s
Fibonacci.cache_recursive(25):   111219.7 i/s - 2.46x  slower
Fibonacci.classic(25):       69.9 i/s - 3913.15x  slower

Warming up --------------------------------------
Fibonacci.cache_iterative(500)
                       605.000  i/100ms
Fibonacci.dynamic(500)
                       653.000  i/100ms
Fibonacci.matrix(500)
                       894.000  i/100ms
Calculating -------------------------------------
Fibonacci.cache_iterative(500)
                          7.105k (± 2.8%) i/s -     21.780k in   3.068088s
Fibonacci.dynamic(500)
                          6.996k (± 6.0%) i/s -     21.549k in   3.091558s
Fibonacci.matrix(500)
                          8.998k (± 3.9%) i/s -     27.714k in   3.084999s

Comparison:
Fibonacci.matrix(500):     8998.1 i/s
Fibonacci.cache_iterative(500):     7104.5 i/s - 1.27x  slower
Fibonacci.dynamic(500):     6996.1 i/s - 1.29x  slower

Warming up --------------------------------------
        Simplex init   925.000  i/100ms
         init, solve    77.000  i/100ms
Calculating -------------------------------------
        Simplex init      8.734k (± 5.6%) i/s -     26.825k in   3.082078s
         init, solve    495.724  (±20.2%) i/s -      1.463k in   3.069023s

Comparison:
        Simplex init:     8734.1 i/s
         init, solve:      495.7 i/s - 17.62x  slower

SIMPLEX_PARAMS.size = 14
simplices.size = 14
memsize(SIMPLEX_PARAMS): 152
memsize(simplices): 152
memsize(simplices after solving): 152
memsize(results): 152
Warming up --------------------------------------
99x BinaryTree(ChildNode)#push
                       178.000  i/100ms
99x BinaryTree(Node)#push
                       123.000  i/100ms
99x TernaryTree(ChildNode)#push
                       291.000  i/100ms
99x TernaryTree(Node)#push
                       200.000  i/100ms
Calculating -------------------------------------
99x BinaryTree(ChildNode)#push
                          1.642k (± 7.8%) i/s -      4.984k in   3.055252s
99x BinaryTree(Node)#push
                          1.185k (± 4.8%) i/s -      3.567k in   3.016145s
99x TernaryTree(ChildNode)#push
                          3.230k (± 4.7%) i/s -      9.894k in   3.070835s
99x TernaryTree(Node)#push
                          2.219k (± 1.8%) i/s -      6.800k in   3.066062s

Comparison:
99x TernaryTree(ChildNode)#push:     3229.7 i/s
99x TernaryTree(Node)#push:     2218.6 i/s - 1.46x  slower
99x BinaryTree(ChildNode)#push:     1641.8 i/s - 1.97x  slower
99x BinaryTree(Node)#push:     1185.4 i/s - 2.72x  slower

Run options: --seed 58746

# Running:

bench_Heap_push_constant_0_9999_	 0.000054	 0.000033	 0.000288	 0.001446	 0.013621
.

Finished in 0.032601s, 30.6737 runs/s, 30.6737 assertions/s.

1 runs, 1 assertions, 0 failures, 0 errors, 0 skips
